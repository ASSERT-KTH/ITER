bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
2	[BUG]  [BUGGY]  if(fsal  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	31	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ==  fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  ==  fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  ==  fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ==  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  ==  null);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  ==  null);	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ==  null)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  ==  null)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  ==  null)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(fsal!=  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal!=  null);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal!=  null);	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
7	[BUG]  [BUGGY]  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
8	[BUG]  [BUGGY]  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setMinGrowth(1.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setMinGrowth(1.0);	  if(fsal)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
9	[BUG]  [BUGGY]  Settings.checkState(false);  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings.checkState(false);  setMinGrowth(1.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings.checkState(false);  setMinGrowth(1.0);	  if(fsal)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setSafety(1.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  1;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  1;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  setSafety(1.0  /  getOrder());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(1.0  /  getOrder());  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(1.0  /  getOrder());	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  setSafety(2.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(2.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(2.0);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  if(a!=  null)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(prototype!=  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
16	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
17	[BUG]  [BUGGY]  if(fsal  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
18	[BUG]  [BUGGY]  if(fsal!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
19	[BUG]  [BUGGY]  if(fsal!=  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
20	[BUG]  [BUGGY]  if(fsal  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	46	None	replace
21	[BUG]  [BUGGY]  this.b  =  c;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.b  =  c;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  c;	  this.b    =    a;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
22	[BUG]  [BUGGY]  this.b  =  d;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.b  =  d;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  d;	  this.b    =    a;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
23	[BUG]  [BUGGY]  Settings.checkState(true);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings.checkState(true);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings.checkState(true);	  Settings.checkState(false);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  Settings.checkState(false,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings.checkState(false,  true);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings.checkState(false,  true);	  Settings.checkState(false);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  Settings.checkState(false,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings.checkState(false,  false);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings.checkState(false,  false);	  Settings.checkState(false);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }	  if(fsal)    {    setSafety(0);    }    else    {    setSafety(1);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
27	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(2);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(2);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(0);  }  else  {  setSafety(2);  }	  if(fsal)    {    setSafety(0);    }    else    {    setSafety(1);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
28	[BUG]  [BUGGY]  if(fsal)  {  setSafety(2);  }  else  {  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(2);  }  else  {  setSafety(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(2);  }  else  {  setSafety(1);  }	  if(fsal)    {    setSafety(0);    }    else    {    setSafety(1);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
29	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
30	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
31	[BUG]  [BUGGY]  for(final  int  a,  final  int  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  int  a,  final  int  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  int  a,  final  int  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
32	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
33	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
34	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  long  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  long  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  long  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
35	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null    ||    b    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
36	[BUG]  [BUGGY]  if(c  ==  null  ||  c  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null  ||  c  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null  ||  c  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null    ||    b    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
37	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  int  minStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
39	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
40	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep)  {  super(name,  maxStep,  minStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep)  {  super(name,  maxStep,  minStep,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep)  {  super(name,  maxStep,  minStep,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
41	[BUG]  [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
42	[BUG]  [BUGGY]  if(a!=  fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }	  if(a!=    fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
43	[BUG]  [BUGGY]  if(fsal!=  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
44	[BUG]  [BUGGY]  this.b  =  b  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.b  =  b  +  1;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  b  +  1;	  this.b    =    b;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  if(c!=  null  &&  a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null  &&  a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null  &&  a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
46	[BUG]  [BUGGY]  if(c!=  null  &&  a  ==  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null  &&  a  ==  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null  &&  a  ==  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
47	[BUG]  [BUGGY]  This.a  =  a;  this.b  =  b;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  This.a  =  a;  this.b  =  b;  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	This.a  =  a;  this.b  =  b;	  if(a!=    null    &&    b!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
49	[BUG]  [BUGGY]  if(a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
50	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setMinGrowth(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setMinGrowth(1.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  1;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  1;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
53	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(a!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype!=  null)  {  if(a!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  if(a!=  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
54	[BUG]  [BUGGY]  if(a  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
55	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(a  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype!=  null)  {  if(a  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  if(a  ==  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
56	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(0);  }	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
57	[BUG]  [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
58	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
59	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
60	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  long  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  long  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  long  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
61	[BUG]  [BUGGY]  if(fsal)  {  for(final  int  a,  final  int  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  int  a,  final  int  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  int  a,  final  int  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
62	[BUG]  [BUGGY]  if(a!=  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
63	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
64	[BUG]  [BUGGY]  if(a!=  null)  {  if(b  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(b  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(b  ==  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
65	[BUG]  [BUGGY]  if(a  ==  null)  {  if(b  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(b  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(b  ==  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
66	[BUG]  [BUGGY]  if(a  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  this.a  =  a;  this.b  =  b;  }	  if(a!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
67	[BUG]  [BUGGY]  if(c  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(c!=    null)    {    this.a    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  if(b  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(c!=    null)    {    this.a    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	77	None	replace
70	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	77	None	replace
71	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	77	None	replace
72	[BUG]  [BUGGY]  if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	56	None	replace
73	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	56	None	replace
74	[BUG]  [BUGGY]  if(fsal)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMinReduction(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinReduction(1);  }	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
75	[BUG]  [BUGGY]  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setMinReduction(1.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setMinReduction(1.0);	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
76	[BUG]  [BUGGY]  if(fsal)  {  setMinReduction(0.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMinReduction(0.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinReduction(0.0);  }	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
77	[BUG]  [BUGGY]  safe(fsal);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal);	  safety(fsal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  safe(c);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(c);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(c);	  safety(fsal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  safety(a);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safety(a);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(a);	  safety(fsal);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
81	[BUG]  [BUGGY]  if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
82	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
83	[BUG]  [BUGGY]  if(c!=  null  &&  a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null  &&  a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null  &&  a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
84	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
85	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setMinGrowth(1.0);  }	  if(a!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
86	[BUG]  [BUGGY]  safe(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
87	[BUG]  [BUGGY]  safe(c)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(c)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(c)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
88	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	78	None	replace
89	[BUG]  [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	78	None	replace
90	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    b.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    b.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  if(a  ==  null)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
93	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
94	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(10.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(10.0);  }	  if(a!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
95	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setMinGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setMinGrowth(10.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setMinGrowth(10.0);  }	  if(a!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
96	[BUG]  [BUGGY]  this.a  =  a  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.a  =  a  +  1;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  a  +  1;	  this.a    =    c    +    1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
97	[BUG]  [BUGGY]  luate(c,  a,  b,  minStep,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  minStep,  scalAbsoluteTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  minStep,  scalAbsoluteTolerance);	  luate(c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
98	[BUG]  [BUGGY]  luate(c,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  minStep,  maxStep,  scalAbsoluteTolerance);	  luate(c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
99	[BUG]  [BUGGY]  luate(c,  a,  b,  maxStep,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  maxStep,  scalAbsoluteTolerance);	  luate(c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(0.0);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
101	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(0.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(0.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(0.0);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
103	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
104	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
105	[BUG]  [BUGGY]  if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null)    {    this.a    =    b;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
106	[BUG]  [BUGGY]  this.a  =  b;  this.b  =  b;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.a  =  b;  this.b  =  b;  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  b;  this.b  =  b;	  if(a!=    null)    {    this.a    =    b;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
107	[BUG]  [BUGGY]  if(b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null)    {    this.a    =    b;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
108	[BUG]  [BUGGY]  safe(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
109	[BUG]  [BUGGY]  safe(c)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(c)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(c)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
110	[BUG]  [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }	  if(fsal)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
111	[BUG]  [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	  if(fsal)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
112	[BUG]  [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(int  i  =  0;  i  <  this.c.size();  ++i)  {  setSafety(1.0);  }	  if(fsal)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
113	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setSafety(1.0);  }	  if(a!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
114	[BUG]  [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
115	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
116	[BUG]  [BUGGY]  if(a  ==  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
118	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings  settings  =  Settings.getInstance();  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings  settings  =  Settings.getInstance();	  if(a!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
119	[BUG]  [BUGGY]  Settings  settings  =  Settings.newHashSet();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings  settings  =  Settings.newHashSet();  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings  settings  =  Settings.newHashSet();	  if(a!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
120	[BUG]  [BUGGY]  if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1);  }	  if(c    ==    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
121	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }	  if(a!=    null    ||    b    ==    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
122	[BUG]  [BUGGY]  safely(1.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safely(1.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely(1.0);	  safety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
123	[BUG]  [BUGGY]  safety(1.0f);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safety(1.0f);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(1.0f);	  safety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
124	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null    ||    b    ==    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
125	[BUG]  [BUGGY]  if(c  ==  null  ||  c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null  ||  c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null  ||  c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null    ||    b    ==    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
126	[BUG]  [BUGGY]  safely(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safely(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinReduction(0.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	92	None	replace
127	[BUG]  [BUGGY]  if(fsal)  {  setMinGrowth(0.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMinGrowth(0.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinGrowth(0.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinReduction(0.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
128	[BUG]  [BUGGY]  luate(c,  a,  b,  minStep,  scalRelativeTolerance);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  minStep,  scalRelativeTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  minStep,  scalRelativeTolerance);	  luate(c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
129	[BUG]  [BUGGY]  luate(c,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  minStep,  maxStep,  scalRelativeTolerance);	  luate(c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
130	[BUG]  [BUGGY]  luate(c,  a,  b,  maxStep,  scalRelativeTolerance);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  maxStep,  scalRelativeTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  maxStep,  scalRelativeTolerance);	  luate(c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
131	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  a);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0,  a);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0,  a);  }  else  {  setSafety(1.0);  }	  if(fsal)    {    setSafety(1.0,    b);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
132	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  }	  if(fsal)    {    setSafety(1.0,    b);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
133	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  b);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0,  b);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0,  b);  }	  if(fsal)    {    setSafety(1.0,    b);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
134	[BUG]  [BUGGY]  if(a!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
135	[BUG]  [BUGGY]  if(c!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
136	[BUG]  [BUGGY]  if(a  ==  null)  {  if(b!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(b!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(b!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
137	[BUG]  [BUGGY]  if(a!=  null)  {  if(b  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(b  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(b  ==  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(10.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(10.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
139	[BUG]  [BUGGY]  if(a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
140	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
142	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
143	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
144	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
145	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalReduction)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalReduction)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalReduction)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
146	[BUG]  [BUGGY]  if(c!=  null)  {  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
147	[BUG]  [BUGGY]  if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	88	None	replace
148	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	88	None	replace
149	[BUG]  [BUGGY]  ||  exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  ||  exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	||  exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
150	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(a!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype!=  null)  {  if(a!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  if(a!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
151	[BUG]  [BUGGY]  if(a  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(a  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype!=  null)  {  if(a  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  if(a  ==  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
153	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
154	[BUG]  [BUGGY]  if(prototype  ==  null)  {  if(a  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype  ==  null)  {  if(a  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype  ==  null)  {  if(a  ==  null)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
155	[BUG]  [BUGGY]  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
156	[BUG]  [BUGGY]  if(a!=  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
157	[BUG]  [BUGGY]  setSafety(1.0d);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(1.0d);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(1.0d);	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
158	[BUG]  [BUGGY]  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
159	[BUG]  [BUGGY]  This.a  =  fsal;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  This.a  =  fsal;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	This.a  =  fsal;	  if(fsal!=    null)    {    this.a    =    fsal;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
160	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
161	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
162	[BUG]  [BUGGY]  if(fsal)  {  if(a  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  if(a  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(a  ==  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(a!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
163	[BUG]  [BUGGY]  if(fsal)  {  if(a!=  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  if(a!=  null)  {  setMinReduction(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(a!=  null)  {  setMinReduction(1);  }	  if(fsal)    {    if(a!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
164	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
165	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
166	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  safety)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  safety)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  safety)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
167	[BUG]  [BUGGY]  this.c  =  c;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.c  =  c;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.c  =  c;	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
168	[BUG]  [BUGGY]  this.c  =  new  double[Math.max(10,  Math.min(10,  maxStep)];  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.c  =  new  double[Math.max(10,  Math.min(10,  maxStep)];  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.c  =  new  double[Math.max(10,  Math.min(10,  maxStep)];	  this.c    =    a;    	non-compiled	[CE]  ')'  expected	86	None	replace
169	[BUG]  [BUGGY]  this.a  =  c;  this.b  =  b;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.a  =  c;  this.b  =  b;  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  c;  this.b  =  b;	  this.a    =    a;    this.b    =    b;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
170	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
171	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  int  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
172	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
173	[BUG]  [BUGGY]  safe(fsal)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal)  {  setMinReduction(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
174	[BUG]  [BUGGY]  safe(c)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(c)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(c)  {  setMinReduction(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
175	[BUG]  [BUGGY]  this.c  =  b;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.c  =  b;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.c  =  b;	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkState(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
177	[BUG]  [BUGGY]  if(fsal)  {  setMinGrowth(1);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMinGrowth(1);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinGrowth(1);  }  else  {  setMaxGrowth(1);  }	  if(fsal)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
178	[BUG]  [BUGGY]  if(a!=  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
179	[BUG]  [BUGGY]  if(a!=  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
180	[BUG]  [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
181	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
182	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTole  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTole  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTole	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
183	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
184	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
185	[BUG]  [BUGGY]  this.b  =  a  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.b  =  a  +  1;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  a  +  1;	  this.b    =    a;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
186	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
187	[BUG]  [BUGGY]  safety(1.0  /  getOrder());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safety(1.0  /  getOrder());  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(1.0  /  getOrder());	  safety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
188	[BUG]  [BUGGY]  safety(2.0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safety(2.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(2.0);	  safety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
189	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
190	[BUG]  [BUGGY]  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
191	[BUG]  [BUGGY]  if(fsal  >=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  >=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  >=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	48	None	replace
192	[BUG]  [BUGGY]  luate(c,  a,  b,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  scalAbsoluteTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  scalAbsoluteTolerance);	  luate(c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
193	[BUG]  [BUGGY]  luate(c,  a,  b,  scalRelativeTolerance);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  scalRelativeTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  scalRelativeTolerance);	  luate(c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
194	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
195	[BUG]  [BUGGY]  if(a!=  null)  {  if(b!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(b!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(b!=  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
196	[BUG]  [BUGGY]  if(fsal!=  null)  {  this.a  =  new  double[fsal.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  this.a  =  new  double[fsal.length];  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  this.a  =  new  double[fsal.length];  }	  if(fsal!=    null)    {    this.a    =    fsal;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
197	[BUG]  [BUGGY]  if(a  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
198	[BUG]  [BUGGY]  if(a!=  null)  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  setMaxGrowth(1.0);  }	  if(a!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
199	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
200	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
201	[BUG]  [BUGGY]  if(fsal  ||  a  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ||  a  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ||  a  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null    ||    b    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
202	[BUG]  [BUGGY]  safe(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
203	[BUG]  [BUGGY]  safely(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safely(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
204	[BUG]  [BUGGY]  safe(fsal)  {  setMaxReduction(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal)  {  setMaxReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal)  {  setMaxReduction(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
205	[BUG]  [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  setSafety(1.0);  }	  if(fsal)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkState(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	95	None	replace
207	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
208	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
209	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalReduction)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalReduction)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalReduction)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
210	[BUG]  [BUGGY]  safe(fsal)  {  setMinGrowth(1);  }  else  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(fsal)  {  setMinGrowth(1);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(fsal)  {  setMinGrowth(1);  }  else  {  setMaxGrowth(1);  }	  safely(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
211	[BUG]  [BUGGY]  if(a  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(c!=    null)    {    this.a    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
212	[BUG]  [BUGGY]  if(a!=  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(c!=    null)    {    this.a    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
213	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	46	None	replace
214	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
215	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
216	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalReduction)  {  super(name,  maxGrow,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalReduction)  {  super(name,  maxGrow,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalReduction)  {  super(name,  maxGrow,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
217	[BUG]  [BUGGY]  safely()  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safely()  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely()  {  setSafety(1.0);  }	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	96	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ==  false)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  ==  false)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  ==  false)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkState(fsal  <  =  fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  <  =  fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  <  =  fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
220	[BUG]  [BUGGY]  this.a  =  b  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.a  =  b  *  1;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  b  *  1;	  this.a    =    b    +    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
221	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	78	None	replace
222	[BUG]  [BUGGY]  if(exp  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	56	None	replace
223	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
224	[BUG]  [BUGGY]  setSafety(0.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(0.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(0.0);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
225	[BUG]  [BUGGY]  setSafety(1.0  -  minStep);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(1.0  -  minStep);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(1.0  -  minStep);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
226	[BUG]  [BUGGY]  if(fsal!=  a)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  a)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  a)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  b.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  b.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  b.size();  ++i)  {  setMinGrowth(1.0);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkState(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinReduction(0.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	92	None	replace
229	[BUG]  [BUGGY]  if(fsal)  {  setMaxGrowth(0.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMaxGrowth(0.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMaxGrowth(0.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinReduction(0.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
230	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
231	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
232	[BUG]  [BUGGY]  safely())  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safely())  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely())  {  setMinReduction(1.0);  }	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
233	[BUG]  [BUGGY]  if(fsal)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMaxReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMaxReduction(1.0);  }	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
234	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
235	[BUG]  [BUGGY]  if(a!=  null)  {  if(fsal!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(fsal!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(fsal!=  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
236	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(2);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(2);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
237	[BUG]  [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    b.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
238	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
239	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
240	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
241	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  setMaxGrowth(1.0);  }	  if(c    ==    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
242	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrow,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	77	None	replace
243	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	77	None	replace
244	[BUG]  [BUGGY]  if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(0.0);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
245	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(0.0);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
246	[BUG]  [BUGGY]  Settings.checkState(false,  fsal);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Settings.checkState(false,  fsal);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings.checkState(false,  fsal);	  Settings.checkState(false);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
247	[BUG]  [BUGGY]  if(fsal)  {  if(a!=  null)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  if(a!=  null)  {  setMaxReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(a!=  null)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(a!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
248	[BUG]  [BUGGY]  if(fsal)  {  if(c!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  if(c!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(c!=  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(a!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
249	[BUG]  [BUGGY]  if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1);  }	  if(a!=    null)    {    this.a    =    b;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
250	[BUG]  [BUGGY]  if(exp  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	88	None	replace
251	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	88	None	replace
252	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
253	[BUG]  [BUGGY]  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
254	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
255	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    a.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
256	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
257	[BUG]  [BUGGY]  if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp!=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
258	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMaxGrowth(2);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal)  {  setMaxGrowth(2);  }	  if(a    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
259	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
260	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTole  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTole  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTole	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
261	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
262	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(2);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(2);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
263	[BUG]  [BUGGY]  Preconditions.checkState(a!=  null);  this.a  =  a;  this.b  =  b;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(a!=  null);  this.a  =  a;  this.b  =  b;  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(a!=  null);  this.a  =  a;  this.b  =  b;	  if(c    ==    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
264	[BUG]  [BUGGY]  if(c!=  null)  {  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  ';'  expected	97	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ||  fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  ||  fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  ||  fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  ';'  expected	97	None	replace
267	[BUG]  [BUGGY]  if(a!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(a!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
268	[BUG]  [BUGGY]  if(b!=  null)  {  if(a!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(b!=  null)  {  if(a!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b!=  null)  {  if(a!=  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(a!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
269	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
270	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
271	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
272	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
273	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
274	[BUG]  [BUGGY]  if(exp  ==  1.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  ==  1.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  1.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
275	[BUG]  [BUGGY]  if(fsal  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  >  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	46	None	replace
276	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMaxGrowth(1.0);  }	  if(c    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
277	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
278	[BUG]  [BUGGY]  if(a!=  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
279	[BUG]  [BUGGY]  if(fsal)  {  setMinGrowth(0);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMinGrowth(0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinGrowth(0);  }  else  {  setMaxGrowth(1);  }	  if(fsal)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
280	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
281	[BUG]  [BUGGY]  safety(1.0  -  10.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safety(1.0  -  10.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(1.0  -  10.0);	  safety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
282	[BUG]  [BUGGY]  if(fsal)  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
283	[BUG]  [BUGGY]  if(fsal)  {  setMinReduction(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setMinReduction(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinReduction(1.0d);  }	  if(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
284	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
285	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  cRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  cRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  cRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
286	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
287	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minGrowth,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
288	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
289	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
290	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	55	None	replace
291	[BUG]  [BUGGY]  if(fsal!=  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal!=  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	45	None	replace
292	[BUG]  [BUGGY]  if(a  ==  fsal  ||  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  fsal  ||  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  fsal  ||  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
293	[BUG]  [BUGGY]  if(a!=  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }	  if(a    ==    fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
294	[BUG]  [BUGGY]  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
295	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
296	[BUG]  [BUGGY]  if(c  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null    ||    b    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
297	[BUG]  [BUGGY]  if(a  ==  null  ||  b!=  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b!=  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b!=  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null    ||    b    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
298	[BUG]  [BUGGY]  if(fsal  ==  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	48	None	replace
299	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null)  {  setMinReduction(1.0);  }	  if(a!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
300	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance);  }	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
301	[BUG]  [BUGGY]  if(c  ==  null  ||  c.length  <  2)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  null  ||  c.length  <  2)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null  ||  c.length  <  2)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
302	[BUG]  [BUGGY]  setSafety(1.0  -  10.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  setSafety(1.0  -  10.0);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(1.0  -  10.0);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
303	[BUG]  [BUGGY]  if(c  ==  '.')  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  '.')  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  '.')  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	33	None	replace
304	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
305	[BUG]  [BUGGY]  Sets.checkState(false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Sets.checkState(false);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Sets.checkState(false);	  Settings.checkState(false);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
306	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
307	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
308	[BUG]  [BUGGY]  if(c  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	56	None	replace
309	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	56	None	replace
310	[BUG]  [BUGGY]  if(a  ==  null  ||  fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
311	[BUG]  [BUGGY]  if(a!=  null  ||  fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  fsal)  {  setMaxGrowth(1);  }	  if(a    ==    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
312	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d,  b);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0d,  b);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0d,  b);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
313	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
314	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d,  a);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0d,  a);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0d,  a);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
315	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
316	[BUG]  [BUGGY]  this.b  -=  b;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.b  -=  b;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  -=  b;	  this.b    =    b;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
317	[BUG]  [BUGGY]  this.c  =  new  double[Math.pow(10,  Math.pow(10,  a)][Math.pow(10,  b)];  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.c  =  new  double[Math.pow(10,  Math.pow(10,  a)][Math.pow(10,  b)];  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.c  =  new  double[Math.pow(10,  Math.pow(10,  a)][Math.pow(10,  b)];	  this.c    =    a;    	non-compiled	[CE]  ')'  expected	86	None	replace
318	[BUG]  [BUGGY]  this.c  =  new  double[Math.pow(10,  Math.pow(10,  a)][Math.exp(10,  b)];  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.c  =  new  double[Math.pow(10,  Math.pow(10,  a)][Math.exp(10,  b)];  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.c  =  new  double[Math.pow(10,  Math.pow(10,  a)][Math.exp(10,  b)];	  this.c    =    a;    	non-compiled	[CE]  ')'  expected	86	None	replace
319	[BUG]  [BUGGY]  luate(c,  a,  b,  minStep,  maxStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  minStep,  maxStep);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  minStep,  maxStep);	  luate(c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
320	[BUG]  [BUGGY]  luate(c,  a,  b,  prototype,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  luate(c,  a,  b,  prototype,  scalAbsoluteTolerance);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  b,  prototype,  scalAbsoluteTolerance);	  luate(c,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
321	[BUG]  [BUGGY]  if(a!=  fsal  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  fsal  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  fsal  ||  b  ==  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(a!=    fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
322	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null  &&  b.length  >  0)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b!=  null  &&  b.length  >  0)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null  &&  b.length  >  0)  {  this.a  =  a;  this.b  =  b;  }	  if(b!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
323	[BUG]  [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null  &&  c.length  >  0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
324	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(c!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalAbsoluteTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	78	None	replace
325	[BUG]  [BUGGY]  safe(b)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  safe(b)  {  setMinReduction(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safe(b)  {  setMinReduction(1.0);  }	  safely(fsal)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
326	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0,  1);  }  else  {  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(0,  1);  }  else  {  setSafety(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(0,  1);  }  else  {  setSafety(1);  }	  if(fsal)    {    setSafety(0);    }    else    {    setSafety(1);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
327	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
328	[BUG]  [BUGGY]  this.fsal  =  fsal;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.fsal  =  fsal;  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.fsal  =  fsal;	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
329	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  maxStep)  {  super(maxStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
330	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
331	[BUG]  [BUGGY]  if(c  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	88	None	replace
332	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  >=  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    0.0)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	88	None	replace
333	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  if(a!=    null    &&    b    ==    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
334	[BUG]  [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  fsal)  {  if(prototype!=  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
335	[BUG]  [BUGGY]  if(fsal  ==  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	34	None	replace
336	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  c)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	  if(fsal)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	77	None	replace
337	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.1);  }	  for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
338	[BUG]  [BUGGY]  this.b  =  fsal;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  this.b  =  fsal;  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  fsal;	  this.b    =    a;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
339	[BUG]  [BUGGY]  if(a!=  null  &&  c.size()  >  0)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  c.size()  >  0)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  c.size()  >  0)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	  if(a!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
340	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
341	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(a!=    null)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
342	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ==  fsal);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  ==  fsal);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  ==  fsal);	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkState(fsal  <  =  fsal);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  Preconditions.checkState(fsal  <  =  fsal);  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal  <  =  fsal);	  Preconditions.checkState(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
344	[BUG]  [BUGGY]  if(fsal  ==  null)  {  this.a  =  fsal;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(fsal  ==  null)  {  this.a  =  fsal;  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal  ==  null)  {  this.a  =  fsal;  }	  if(fsal!=    null)    {    this.a    =    fsal;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
345	[BUG]  [BUGGY]  if(a  ==  null)  {  this.a  =  fsal;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  this.a  =  fsal;  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  this.a  =  fsal;  }	  if(fsal!=    null)    {    this.a    =    fsal;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
346	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double[]  maxStep)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  if(c    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
347	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(c!=    null)    {    this.a    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
348	[BUG]  [BUGGY]  if(c  ==  '.')  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(c  ==  '.')  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  '.')  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	  if(exp    ==    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	47	None	replace
349	[BUG]  [BUGGY]  if(a  ==  null)  {  this.a  =  b;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a  ==  null)  {  this.a  =  b;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  this.a  =  b;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	  if(a!=    null)    {    this.a    =    b;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
350	[BUG]  [BUGGY]  if(a!=  null  &&  c.size()  >  0)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  c.size()  >  0)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  c.size()  >  0)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	  if(a!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
351	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    b.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
352	[BUG]  [BUGGY]  if(a!=  null  ||  b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;      [BUGGY]  if(a!=  null  ||  b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]      this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	  if(c!=    null)    {    for(int    i    =    0;    i    <    b.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
