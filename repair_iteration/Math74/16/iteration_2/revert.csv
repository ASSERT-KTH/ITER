projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=a;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=c;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=fsal;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0);}else{setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<c.size();++i){setMinGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<b.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){this.a=fsal;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){this.a=c;}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(fsal);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(fsal){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(fsal){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settings.checkState(false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(fsal){setMinReduction(1.0);}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<c.size();++i){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(prototype==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype!=null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=a;this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<c.size();++i){setMinGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<c.size();++i){setMinGrowth(0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=c+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<c.size();++i){setMinGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=b+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype==null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,maxStep,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,maxStep,scalRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(0);}else{setSafety(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){this.a=b;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(a!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(fsal!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=a;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=a;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==fsal){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinReduction(0.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0d);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0,b);}else{setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=fsal){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal==fsal){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal==null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal==null){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal!=null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setMinGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setMinGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settings.checkState(false);setMinGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<this.c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<a.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=1;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(2.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(prototype!=null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(prototype!=null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){if(prototype==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=c;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=d;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settings.checkState(true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settings.checkState(false,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settings.checkState(false,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1);}else{setSafety(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(0);}else{setSafety(2);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(2);}else{setSafety(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finalinta,finalintb,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finallongminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null||c==null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finalintminStep){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep){super(name,maxStep,minStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==fsal){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=fsal){if(prototype==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&a==null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&a==null&&b==null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120This.a=a;this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<a.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<b.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<this.c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=1;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){if(a!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){if(a==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finallongminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finalinta,finalintb,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(fsal==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(b==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(b==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){this.a=c;}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b==null){this.a=c;}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp!=0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinReduction(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setMinReduction(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinReduction(0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(c);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<c.size();++i){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(inti=0;i<c.size();++i){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.size();++i){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&a==null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.length;++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal){setMinReduction(1.0);}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(c){setMinReduction(1.0);}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<b.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(prototype==null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){if(prototype==null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.size();++i){setMinGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.length;++i){setMinGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=a+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,minStep,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,minStep,maxStep,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,maxStep,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<c.size();++i){setMinGrowth(0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.size();++i){setMinGrowth(0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){if(fsal==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=b;this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(c){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(inti=0;i<a.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(inti=0;i<b.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(inti=0;i<this.c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<a.length;++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(prototype==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){if(prototype==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settingssettings=Settings.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settingssettings=Settings.newHashSet();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){this.a=a;this.b=b;}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(1.0f);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null||c==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(fsal){setMinReduction(0.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinGrowth(0.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,minStep,scalRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,minStep,maxStep,scalRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,maxStep,scalRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0,a);}else{setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0,c);}else{setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0,b);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(fsal==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(b!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(b==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<a.size();++i){setMinGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<b.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth,finaldoublescalReduction){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){if(a!=null&&b==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp!=0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120||exp==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){if(a!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){if(a==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){if(prototype==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype==null){if(a==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0d);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0d);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120This.a=fsal;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(a==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(a!=null){setMinReduction(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublesafety){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.max(10,Math.min(10,maxStep)];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=c;this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finalintminStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(c){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal){setMinGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinGrowth(1);}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(prototype==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=fsal){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==fsal){if(prototype!=null){setMaxGrowth(2);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTole
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=a+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(1.0/getOrder());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(2.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal>=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,scalRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(b!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){this.a=newdouble[fsal.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal||a==null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal){setMinGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(fsal){setMinGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal){setMaxReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(inti=0;i<a.length;++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(a!=null&&b==null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow,finaldoublescalReduction){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(fsal){setMinGrowth(1);}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){this.a=c;}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){this.a=c;}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow,finaldoublescalReduction){super(name,maxGrow,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely(){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal==false){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal<=fsal){setMinReduction(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=b*1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp>0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-minStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=a){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<b.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal){setMinReduction(0.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMaxGrowth(0.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safely()){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMaxReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<a.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(fsal!=null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype!=null){setMinGrowth(2);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(inti=0;i<b.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldoubleminStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrow,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(inti=0;i<c.size();++i){setMinGrowth(0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<c.size();++i){setMinGrowth(0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Settings.checkState(false,fsal);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(a!=null){setMaxReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(c!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){this.a=a;this.b=b;}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp>0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalAbsoluteTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<c.size();++i){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){for(inti=0;i<a.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp!=0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal){setMaxGrowth(2);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTole
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){if(fsal){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){if(prototype==null){setMinGrowth(2);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(a!=null);this.a=a;this.b=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){if(a!=null&&b==null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal){setSafety(1.0d);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal||fsal){setSafety(1.0d);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){if(a!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(fsal!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldouble[]maxStep){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(maxStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null){this.a=a;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp>=0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp==1.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal>0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(inti=0;i<c.size();++i){setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){if(fsal){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null){if(prototype==null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinGrowth(0);}else{setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safety(1.0-10.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setMinReduction(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(fsal!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublecRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){for(inti=0;i<c.size();++i){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minGrowth,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(maxStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublec){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal!=fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==fsal||b==null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=fsal){if(prototype!=null){setMaxGrowth(2);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null||b==null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b!=null){if(fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(maxStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null||c.length<2){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-10.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c=='.'){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Sets.checkState(false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(prototype==null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublec){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp>=0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||fsal){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0d,b);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0d,a);}else{setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){if(fsal){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b-=b;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.pow(10,Math.pow(10,a)][Math.pow(10,b)];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.pow(10,Math.pow(10,a)][Math.exp(10,b)];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,minStep,maxStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120luate(c,a,b,prototype,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=fsal||b==null){if(prototype!=null){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null&&b.length>0){this.a=a;this.b=b;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&c.length>0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120safe(b){setMinReduction(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(0,1);}else{setSafety(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){setSafety(1.0d);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.fsal=fsal;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublemaxStep){super(maxStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldouble[]maxStep){super(minStep,maxStep,scalAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(exp>=0.0){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==fsal){if(prototype!=null){setMinGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublec){super(minStep,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(inti=0;i<c.size();++i){setMinGrowth(0.1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=fsal;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&c.size()>0){for(inti=0;i<c.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b==null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b==null){if(prototype!=null){setMaxGrowth(1);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal==fsal);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120Preconditions.checkState(fsal<=fsal);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(fsal==null){this.a=fsal;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){this.a=fsal;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldouble[]maxStep){super(minStep,maxStep,scalAbsoluteTolerance,scalRelativeTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null||b==null){this.a=c;}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c=='.'){for(finaldouble[]a,finaldouble[]b,finaldouble[]minStep,finaldoublescalRelativeTolerance){super(name,maxStep,scalAbsoluteTolerance,scal
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a==null){this.a=b;this.b=b;}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&c.size()>0){for(inti=0;i<c.size();++i){setMinGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null&&b!=null){for(inti=0;i<b.size();++i){setSafety(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(a!=null||b!=null){for(inti=0;i<b.size();++i){setSafety(1.0);}
