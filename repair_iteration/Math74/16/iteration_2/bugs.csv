bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setSafety(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  b.size();  ++i)  {  setSafety(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  if(fsal!=  null)  {  this.a  =  fsal;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal!=  null)  {  this.a  =  fsal;  }  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  this.a  =  fsal;  }	  this.a    =    fsal;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  if(a!=  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  if(c!=  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  this.a  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.a    =    c;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  this.b  =  b;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  this.b  =  b;  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  b;	  this.a    =    b;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  setSafety(1.0);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	setSafety(1.0);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  safety(fsal);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  safety(fsal);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(fsal);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  safety(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  safety(1.0);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safety(1.0);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  safely(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  safely(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
18	[BUG]  [BUGGY]  safely(fsal)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  safely(fsal)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely(fsal)  {  setMinReduction(1.0);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
19	[BUG]  [BUGGY]  Settings.checkState(false);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  Settings.checkState(false);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Settings.checkState(false);	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  safely(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  safely(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	safely(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  a.size();  ++i)  {  setMinGrowth(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(final  double[]  a,  final  double[]  b,  final  double[]  minStep)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  if(a  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null  ||  b  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  if(a!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  this.a  =  a;  this.b  =  b;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  this.a  =  a;  this.b  =  b;  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  a;  this.b  =  b;	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(10.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(10.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(0.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  this.a  =  c  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  this.a  =  c  +  1;  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  c  +  1;	  this.a    =    c;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	5	None	replace
56	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(10.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(10.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  if(a!=  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  this.a  =  a;  this.b  =  b;  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
60	[BUG]  [BUGGY]  if(a!=  null  &&  b!=  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  &&  b!=  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b!=  null)  {  this.a  =  a;  this.b  =  b;  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
61	[BUG]  [BUGGY]  this.a  =  b  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  this.a  =  b  +  1;  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.a  =  b  +  1;	  this.a    =    b;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  luate(c,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  luate(c,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  maxStep,  scalAbsoluteTolerance);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  luate(c,  a,  maxStep,  scalRelativeTolerance);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  luate(c,  a,  maxStep,  scalRelativeTolerance);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	luate(c,  a,  maxStep,  scalRelativeTolerance);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  if(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  Preconditions.checkState(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	Preconditions.checkState(fsal)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
71	[BUG]  [BUGGY]  if(a!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
72	[BUG]  [BUGGY]  if(a!=  null)  {  this.a  =  b;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  this.a  =  b;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  this.a  =  b;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
73	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  if(a!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  if(fsal)  {  if(a!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  if(a!=  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  if(a!=  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
78	[BUG]  [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c!=  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalAbsoluteTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
79	[BUG]  [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  if(a!=  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  this.b  =  a;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  this.b  =  a;  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.b  =  a;	  this.a    =    b;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setMinGrowth(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
84	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
85	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(name,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(name,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
86	[BUG]  [BUGGY]  this.c  =  a;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  this.c  =  a;  [BUGGY]    this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	this.c  =  a;	  this.a    =    c;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(c  ==  null)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
88	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(exp  ==  0.0)  {  for(final  double[]  a,  final  double[]  b,  final  double[]  minStep,  final  double  scalRelativeTolerance)  {  super(minStep,  maxStep,  scalAbsoluteTolerance,  scal	      if(prototype!=    null)    {    for(final    double[]    a,    final    double[]    b,    final    double[]    minStep,    final    double    scalRelativeTolerance)    {    super(minStep,    maxStep,    scalAbsoluteTolerance,    scal    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  for(int  i  =  0;  i  <  c.size();  ++i)  {  setSafety(1.0);  }	      if(c!=    null)    {    for(int    i    =    0;    i    <    c.size();    ++i)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(b!=  null)  {  this.a  =  a;  this.b  =  b;  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a  ==  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a  ==  fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
92	[BUG]  [BUGGY]  if(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinReduction(0.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  if(fsal)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setMinReduction(1.0);  }	      if(fsal)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  if(a!=  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  ||  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
95	[BUG]  [BUGGY]  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  null  &&  b  ==  null)  {  this.a  =  a;  this.b  =  b;  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    this.a    =    a;    this.b    =    b;    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
96	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
97	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  b);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(fsal)  {  setSafety(1.0,  b);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(fsal)  {  setSafety(1.0,  b);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  if(a!=  fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;    [BUGGY]  if(a!=  fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	120	120	1	replace	if(a!=  fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
