projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scalaAbsoluteTolerance,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scalaAbsoluteTolerance,firstTime);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,scalAbsoluteTolerance);firstTime=false;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t0,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance!=firstTime){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime==null){if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime!=null){if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime!=null){if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){Arrays.fill(scale,vecAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){Arrays.fill(scale,vecAbsoluteTolerance);}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance==null){Arrays.fill(scale,vecAbsoluteTolerance);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance==null){Arrays.fill(scale,vecAbsoluteTolerance);}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(y0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scale,scalaAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.min(scalaAbsoluteTolerance,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.min(scale,scalaAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.min(scale,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t0,scale.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(a,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scalAbsoluteTolerance==firstTime){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime!=scale){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime>=scale){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,vecAbsoluteTolerance);firstTime=true;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,vecAbsoluteTolerance);firstTime=false;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,vecAbsoluteTolerance);firstTime=false;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){Arrays.fill(scale,scalAbsoluteTolerance);firstTime=false;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(b,scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(vecAbsoluteTolerance,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(y0,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t0,y0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(y0[k],y,yDotK[0]);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(y0[k],y[k]);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(y0[k],y,yDotK[1]);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scale=vecAbsoluteTolerance;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale==null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale!=null){if(scale==null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scale,firstTime);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scala,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,y0,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecRelativeTolerance!=null){if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale!=null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,y0);firstTime=false;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,newdouble[y0.length],vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,newdouble[y0.length]);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecRelativeTolerance==null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,newdouble[y0.length]);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,y0,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.min(scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.min(scale,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){scale=vecAbsoluteTolerance;}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){computeDerivatives(t0,y0,vecAbsoluteTolerance);}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scale=vecAbsoluteTolerance.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){scale=vecAbsoluteTolerance;}else{scale=vecAbsoluteTolerance;firstTime=false;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=newdouble[y0.length];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,0,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scale,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance==null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime>=null){if(scalAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.min(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateVectorAbsoluteTolerance(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=firstTime){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecRelativeTolerance!=null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(y0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(y0,scale.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.max(scalAbsoluteTolerance,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){scale=newdouble[y0.length];}else{scale=Math.min(scale,firstTime);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248Arrays.fill(scale,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scala,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=Math.max(scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(t0,y,yDotK[0]);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(t0,y,yDotK[0],yTmp,yDotK[1]);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(t0,y0,yTmp);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(equations!=null){for(intk=0;k<scale.length;k++){computeDerivatives(t0,y,yDotK[0],yTmp);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,t0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale!=null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(y0!=null){if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(y0!=null){if(scalAbsoluteTolerance==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(y0!=null){scale=newdouble[y0.length];}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(firstTime){Arrays.fill(scale,scalAbsoluteTolerance);firstTime=false;}else{scale=vecAbsoluteTolerance;}
