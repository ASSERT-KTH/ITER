projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=prototype.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepStart;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepEnd;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRangeHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRawHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMinGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart,1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(yStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=1){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:proto.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=rki.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(x0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepHandlers.length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart,stepOffset);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers2();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,t1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,forward);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepEnd+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=stepStart+t0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=stepEnd+t0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,forward);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,y,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RightKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart+2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart+3);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,y1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRawHandlers(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRawHandlers(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==1){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=1){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=1){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y0,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,y,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y1,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,t0,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getHandlers()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RightKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(yStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepStart.length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=stepStart+stepHandlers.length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=stepHandlers.length+t0.length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,forward,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getHandlers()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,y,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorrki:proto.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:proto.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>1){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==1){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=rki.getStepHandler(interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,t);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRangeHandlers(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRangeHandlers(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart,0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart,2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart,0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepOffset);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,stepOffset);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepOffset,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart,stepOffset-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart==0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart-2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepEnd-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!firstTime){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getHandlers()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepStart,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEn
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart,1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t1+stepStart;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t2;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(yStart,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,forward);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223while(!lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(!lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart!=1){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(t0,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(t1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(null,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart,stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>1){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart,stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(yStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(x0,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMinGrowth(),stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMinGrowth(),stepStart,1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,y0,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y0,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,t0,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,y,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y1,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RightKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepStart+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers1();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,y0,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,y,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,y1,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,a,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,t0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y1,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,y,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,t0,yDotK,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y1,yDotK,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart+2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepEnd+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=prototype.getStepHandler(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=rki.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=prototype.getStepHandler(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,y0,yDotK,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,a,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart+3);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,yStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getDestinationHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.getEventsManager()){addEndTimeChecker(t0,rki,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=t0.getStepHandlers(prototype,y1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(firstTime){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,y,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,y1,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,y2,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:proto.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart-2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart-1+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t1+stepEnd;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,a,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(rki);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(firstTime){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,a,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepEnd.length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,y1,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,y,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getEventHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(firstTime){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(yStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.get()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.getEventsManager()){addEndTimeChecker(t0,rki,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,t0,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:rki.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepEnd+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=rki.getStepHandler(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMinGrowth(),stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=handler.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEn
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,forward,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,a,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,stepStart,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,t0,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.remove()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,stepStart,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEn
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,yDotK,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.remove()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart-stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null&&rki.hasNext()){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=1){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart/1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.remove()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=rki.getStepHandler(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepStart,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepStart-1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(lastStep>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(firstTime>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null&&rki.hasNext()){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.remove()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,t0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorprototype:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==1){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=prototype.getStepHandler(rki);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepEnd-1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.remove()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.get()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart==0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=1){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.remove()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(yStart,stepOffset);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepStart,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RangeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepStart,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=1){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRawHandlers(y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,t1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.remove()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getMoveHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(stepStart,stepTime);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(stepStart,stepOffset);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(step>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step
