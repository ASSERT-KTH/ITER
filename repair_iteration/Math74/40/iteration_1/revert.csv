projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,step
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223stepHandler=prototype.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepEnd>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepStart;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepEnd;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRangeHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getRawHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMinGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart,1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(yStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=1){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:proto.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=rki.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(lastStep){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart==0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(x0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.min(interpolator.getMaxGrowth(),stepStart+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(prototype!=null){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.initialize(this,yTmp,yDotK,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:proto.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0+stepHandlers.length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler(null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart,stepOffset);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,stepHandlers,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,stepEnd);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers2();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,stepStart,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0,t1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223rki.reinitialize(this,yTmp,yDotK,stepStart);
