projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepEnd);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.initialize(this,yTmp,yDotK,stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart>0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){rki.reinitialize(this,yTmp,yDotK,stepStart,error);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=t0;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223doublehNew=Math.max(interpolator.getMaxGrowth(),stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEvents()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventsHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorrki:prototype.copy()){if(!lastStep){returnrki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223if(stepStart!=0){for(RungeKuttaStepInterpolatorhandler:prototype.getEventsManager()){addEndTimeChecker(t0,handler,t,eventHandlersManager);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandler=prototype.getStepHandler();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java223StepHandlerstepHandlers=prototype.getStepHandlers(stepStart);
