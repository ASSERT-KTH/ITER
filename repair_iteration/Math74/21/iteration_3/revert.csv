projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(1.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setSafety(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(0.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(1.0);setMaxGrowth(10.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(0.2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(0.5);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(2.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(0.5);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(1.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinGrowth(1.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(1.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(0.2);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(0.5);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(0.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(0.5);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(1);setMaxGrowth(1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setSafety(2.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setSafety(0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMaxGrowth(0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMaxGrowth(2.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp!=0.0){setMinReduction(0.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>=0.0){setMinGrowth(1.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.0);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(1.0);setMaxGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMaxGrowth(10.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<0.0){setMinReduction(1.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setSafety(0.5);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(2.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.5);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.5);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(1.0);setMaxGrowth(10.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128Set<K>setMinGrowth(1.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.0);setMaxGrowth(1.0);}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(1.0);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(1);setMaxGrowth(2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(2);setMaxGrowth(1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128Settings.checkState(exp>0.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMaxGrowth(0.5);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinGrowth(0.2);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(exp);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128setMinReduction(2);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>=0.0){setMinReduction(0.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128Set<K>setMinGrowth(0.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128Set<K>setMinGrowth(2.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<0.0){setMinReduction(1.0);setMaxGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128Settingssettings=Settings.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<0.0){setMinReduction(0.0);setMaxGrowth(1.0);}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>=0.0){setMinReduction(1.0);setMaxGrowth(10.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>=0.0){setMinReduction(1.0);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){Set<K>setMinGrowth(1.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinGrowth(0.0);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>=0.0){setMinReduction(0.5);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.2);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(0.2);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128doublesetMinGrowth(1.0);setMaxGrowth(1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(1.0);setMaxGrowth(1.0.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinGrowth(0.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<=0.0){setMinReduction(1.0);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinReduction(1.0);setMaxGrowth(1.0);}else{thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<=0.0){setMinReduction(1.0);setMaxGrowth(10.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<=0.0){setMinReduction(0.0);setMaxGrowth(1.0);}else{setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp<=0.0){setMinReduction(1.0);setMaxGrowth(1.0);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java128if(exp>0.0){setMinGrowth(0.5);setMaxGrowth(1.0);}
