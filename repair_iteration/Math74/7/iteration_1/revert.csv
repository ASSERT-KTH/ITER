projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,hNew,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,hNew,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,error,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ytmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,y1.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,nextStep,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*factor,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,error,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,hNew,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,hNew.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yNew,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,hNew,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,y,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,hNew,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,hNew,0,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,hNew,0,y1.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,y1.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y2,0,y1.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,hNew.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*factor,nextStep,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep*factor,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(exp,stepSize*factor,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep*stepSize,error,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,forward,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep*stepSize,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,nextStep,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,stepStart,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,nextStep,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ytmp,0,hNew.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ys,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,hNew.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,safety);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,input);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep*stepSize,error,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,error,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,nextStep,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,nextStep,true);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,y0,0,ySize.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,input);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,factor);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y2,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,error,null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(extStep*factor,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(factor*stepSize,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,nextStep,0,y0.length-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,nextStep,hNew,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,y0.length-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,y,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,1,hNew.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,nextStep,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,nextStep+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,error,nextStep,null);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep*step,forward,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ytmp,0,y0.length-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315for(inty=0;y<nextStep.length;y++){if(hNew>maxGrowth){thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315for(inty=0;y<nextStep.length;y++){if(hNew>maxGrowth){thrownewIllegalStateException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,1,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ytmp,0,y1.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*factor,firstTime,nextStep,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,back,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,1,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,y0.length-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(stepSize*nextStep,nextT,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(nextStep,nextStep,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315hNew=filterStep(hNew,nextStep,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ytmp,0,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,ytmp,0,y.length);
