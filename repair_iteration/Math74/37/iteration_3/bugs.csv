bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(interpolator))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(interpolator))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(interpolator))  {	  }    else    if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
2	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)&&!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)&&!isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(y0)&&!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
3	[BUG]  [BUGGY]  }  else  if(rki.equals(interpolator))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(interpolator))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(interpolator))  {	  }    else    if(interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  }  else  if(interpolator.equals(dt))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(interpolator.equals(dt))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(interpolator.equals(dt))  {	  }    else    if(interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
6	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  back);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  back);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
7	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
8	[BUG]  [BUGGY]  }  else  if(prototype.isEmpty()  &&  eventsHandlersManager.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.isEmpty()  &&  eventsHandlersManager.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.isEmpty()  &&  eventsHandlersManager.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
9	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)||  prototype.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)||  prototype.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)||  prototype.equals(rki))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
13	[BUG]  [BUGGY]  }  else  if(prototype.equals(rki)&&  prototype.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.equals(rki)&&  prototype.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.equals(rki)&&  prototype.equals(rki))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
14	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)||  prototype.equals(rk))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)||  prototype.equals(rk))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)||  prototype.equals(rk))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
16	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
17	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
18	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)&&!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)&&!isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(y0)&&!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
19	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(y)&&!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(y)&&!isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(y)&&!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
20	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty()    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
21	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty()    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
22	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
23	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
24	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
25	[BUG]  [BUGGY]  Interpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y0,  yDotK,  forward);  interpolator  =  rki;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y0,  yDotK,  forward);  interpolator  =  rki;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y0,  yDotK,  forward);  interpolator  =  rki;	  Interpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
26	[BUG]  [BUGGY]  Interpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  y0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  y0,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  y0,  yDotK,  forward);	  Interpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
27	[BUG]  [BUGGY]  Interpolator  rki  =  prototype.copy();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  rki  =  prototype.copy();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  rki  =  prototype.copy();	  Interpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
28	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
29	[BUG]  [BUGGY]  Interpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
30	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
32	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty())    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty())    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty())    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
36	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
37	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
38	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  protototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  protototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  protototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
39	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  ||  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  ||  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  ||  isDummyStepInterpolator(rki))  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
40	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki))  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
41	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki)||  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki)||  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki)||  isDummyStepInterpolator(rki))  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
42	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
43	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
44	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
45	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
46	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  ==  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  ==  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  ==	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
47	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
48	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
49	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
50	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r	  if(!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    r    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
51	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  r  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  r  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  r	  if(!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    r    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
52	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.reinitialize(this,  y1,  yDotK,  forward);	  rki.reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
54	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
55	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
56	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
57	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
58	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
59	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(interpolator))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(interpolator))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(interpolator))  {	  }    else    if(!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
60	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp,  interpolator))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp,  interpolator))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp,  interpolator))  {	  }    else    if(!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
61	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
62	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(dt))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(dt))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(dt))  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(y))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(y))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(y))  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(rki)||!interpolator.equals(dt))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(rki)||!interpolator.equals(dt))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(rki)||!interpolator.equals(dt))  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
65	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
66	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
67	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  }  else  if(rki.equals(a))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(a))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(a))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
69	[BUG]  [BUGGY]  }  else  if(a.equals(interpolator))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(interpolator))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(interpolator))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
70	[BUG]  [BUGGY]  }  else  if(a.equals(rki.getScale()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki.getScale()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki.getScale()))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
71	[BUG]  [BUGGY]  }  else  if(a.equals(rki)||  rki.equals(t0))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki)||  rki.equals(t0))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki)||  rki.equals(t0))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
72	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  yTmp,  yDotK,  forward);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
73	[BUG]  [BUGGY]  rki.initialize(this,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  yDotK,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  yDotK,  t0);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
74	[BUG]  [BUGGY]  rki.initialize(this,  yDotK,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  yDotK,  t0,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  yDotK,  t0,  forward);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
75	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
76	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
77	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
78	[BUG]  [BUGGY]  }  else  if(!eventsManager.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsManager.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsManager.isDummyStepInterpolator())  {	  }    else    if(eventsManager.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
79	[BUG]  [BUGGY]  }  else  if(eventsManager.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsManager.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsManager.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
80	[BUG]  [BUGGY]  }  else  if(eventsManager.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsManager.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsManager.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
81	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsHandlersManager.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isDummyStepInterpolator())  {	  }    else    if(eventsManager.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
82	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(scalAbsoluteTolerance!=  0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(scalAbsoluteTolerance!=  0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(scalAbsoluteTolerance!=  0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(prototype!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
83	[BUG]  [BUGGY]  if(interpolator!=  null)  {  if(scalAbsoluteTolerance!=  0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  if(scalAbsoluteTolerance!=  0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  if(scalAbsoluteTolerance!=  0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(prototype!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
84	[BUG]  [BUGGY]  if(rki!=  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	  if(prototype!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
85	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  back);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  back);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
89	[BUG]  [BUGGY]  }  else  if(!requiresDummyIntegrator()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyIntegrator()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyIntegrator()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
90	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquationsOutput()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquationsOutput()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquationsOutput()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
91	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)||!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)||!isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(y0)||!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
92	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =	  if(!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
93	[BUG]  [BUGGY]  }  else  if(prototype.isEmpty()  ||  eventsHandlersManager.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.isEmpty()  ||  eventsHandlersManager.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.isEmpty()  ||  eventsHandlersManager.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    ||    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
94	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    ||    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
95	[BUG]  [BUGGY]  }  else  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  }    else    if(!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
96	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&!interpolator.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&!interpolator.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty()  &&!interpolator.isDummyStepInterpolator())  {	  }    else    if(!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
97	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
98	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
99	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
100	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquations()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations()  &&!eventsHandlersManager.isEmpty())  {	  }    else    if(!requiresDummyEquations())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
101	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDummyEquations())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
102	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
103	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||  eventsHandlersManager.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
104	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  needsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  needsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||  needsHandlersManager.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
105	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||  eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  ||  eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||  eventsHandlersManager.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
106	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  rki.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  rki.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||  rki.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
107	[BUG]  [BUGGY]  }  else  if(requiresDummyOutput()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyOutput()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyOutput()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummy()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
108	[BUG]  [BUGGY]  }  else  if(requiresDummyOutput()  ||(!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyOutput()  ||(!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyOutput()  ||(!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummy()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
109	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator())  {	  }    else    if(!requiresDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
110	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  &&!eventsHandlersManager.isEmpty())  {	  }    else    if(!requiresDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
111	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&  rki.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&  rki.equals(prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  &&  rki.equals(prototype))  {	  }    else    if(!requiresDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
112	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
113	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)||!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(y0)||!isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(y0)||!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
115	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(y)||!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(y)||!isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(y)||!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
116	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
117	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
118	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
119	[BUG]  [BUGGY]  if(prototype!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }	  rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
120	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  y0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  y0,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  y0,  yDotK,  forward);	  rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
121	[BUG]  [BUGGY]  if(prototype!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
122	[BUG]  [BUGGY]  n  =  prototype.copy();  n.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  n  =  prototype.copy();  n.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	n  =  prototype.copy();  n.reinitialize(this,  yTmp,  yDotK,  forward);	  rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
123	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta	  if(handler!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
124	[BUG]  [BUGGY]  }  else  if(prototype.isDummyStepInterpolator()  &&  rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.isDummyStepInterpolator()  &&  rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.isDummyStepInterpolator()  &&  rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
125	[BUG]  [BUGGY]  }  else  if(prototype.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
126	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  &&  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  &&  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  &&  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyStepInterpolator()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
127	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  ytmp,  yDotK,  forward);	  rki.initialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
128	[BUG]  [BUGGY]  rki.initialize(this,  y1,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  y1,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  y1,  yDotK,  forward);	  rki.initialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
129	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
130	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  &&  rki.isVowel())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  &&  rki.isVowel())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  &&  rki.isVowel())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isVowel())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
131	[BUG]  [BUGGY]  }  else  if(rki.isVowel()  ||  rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isVowel()  ||  rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isVowel()  ||  rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isVowel())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
132	[BUG]  [BUGGY]  }  else  if(rki.isInterpolator()  ||  rki.isVowel())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isInterpolator()  ||  rki.isVowel())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isInterpolator()  ||  rki.isVowel())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isVowel())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
133	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  interpolator);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
134	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
135	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  transient);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  transient);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  transient);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
136	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
137	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	  if(!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
138	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)  prototype.copy();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)  prototype.copy();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)  prototype.copy();	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKutt    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
139	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKut  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKut  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKut	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKutt    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
140	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)&&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)&&  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)&&  isDummyStepInterpolator(rki))  {	  }    else    if(prototype.equals(rki)&&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
141	[BUG]  [BUGGY]  }  else  if(interpolator.equals(rki)&&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(interpolator.equals(rki)&&  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(interpolator.equals(rki)&&  isDummyStepInterpolator(rki))  {	  }    else    if(prototype.equals(rki)&&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
142	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator(rki)&&  prototype.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator(rki)&&  prototype.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator(rki)&&  prototype.equals(rki))  {	  }    else    if(prototype.equals(rki)&&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
143	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
144	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
145	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
147	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.re  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.re  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.re	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
148	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
149	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
150	[BUG]  [BUGGY]  }  else  if(prototype.isDummyStepInterpolator()  ||  rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.isDummyStepInterpolator()  ||  rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.isDummyStepInterpolator()  ||  rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
151	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.reinitialize(this,  yDotK,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.reinitialize(this,  yDotK,  t0);	  rki.reinitialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
152	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.reinitialize(this,  yDotK,  t0,  forward);	  rki.reinitialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
153	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
154	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype	  if(handler!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
155	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype	  if(handler!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
156	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
157	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
158	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
159	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
160	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
161	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
162	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
163	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handler  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.handler	  final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
164	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle()  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle()  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.handle()	  final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
165	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.interpolator  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.interpolator  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.interpolator	  final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
166	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle(null);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle(null);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.handle(null);	  final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
167	[BUG]  [BUGGY]  }  else  if(interpolator.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(interpolator.equals(prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(interpolator.equals(prototype))  {	  }    else    if(rki.equals(prototype))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  }  else  if(!rki.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!rki.equals(prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.equals(prototype))  {	  }    else    if(rki.equals(prototype))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
169	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)||  yDotK.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)||  yDotK.equals(prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)||  yDotK.equals(prototype))  {	  }    else    if(rki.equals(prototype))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  }  else  if(requiresDummyInput()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyInput()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyInput()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummy()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
171	[BUG]  [BUGGY]  }  else  if(!requiresDummy()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummy()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummy()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummy()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
172	[BUG]  [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);	  Interpolator    <    RungeKuttaStepInterpolator>    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
173	[BUG]  [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward);	  Interpolator    <    RungeKuttaStepInterpolator>    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
174	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
175	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
176	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
177	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  &&  rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  &&  rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  &&  rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
178	[BUG]  [BUGGY]  }  else  if(rki.isInterpolator()  ||  rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isInterpolator()  ||  rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isInterpolator()  ||  rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
179	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVoidStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVoidStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isVoidStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
180	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    &&(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
181	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquations()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    &&(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
182	[BUG]  [BUGGY]  }  else  if(!requiresDummyIntegrator()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyIntegrator()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyIntegrator()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    &&(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
183	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquationsOutput()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquationsOutput()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquationsOutput()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    &&(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
184	[BUG]  [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  ||  rki.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  ||  rki.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.hasDummyStepInterpolator()  ||  rki.hasDummyStepInterpolator())  {	  }    else    if(rki.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
185	[BUG]  [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  &&  prototype.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  &&  prototype.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.hasDummyStepInterpolator()  &&  prototype.hasDummyStepInterpolator())  {	  }    else    if(rki.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
186	[BUG]  [BUGGY]  }  else  if(prototype.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.hasDummyStepInterpolator())  {	  }    else    if(rki.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
187	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
188	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
189	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
190	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  y  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  y  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  interpolator.reinitialize(this,  yTmp,  y	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
191	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  ==  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  ==  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  ==	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
192	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
193	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  ||  prototype.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  ||  prototype.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  ||  prototype.hasDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
194	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&  prototype.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&  prototype.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty()  &&  prototype.hasDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
195	[BUG]  [BUGGY]  }  else  if(prototype.isEmpty()  &&  eventsHandlersManager.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.isEmpty()  &&  eventsHandlersManager.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.isEmpty()  &&  eventsHandlersManager.hasDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
196	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
197	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Runge  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Runge  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Runge	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
198	[BUG]  [BUGGY]  }  else  if(!prototype.equals(rki.prototype))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!prototype.equals(rki.prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!prototype.equals(rki.prototype))  {	  }    else    if(!prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
199	[BUG]  [BUGGY]  }  else  if(!prototype.equals(rki)||!interpolator.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!prototype.equals(rki)||!interpolator.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!prototype.equals(rki)||!interpolator.equals(rki))  {	  }    else    if(!prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
200	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyStepInterpolator()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
201	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyStepInterpolator()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
202	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
203	[BUG]  [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
204	[BUG]  [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  &&!interpolator.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  &&!interpolator.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.isDummyStepInterpolator()  &&!interpolator.isDummyStepInterpolator())  {	  }    else    if(!rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
205	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||!rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||!rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||!rki.isDummyStepInterpolator())  {	  }    else    if(!rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
206	[BUG]  [BUGGY]  }  else  if(!rki.isInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!rki.isInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.isInterpolator())  {	  }    else    if(!rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
207	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(yTmp)&&!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
208	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  isEnabled(RungeKuttaStepInterpolator.class))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  isEnabled(RungeKuttaStepInterpolator.class))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  &&  isEnabled(RungeKuttaStepInterpolator.class))  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
210	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
211	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  &&  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  &&  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  &&  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyEquations()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
212	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeK	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
213	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
214	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKutta  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKutta	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
215	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  r  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  r	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
216	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&!requiresDenseOutput())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty()  &&!requiresDenseOutput())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty()  &&!requiresDenseOutput())  {	  }    else    if(!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
217	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isDummy())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!eventsHandlersManager.isDummy())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isDummy())  {	  }    else    if(!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
218	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
219	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHand  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHand  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHand	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
220	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
221	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
222	[BUG]  [BUGGY]  }  else  if(!requiresDummy()  &&(!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummy()  &&(!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummy()  &&(!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummy()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
223	[BUG]  [BUGGY]  }  else  if(requiresDummy()  ||  (!eventsHandlersManager.isEmpty()  &&  rki!=  null))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummy()  ||  (!eventsHandlersManager.isEmpty()  &&  rki!=  null))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummy()  ||  (!eventsHandlersManager.isEmpty()  &&  rki!=  null))  {	  }    else    if(requiresDummy()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
224	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations()  &&  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquations()  &&  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations()  &&  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyEquations()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
225	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()  &&  rki!=  null))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()  &&  rki!=  null))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()  &&  rki!=  null))  {	  }    else    if(requiresDummyEquations()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
226	[BUG]  [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();	  Interpolator    <    RungeKuttaStepInterpolator>    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
227	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKutt    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
228	[BUG]  [BUGGY]  }  else  if(eventsManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
229	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yT  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yT  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yT	  if(interpolator    ==    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
230	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
231	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
232	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
233	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
234	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
235	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
236	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
237	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
238	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki;	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
239	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||  rki.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  ||  rki.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||  rki.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
240	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||!eventsHandlersManager.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
241	[BUG]  [BUGGY]  }  else  if(!requiresDenseOutput()  &&  eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDenseOutput()  &&  eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDenseOutput()  &&  eventsHandlersManager.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
242	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
243	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
244	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)||  rki.equals(r2))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)||  rki.equals(r2))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)||  rki.equals(r2))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
245	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)||  rki.equals(r1))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)||  rki.equals(r1))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)||  rki.equals(r1))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
246	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)||  rki.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)||  rki.equals(prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)||  rki.equals(prototype))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
247	[BUG]  [BUGGY]  }  else  if(rki!=  null  &&  rki.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki!=  null  &&  rki.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki!=  null  &&  rki.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
248	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty())    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
249	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  prototype!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  &&  prototype!=  null)  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  &&  prototype!=  null)  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
250	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  ||  isVoidStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  ||  isVoidStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  ||  isVoidStepInterpolator())  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
251	[BUG]  [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  &&!interpolator.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  &&!interpolator.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.hasDummyStepInterpolator()  &&!interpolator.hasDummyStepInterpolator())  {	  }    else    if(rki.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
252	[BUG]  [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  &&  interpolator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.hasDummyStepInterpolator()  &&  interpolator  ==  null)  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.hasDummyStepInterpolator()  &&  interpolator  ==  null)  {	  }    else    if(rki.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
253	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator(rki)&&  protocol.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator(rki)&&  protocol.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator(rki)&&  protocol.equals(rki))  {	  }    else    if(prototype.equals(rki)&&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
254	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
255	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  interpolator);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
256	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
257	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
258	[BUG]  [BUGGY]  }  else  if(!hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!hasDummyStepInterpolator())  {	  }    else    if(!requiresDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
259	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty()    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
260	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  &&!eventsHandlersManager.isEmpty())  {	  }    else    if(requiresDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
261	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyEquations()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
262	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()  &&  rki!=  null))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()  &&  rki!=  null))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()  &&  rki!=  null))  {	  }    else    if(requiresDummyEquations()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
263	[BUG]  [BUGGY]  }  else  if(a.equals(rki)||  b.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki)||  b.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki)||  b.equals(rki))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
264	[BUG]  [BUGGY]  }  else  if(a.equals(rki)&&!interpolator.isDummy())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki)&&!interpolator.isDummy())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki)&&!interpolator.isDummy())  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
265	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
266	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(prototype!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
267	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(prototype!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(prototype!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
268	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(scalAbsoluteTolerance!=  t0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(scalAbsoluteTolerance!=  t0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(scalAbsoluteTolerance!=  t0)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&	  if(prototype!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
269	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
270	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
271	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
272	[BUG]  [BUGGY]  }  else  if(eventsManager.isEmpty()  ||  prototype.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsManager.isEmpty()  ||  prototype.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.isEmpty()  ||  prototype.hasDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.hasDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
273	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)rki).reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  ((  RungeKuttaStepInterpolator)rki).reinitialize(this,  y  +  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	((  RungeKuttaStepInterpolator)rki).reinitialize(this,  y  +	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
274	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype.copy()).reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype.copy()).reinitialize(this,  y  +  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	((  RungeKuttaStepInterpolator)prototype.copy()).reinitialize(this,  y  +	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
275	[BUG]  [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  ||!rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  ||!rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.isDummyStepInterpolator()  ||!rki.isDummyStepInterpolator())  {	  }    else    if(!rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
276	[BUG]  [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  &&!rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  &&!rki.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.isDummyStepInterpolator()  &&!rki.isDummyStepInterpolator())  {	  }    else    if(!rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
277	[BUG]  [BUGGY]  }  else  if(!requiresDummy()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummy()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummy()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
278	[BUG]  [BUGGY]  }  else  if(!requiresDummy()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummy()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummy()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummy()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
279	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yDotK,  rki))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(yDotK,  rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yDotK,  rki))  {	  }    else    if(!isDummyStepInterpolator(yDotK))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
280	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
281	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
282	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isInverted())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isInverted())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isInverted())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isVowel())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
283	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVerticalSlope())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVerticalSlope())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isVerticalSlope())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isVowel())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
284	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
285	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
286	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype)&&!interpolator.isDummy())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.equals(prototype)&&!interpolator.isDummy())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype)&&!interpolator.isDummy())  {	  }    else    if(rki.equals(prototype))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
287	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
288	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
289	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
290	[BUG]  [BUGGY]  if(rki!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }	  rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
291	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);	  rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
292	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
293	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
294	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
295	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isScalarStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isScalarStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isScalarStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
296	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp,  rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp,  rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp,  rki))  {	  }    else    if(!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
297	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
298	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
299	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
300	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
301	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(rki)&&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(rki)&&  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(rki)&&  isDummyStepInterpolator(rki))  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
302	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(rki)||!interpolator.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(rki)||!interpolator.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(rki)||!interpolator.equals(rki))  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
303	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Run  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Run  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Run	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
304	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
305	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
306	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
307	[BUG]  [BUGGY]  }  else  if(!prototype.equals(rki)&&!interpolator.isDummy())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!prototype.equals(rki)&&!interpolator.isDummy())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!prototype.equals(rki)&&!interpolator.isDummy())  {	  }    else    if(!prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
308	[BUG]  [BUGGY]  rki.initialize(this,  y1,  t0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  y1,  t0,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  y1,  t0,  yDotK,  forward);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
309	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
310	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
311	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
312	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyEquations()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations()  ||!eventsHandlersManager.isEmpty())  {	  }    else    if(!requiresDummyEquations())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
313	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  y0,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  y0,  yDotK,  interpolator);	  rki.initialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
314	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator()))  {	  }    else    if(requiresDummyStepInterpolator()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
315	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
316	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  transient);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  transient);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  transient);	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
317	[BUG]  [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!rki.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
318	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(yTmp))  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
319	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(rki)&&!interpolator.isDummy())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!interpolator.equals(rki)&&!interpolator.isDummy())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(rki)&&!interpolator.isDummy())  {	  }    else    if(!interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
320	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  }	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
321	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
322	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
323	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
324	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isInstance())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isInstance())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isInstance())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isVowel())    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
325	[BUG]  [BUGGY]  }  else  if(interpolator.equals(rki)||  interpolator.equals(dt))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(interpolator.equals(rki)||  interpolator.equals(dt))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(interpolator.equals(rki)||  interpolator.equals(dt))  {	  }    else    if(interpolator.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
326	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&(!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&(!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  &&(!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDummyStepInterpolator()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
327	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
328	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
329	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
330	[BUG]  [BUGGY]  if(handler  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(handler  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(handler  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge	  if(handler!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
331	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
332	[BUG]  [BUGGY]  }  else  if(prototype.equals(y0)||  prototype.equals(y1))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.equals(y0)||  prototype.equals(y1))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.equals(y0)||  prototype.equals(y1))  {	  }    else    if(prototype.equals(rki)||    prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
333	[BUG]  [BUGGY]  if(t0!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(t0!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(t0!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty())    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
334	[BUG]  [BUGGY]  }  else  if(!isDummyEquations())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyEquations())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyEquations())  {	  }    else    if(!requiresDummyEquations())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
335	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  }	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
336	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	  if(rki    ==    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
337	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  interpolator  =	  if(!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
338	[BUG]  [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.reinitialize(this,  ytmp,  yDotK,  forward);	  rki.reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
339	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
340	[BUG]  [BUGGY]  }  else  if(!isDummy())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummy())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummy())  {	  }    else    if(!requiresDenseOutput())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
341	[BUG]  [BUGGY]  }  else  if(!requiresDummyInput()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyInput()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyInput()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
342	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
343	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHand  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHand  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHand	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
344	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  rki.initialize(this,  t0,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  t0,  yDotK,  interpolator);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
345	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(r2))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(r2))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(r2))  {	  }    else    if(!isDummyStepInterpolator(yTmp)&&!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
346	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  ==  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  ==  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  ==	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
347	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
348	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  }	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
349	[BUG]  [BUGGY]  if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
350	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(yDotK))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(yDotK))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(yDotK))  {	  }    else    if(!isDummyStepInterpolator(yDotK))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
351	[BUG]  [BUGGY]  }  else  if(eventsManager.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsManager.hasDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.hasDummyStepInterpolator())  {	  }    else    if(eventsManager.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
352	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =  (RungeKuttaStepInterpolator)rki.copy();  rki.reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =  (RungeKuttaStepInterpolator)rki.copy();  rki.reinitialize(this,  y  +  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  prototype  =  (RungeKuttaStepInterpolator)rki.copy();  rki.reinitialize(this,  y  +	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
353	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  y  +  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  prototype  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  y  +	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    +    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
354	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlers    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
355	[BUG]  [BUGGY]  }  else  if(prototype.equals(y0)&&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.equals(y0)&&  isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.equals(y0)&&  isDummyStepInterpolator(rki))  {	  }    else    if(prototype.equals(rki)&&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
356	[BUG]  [BUGGY]  }  else  if(prototype.equals(rki)&&  isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(prototype.equals(rki)&&  isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.equals(rki)&&  isDummyStepInterpolator(yTmp))  {	  }    else    if(prototype.equals(rki)&&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
357	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
358	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki;  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki;  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
359	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(yTmp))  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
360	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  ||  isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  ||  isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  ||  isDummyStepInterpolator(yTmp))  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
361	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator(yTmp))  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
362	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator()  ||  isDummyStepInterpolator(yTmp,  forward))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(isDummyStepInterpolator()  ||  isDummyStepInterpolator(yTmp,  forward))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator()  ||  isDummyStepInterpolator(yTmp,  forward))  {	  }    else    if(isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
363	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  }	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
364	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
365	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
366	[BUG]  [BUGGY]  }  else  if(requiresDummy()  ||  eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummy()  ||  eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummy()  ||  eventsHandlersManager.isEmpty())  {	  }    else    if(requiresDenseOutput()    ||    eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
367	[BUG]  [BUGGY]  }  else  if(!requiresDummyInput()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyInput()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyInput()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    &&(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
368	[BUG]  [BUGGY]  }  else  if(!requiresDummyInput()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyInput()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyInput()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
369	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
370	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isInitializingDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isInitializingDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isInitializingDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
371	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVowelStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVowelStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isVowelStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator()    ||    rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
372	[BUG]  [BUGGY]  }  else  if(a.equals(rki)||  a.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki)||  a.equals(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki)||  a.equals(rki))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
373	[BUG]  [BUGGY]  }  else  if(a.equals(rki.interpolator))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki.interpolator))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki.interpolator))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
374	[BUG]  [BUGGY]  }  else  if(a.equals(rki.step))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(a.equals(rki.step))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki.step))  {	  }    else    if(a.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
375	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
376	[BUG]  [BUGGY]  }  else  if(!prototype.equals(y))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!prototype.equals(y))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!prototype.equals(y))  {	  }    else    if(!prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
377	[BUG]  [BUGGY]  }  else  if(!prototype.equals(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!prototype.equals(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!prototype.equals(yTmp))  {	  }    else    if(!prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
378	[BUG]  [BUGGY]  }  else  if(t0.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(t0.equals(prototype))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(t0.equals(prototype))  {	  }    else    if(rki.equals(prototype))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
379	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
380	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  ==  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  ==  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  ==	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
381	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
382	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  }	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
383	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers	  if(rki!=    null)    {    if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
384	[BUG]  [BUGGY]  if(prototype.isDummy())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype.isDummy())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype.isDummy())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
385	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(yTmp))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp)||!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(yTmp))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
386	[BUG]  [BUGGY]  if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
387	[BUG]  [BUGGY]  if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
388	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Run  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Run  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Run	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
389	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
390	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
391	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.handle();	  final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
392	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.handle;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.handle;	  final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
393	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator()))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator()))  {	  }    else    if(requiresDummyEquations()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
394	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHand	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
395	[BUG]  [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(yTmp!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandler	  if(rki!=    null)    {    if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
396	[BUG]  [BUGGY]  }  else  if(eventsManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(eventsManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty()    &&    prototype.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
397	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;      [BUGGY]  }  else  if(!requiresDummyStepInterpolator()  &&!isDummyStepInterpolator(rki))  {  [BUGGY]      interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator()  &&!isDummyStepInterpolator(rki))  {	  }    else    if(!requiresDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
