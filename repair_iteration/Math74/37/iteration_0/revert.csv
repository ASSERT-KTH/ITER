projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(prototype!=null){for(inti=0;i<prototype.size();i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(prototype!=null){for(inti=0;i<prototype.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(prototype!=null){for(inti=0;i<prototype.size();i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(prototype!=null){for(inti=0;i<prototype.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216rki.reinitialize(this,yTmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}else{
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(rki.isDummyStepInterpolator()){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(prototype.equals(rki)){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorhandler=prototype.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolator
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(requiresDenseOutput()||(eventsHandlersManager.isEmpty())){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(requiresDenseOutput()){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(eventsHandlersManager.isEmpty()){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216}elseif(!isDummyStepInterpolator(rki)){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,yDotK,forward);interpolator=rki;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,yDotK,forward);interpolator=rki
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,yDotK,forward);interpolator
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,yDotK,forward);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java216if(eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,yDotK,forward);interpolator=
