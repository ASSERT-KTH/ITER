bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  if(eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  }  else  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator())  {	  }    else    if(requiresDenseOutput())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  }  else  if(!requiresDenseOutput())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!requiresDenseOutput())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDenseOutput())  {	  }    else    if(requiresDenseOutput())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  }  else  if(isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(isDummyStepInterpolator())  {	  }    else    if(requiresDenseOutput())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  rki	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty())	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  }  else  if(rki.equals(prototype))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(rki.equals(prototype))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.equals(prototype))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  }  else  if(interpolator.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(interpolator.equals(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(interpolator.equals(rki))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  }  else  if(!interpolator.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!interpolator.equals(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!interpolator.equals(rki))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  }  else  if(prototype.equals(rki)||  prototype.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(prototype.equals(rki)||  prototype.equals(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.equals(rki)||  prototype.equals(rki))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyStepInterpolator()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  }  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummyEquations()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  }  else  if(!requiresDenseOutput()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!requiresDenseOutput()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDenseOutput()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yDotK))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(yDotK))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yDotK))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
25	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
26	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(yTmp))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(rki)||!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  handler  =  prototype.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  handler  =  prototype.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype.  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutt  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutt  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutt	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.reinitialize(this,  y0,  yDotK,  forward);	      rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.reinitialize(this,  t0,  yDotK,  forward);	      rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  rki.initialize(this,  y0,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  y0,  yDotK,  forward);	      rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
34	[BUG]  [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  <  RungeKuttaStepInterpolator>  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  &&  prototype.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  }  else  if(!rki.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!rki.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!rki.isDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  y	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.initialize(this,  yTmp,  yDotK,  forward);	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
59	[BUG]  [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!eventsHandlersManager.isEmpty())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!eventsHandlersManager.isEmpty())  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
60	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  &&  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
61	[BUG]  [BUGGY]  }  else  if(requiresDenseOutput()  ||  eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDenseOutput()  ||  eventsHandlersManager.isEmpty())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDenseOutput()  ||  eventsHandlersManager.isEmpty())  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
62	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  ||  prototype.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
63	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(prototype!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
65	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  r	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  }  else  if(rki.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(rki.hasDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.hasDummyStepInterpolator())  {	  }    else    if(rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki  ==  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  if(handler!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(handler!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(handler!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  if(handler!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(handler!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(handler!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlers	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
77	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  }	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
78	[BUG]  [BUGGY]  }  else  if(!requiresDenseOutput()  &&(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!requiresDenseOutput()  &&(eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDenseOutput()  &&(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  }  else  if(requiresDummy()  ||(eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummy()  ||(eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummy()  ||(eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||(eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  }  else  if(eventsManager.isDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(eventsManager.isDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsManager.isDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  &&  isDummyStepInterpolator(rki))  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator  ==  null)  {  for(int  i  =  0;  i  <  prototype.size();  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.size();    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    y    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  }  else  if(!requiresDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!requiresDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyStepInterpolator())  {	  }    else    if(requiresDenseOutput())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  }  else  if(!requiresDummyEquations())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!requiresDummyEquations())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!requiresDummyEquations())  {	  }    else    if(requiresDenseOutput())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  }  else  if(!prototype.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!prototype.equals(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!prototype.equals(rki))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  }  else  if(prototype.equals(rki)&&  isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(prototype.equals(rki)&&  isDummyStepInterpolator(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(prototype.equals(rki)&&  isDummyStepInterpolator(rki))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
95	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
96	[BUG]  [BUGGY]  Interpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  Interpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	Interpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
98	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  }	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
99	[BUG]  [BUGGY]  }  else  if(a.equals(rki))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(a.equals(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(a.equals(rki))  {	  }    else    if(prototype.equals(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
100	[BUG]  [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVowel())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(rki.isDummyStepInterpolator()  ||  rki.isVowel())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(rki.isDummyStepInterpolator()  ||  rki.isVowel())  {	  }    else    if(rki.isDummyStepInterpolator())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
101	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    rki    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
102	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  prototype.length;  i++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  +	      if(prototype!=    null)    {    for(int    i    =    0;    i    <    prototype.length;    i++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
103	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  prototype	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  handler  =	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    handler    =    prototype.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
105	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  rki.initialize(this,  t0,  yDotK,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	rki.initialize(this,  t0,  yDotK,  forward);	      rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  r  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  r	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
107	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeK  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  RungeK	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Runge  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Runge  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  final  Runge	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(rki)&&!isDummyStepInterpolator(yTmp))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
110	[BUG]  [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)&&!isDummyStepInterpolator(rki))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(!isDummyStepInterpolator(yTmp)&&!isDummyStepInterpolator(rki))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(!isDummyStepInterpolator(yTmp)&&!isDummyStepInterpolator(rki))  {	  }    else    if(!isDummyStepInterpolator(rki))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
111	[BUG]  [BUGGY]  }  else  if(requiresDummy()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(requiresDummy()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(requiresDummy()  ||  (!eventsHandlersManager.isEmpty()))  {	  }    else    if(requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
112	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final	      if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
114	[BUG]  [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  prototype.hasDummyStepInterpolator())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  }  else  if(eventsHandlersManager.isEmpty()  &&  prototype.hasDummyStepInterpolator())  {  [BUGGY]    interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	}  else  if(eventsHandlersManager.isEmpty()  &&  prototype.hasDummyStepInterpolator())  {	  }    else    if(eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;    [BUGGY]  if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	216	216	1	replace	if(!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  back);  interpolator  =	      if(eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    yDotK,    forward);    interpolator    =    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
