bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  t.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  t.length);	  sanityChecks(c,    y0,    t,    t.length);    	non-compiled	[CE]  ';'  expected	21	None	replace
2	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y,  t.length);	  sanityChecks(c,    y0,    t,    t.length);    	non-compiled	[CE]  ';'  expected	21	None	replace
3	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  t.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  t,  t.length);	  sanityChecks(c,    y0,    t,    t.length);    	non-compiled	[CE]  ';'  expected	21	None	replace
4	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  c,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  c,  0,  c.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  c,  0,  c.length  +  1);	  sanityChecks(equations,    t0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
5	[BUG]  [BUGGY]  sanityChecks(c,  t0,  c,  0,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  c,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  c,  0,  c.length);	  sanityChecks(equations,    t0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
6	[BUG]  [BUGGY]  sanityChecks(c,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
7	[BUG]  [BUGGY]  sanityChecks(c,  t0,  t,  c.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  t,  c.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  t,  c.length);  setEvaluations(equations);	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  c,  0,  c.length  +  1);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	45	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  c.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  b,  0,  c.length);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  b,  0,  c.length);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	45	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  2);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  2);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  c,  0,  c.length  +  2);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	45	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(c,  0,  t,  0,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  t,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  t,  0,  c.length);	  System.arraycopy(c,    0,    t,    0,    t.length);    	non-compiled	[CE]  ';'  expected	63	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  c,  0,  t.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  c,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  c,  0,  t.length);	  System.arraycopy(c,    0,    t,    0,    t.length);    	non-compiled	[CE]  ';'  expected	63	None	replace
13	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  c.length  +  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t!=  c.length  +  1;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t!=  c.length  +  1;	  final    boolean    forward    =    t!=    c.length;    	non-compiled	[CE]  ';'  expected	3	None	replace
14	[BUG]  [BUGGY]  final  boolean  forward  =  t  >  c.length;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t  >  c.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t  >  c.length;	  final    boolean    forward    =    t!=    c.length;    	non-compiled	[CE]  ';'  expected	3	None	replace
15	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  c.length);	  sanityChecks(equations,    t0,    y,    t,    c.length);    	non-compiled	[CE]  ';'  expected	64	None	replace
16	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y,  0,  c.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y,  0,  c.length  +  1);	  sanityChecks(equations,    t0,    y,    0,    c.length    +    1);    	non-compiled	[CE]  ';'  expected	11	None	replace
17	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  t,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  t,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  t,  c.length);	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	44	None	replace
18	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(stages);	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	44	None	replace
19	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  ==  t0.length;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  ==  t0.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  ==  t0.length;	  final    boolean    forward    =    t    ==    t0.length;    	non-compiled	[CE]  ';'  expected	36	None	replace
20	[BUG]  [BUGGY]  final  boolean  forward  =  t.length!=  t0.length;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length!=  t0.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length!=  t0.length;	  final    boolean    forward    =    t    ==    t0.length;    	non-compiled	[CE]  ';'  expected	36	None	replace
21	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  >=  t0.length;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  >=  t0.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  >=  t0.length;	  final    boolean    forward    =    t    ==    t0.length;    	non-compiled	[CE]  ';'  expected	36	None	replace
22	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  c.length  +  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  c.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  c.length  +  1);	  sanityChecks(t0,    y0,    t,    c.length    +    1);    	non-compiled	[CE]  ';'  expected	47	None	replace
23	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  k);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  k);	  sanityChecks(equations,    t0,    y,    t,    k);    	non-compiled	[CE]  ';'  expected	16	None	replace
24	[BUG]  [BUGGY]  sanityChecks(t0,  y,  t,  k);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y,  t,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y,  t,  k);	  sanityChecks(equations,    t0,    y,    t,    k);    	non-compiled	[CE]  ';'  expected	16	None	replace
25	[BUG]  [BUGGY]  if(c  ==  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c  ==  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c  ==  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }	  if(c!=    null)    {    sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    0,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    0,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  }	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    0,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(c,  0,  t1,  0,  t.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  t1,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  t1,  0,  t.length);	  System.arraycopy(c,    0,    t0,    0,    t.length);    	non-compiled	[CE]  ';'  expected	51	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(c,  0,  t0,  0,  c.length);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  t0,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  t0,  0,  c.length);	  System.arraycopy(c,    0,    t0,    0,    t.length);    	non-compiled	[CE]  ';'  expected	51	None	replace
31	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  c);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  c);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  c);	  sanityChecks(equations,    t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	19	None	replace
32	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  t,  equations);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y0,  t,  equations);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y0,  t,  equations);	  sanityChecks(equations,    t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	19	None	replace
33	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  >  t0;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  >  t0;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  >  t0;	  final    boolean    forward    =    t.length    ==    t0;    	non-compiled	[CE]  ';'  expected	2	None	replace
34	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  >  t0.length;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  >  t0.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  >  t0.length;	  final    boolean    forward    =    t.length    ==    t0;    	non-compiled	[CE]  ';'  expected	2	None	replace
35	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  +  1;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  +  1;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  +  1;	  final    boolean    forward    =    t.length    ==    t0;    	non-compiled	[CE]  ';'  expected	2	None	replace
36	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  ==  1;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  ==  1;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  ==  1;	  final    boolean    forward    =    t.length    ==    t0;    	non-compiled	[CE]  ';'  expected	2	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(t,  0,  c,  0,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t,  0,  c,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t,  0,  c,  0,  t.length);	  System.arraycopy(c,    0,    stages,    0,    t.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
38	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();	  sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	39	None	replace
39	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  c.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y0,  c.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y0,  c.length);  setEvaluations(equations);	  sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	39	None	replace
40	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y,  equations,  t.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y,  equations,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y,  equations,  t.length);	  sanityChecks(equations,    t0,    y,    c,    t.length);    	non-compiled	[CE]  ';'  expected	66	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  0,  c.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  0,  c.length);	  System.arraycopy(t0,    0,    t,    0,    t.length);    	non-compiled	[CE]  ';'  expected	27	None	replace
42	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  <  =  t0;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  <  =  t0;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  <  =  t0;	  final    boolean    forward    =    t    <    =    t0;    	non-compiled	[CE]  ';'  expected	30	None	replace
43	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  t);	  sanityChecks(c,    t0,    y0,    equations,    t);    	non-compiled	[CE]  ';'  expected	23	None	replace
44	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  equations,  c);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  equations,  c);	  sanityChecks(c,    t0,    y0,    equations,    t);    	non-compiled	[CE]  ';'  expected	23	None	replace
45	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y,  c.length);	  sanityChecks(c,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	46	None	replace
46	[BUG]  [BUGGY]  sanityChecks(t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	40	None	replace
47	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  k);  setEvaluations(equations);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  k);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  k);  setEvaluations(equations);	  sanityChecks(equations,    t0,    y,    t,    k);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	31	None	replace
48	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  c,  t.length);	  sanityChecks(c,    t0,    y0,    t,    equations.length);    	non-compiled	[CE]  ';'  expected	8	None	replace
49	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  c,  length);	  sanityChecks(c,    t0,    y0,    t,    equations.length);    	non-compiled	[CE]  ';'  expected	8	None	replace
50	[BUG]  [BUGGY]  sanityChecks(c,  y0,  t,  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  y0,  t,  t);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  y0,  t,  t);	  sanityChecks(t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	67	None	replace
51	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  c);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  c);	  sanityChecks(t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	67	None	replace
52	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y0,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y0,  t);	  sanityChecks(t0,    y0,    c,    t);    	non-compiled	[CE]  ';'  expected	24	None	replace
53	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  k);  setEvaluations(stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  k);  setEvaluations(stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  k);  setEvaluations(stages);	  sanityChecks(equations,    t0,    y0,    t,    k);    setEvaluations(stages);    	non-compiled	[CE]  ';'  expected	5	None	replace
54	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  k);  setEvaluations(stages);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  k);  setEvaluations(stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  k);  setEvaluations(stages);	  sanityChecks(equations,    t0,    y0,    t,    k);    setEvaluations(stages);    	non-compiled	[CE]  ';'  expected	5	None	replace
55	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  k);  setEvaluations(stages);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  k);  setEvaluations(stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  y0,  t,  k);  setEvaluations(stages);	  sanityChecks(equations,    t0,    y0,    t,    k);    setEvaluations(stages);    	non-compiled	[CE]  ';'  expected	5	None	replace
56	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  k);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  y0,  t,  k);	  sanityChecks(equations,    t0,    y0,    t,    k);    setEvaluations(stages);    	non-compiled	[CE]  ';'  expected	5	None	replace
57	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  0,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  0,  c.length);	  sanityChecks(c,    t0,    y,    0,    c.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
58	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  t,  c);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y1,  t,  c);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y1,  t,  c);	  sanityChecks(equations,    t0,    y1,    c,    t);    	non-compiled	[CE]  ';'  expected	55	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(stages,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(stages,  0,  t.length);	  System.arraycopy(t0,    0,    t,    0,    t.length);    System.arraycopy(stages,    0,    t.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
60	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c.length  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c.length  +  1);	  sanityChecks(equations,    t0,    y,    c.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
61	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  +  t.length;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  +  t.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  +  t.length;	  final    boolean    forward    =    t.length!=    t0;    	non-compiled	[CE]  ';'  expected	6	None	replace
62	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  ==  c.length;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  ==  c.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  ==  c.length;	  final    boolean    forward    =    t.length!=    t0;    	non-compiled	[CE]  ';'  expected	6	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  resetEvaluations();	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    1,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    1,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  1,  c.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  1,  c.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  1,  c.length);  setEvaluations(equations);  resetEvaluations();	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    1,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  1,  t.length);  setEvaluations(equations);  resetEvaluations();  }	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    1,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
67	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  c,  k);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y1,  c,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y1,  c,  k);	  sanityChecks(equations,    t0,    y0,    c,    k);    	non-compiled	[CE]  ';'  expected	53	None	replace
68	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  k);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  k);	  sanityChecks(equations,    t0,    y0,    c,    k);    	non-compiled	[CE]  ';'  expected	53	None	replace
69	[BUG]  [BUGGY]  if(c  ==  null)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c  ==  null)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c  ==  null)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }	  if(c!=    null)    {    sanityChecks(equations,    t0,    y,    0,    c.length);    setEvaluations(equations);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
70	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y,  equations,  t);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y,  equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y,  equations,  t);	  sanityChecks(equations,    t0,    y,    c,    t);    	non-compiled	[CE]  ';'  expected	25	None	replace
71	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  y0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  y0,  c.length);	  sanityChecks(equations,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	20	None	replace
72	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c.length);	  sanityChecks(equations,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	20	None	replace
73	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,	  if(c!=    null)    {    sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    }    else    {    System.arraycopy(stages,    0,    stages,    0,    c.length);    }    	non-compiled	[CE]  ';'  expected	35	None	replace
74	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  k);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  k);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  k);  setEvaluations(equations);  resetEvaluations();	  sanityChecks(equations,    t0,    y0,    t,    k);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	48	None	replace
75	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c.length,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c.length,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c.length,  c.length);	  sanityChecks(equations,    c.length,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	54	None	replace
76	[BUG]  [BUGGY]  sanityChecks(t0,  c.length,  y0,  c.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  c.length,  y0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  c.length,  y0,  c.length);	  sanityChecks(equations,    c.length,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	54	None	replace
77	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  c.length  +  1;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t  ==  c.length  +  1;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t  ==  c.length  +  1;	  final    boolean    forward    =    t    ==    c.length;    	non-compiled	[CE]  ';'  expected	1	None	replace
78	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  c.length  +  1;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t  >=  c.length  +  1;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t  >=  c.length  +  1;	  final    boolean    forward    =    t    ==    c.length;    	non-compiled	[CE]  ';'  expected	1	None	replace
79	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  >>  t0.length;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  >>  t0.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  >>  t0.length;	  final    boolean    forward    =    t!=    t0.length;    	non-compiled	[CE]  ';'  expected	37	None	replace
80	[BUG]  [BUGGY]  sanityChecks(t0,  t,  c.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  t,  c.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  t,  c.length);  setEvaluations(equations);	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	34	None	replace
81	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  0,  c.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  0,  c.length  +  1);	  sanityChecks(equations,    t0,    y,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	65	None	replace
82	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  c,  c.length);	  sanityChecks(t0,    y0,    c,    c.length);    	non-compiled	[CE]  ';'  expected	7	None	replace
83	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  c,  stages);	  sanityChecks(equations,    t0,    y0,    c,    k);    	non-compiled	[CE]  ';'  expected	53	None	replace
84	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  t.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  y0,  t,  t.length);	  sanityChecks(c,    y0,    t,    t.length);    	non-compiled	[CE]  ';'  expected	21	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  t,  0,  t.length);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(stages,  0,  t,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(stages,  0,  t,  0,  t.length);	  System.arraycopy(t0,    0,    stages,    0,    t.length);    	non-compiled	[CE]  ';'  expected	28	None	replace
86	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	40	None	replace
87	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	40	None	replace
88	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  t);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  t,  t);	  sanityChecks(equations,    t0,    y1,    c,    t);    	non-compiled	[CE]  ';'  expected	55	None	replace
89	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  t,  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y1,  t,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y1,  t,  t);	  sanityChecks(equations,    t0,    y1,    c,    t);    	non-compiled	[CE]  ';'  expected	55	None	replace
90	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  y0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  y0,  c.length);	  sanityChecks(c,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	46	None	replace
91	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	34	None	replace
92	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  stages);	  sanityChecks(equations,    t0,    y,    c,    t);    	non-compiled	[CE]  ';'  expected	25	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(c,  0,  t0,  0,  t.length  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  t0,  0,  t.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  t0,  0,  t.length  +  1);	  System.arraycopy(c,    0,    t0,    0,    t.length);    	non-compiled	[CE]  ';'  expected	51	None	replace
94	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  equations.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  equations.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  equations.length);	  sanityChecks(c,    t0,    y0,    t,    equations.length);    	non-compiled	[CE]  ';'  expected	8	None	replace
95	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  equations.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  equations.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  t,  equations.length);	  sanityChecks(c,    t0,    y0,    t,    equations.length);    	non-compiled	[CE]  ';'  expected	8	None	replace
96	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
97	[BUG]  [BUGGY]  if(c  ==  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c  ==  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c  ==  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
98	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
99	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
100	[BUG]  [BUGGY]  final  boolean  forward  =  t.length  ==  2;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length  ==  2;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length  ==  2;	  final    boolean    forward    =    t.length    ==    t0;    	non-compiled	[CE]  ';'  expected	2	None	replace
101	[BUG]  [BUGGY]  final  boolean  forward  =  t.length!=  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length!=  1;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length!=  1;	  final    boolean    forward    =    t.length    ==    t0;    	non-compiled	[CE]  ';'  expected	2	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  t,  0,  t.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  t,  0,  t.length  +  1);	  System.arraycopy(t0,    0,    t,    0,    t.length);    	non-compiled	[CE]  ';'  expected	27	None	replace
103	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  t);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  t);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  t,  t);  setEvaluations(equations);	  sanityChecks(equations,    t0,    y1,    c,    t);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	15	None	replace
104	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  equations,  t);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  equations,  t);	  sanityChecks(c,    t0,    y0,    equations,    t);    	non-compiled	[CE]  ';'  expected	23	None	replace
105	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  else  {  resetEvaluations();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  else  {  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  else  {  resetEvaluations();  }	  if(c!=    null)    {    sanityChecks(equations,    t0,    y,    0,    c.length);    setEvaluations(equations);    }    else    {    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	60	None	replace
106	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  0,  c.length);  setEvaluations(equations);  }	  if(c!=    null)    {    sanityChecks(equations,    t0,    y,    0,    c.length);    setEvaluations(equations);    }    else    {    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	60	None	replace
107	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  t,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  t,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  t,  c.length);	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	44	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(c,  0,  stages,  0,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  stages,  0,  c.length);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  stages,  0,  c.length);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	45	None	replace
109	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    y,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	12	None	replace
110	[BUG]  [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    y,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	12	None	replace
111	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  0,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y0,  c,  0,  c.length);	  sanityChecks(equations,    t0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
112	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  t,  0,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  t,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  t,  0,  c.length);	  sanityChecks(equations,    t0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
113	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  t);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  t);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  t);  setEvaluations(equations);	  sanityChecks(t0,    y0,    c,    t);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	14	None	replace
114	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  1,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  1,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  1,  c.length);	  sanityChecks(equations,    t0,    y,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	65	None	replace
115	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  c.length  +  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  c.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  c.length  +  1);	  sanityChecks(equations,    t0,    y,    t,    c.length);    	non-compiled	[CE]  ';'  expected	64	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(t,  0,  stages,  0,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t,  0,  stages,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t,  0,  stages,  0,  t.length);	  System.arraycopy(c,    0,    stages,    0,    t.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
117	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  y0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  y0,  t.length);	  sanityChecks(t0,    y0,    c,    t.length);    	non-compiled	[CE]  ';'  expected	61	None	replace
118	[BUG]  [BUGGY]  sanityChecks(c,  y0,  t,  0,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  y0,  t,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  y0,  t,  0,  c.length);	  sanityChecks(c,    t0,    y,    0,    c.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
119	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  j);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  j);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  j);	  sanityChecks(equations,    t0,    y,    t,    k);    	non-compiled	[CE]  ';'  expected	16	None	replace
120	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  t.length;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t!=  t.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t!=  t.length;	  final    boolean    forward    =    t!=    t0.length;    	non-compiled	[CE]  ';'  expected	37	None	replace
121	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y1,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y1,  c.length);	  sanityChecks(equations,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	20	None	replace
122	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  c.length;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t  >=  c.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t  >=  c.length;	  final    boolean    forward    =    t!=    c.length;    	non-compiled	[CE]  ';'  expected	3	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  t0.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(stages,  0,  t0.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(stages,  0,  t0.length);	  System.arraycopy(t0,    0,    t,    0,    t.length);    System.arraycopy(stages,    0,    t.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
124	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  t);  setEvaluations(stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  t);  setEvaluations(stages);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  t);  setEvaluations(stages);	  sanityChecks(equations,    t0,    y,    c,    t);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	58	None	replace
125	[BUG]  [BUGGY]  final  boolean  forward  =  t.length!=  2;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t.length!=  2;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t.length!=  2;	  final    boolean    forward    =    t.length!=    t0;    	non-compiled	[CE]  ';'  expected	6	None	replace
126	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  j);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  j);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  j);	  sanityChecks(t0,    y0,    t,    k);    	non-compiled	[CE]  ';'  expected	17	None	replace
127	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }	  sanityChecks(equations,    t0,    y,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	13	None	replace
128	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }	  sanityChecks(equations,    t0,    y,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	13	None	replace
129	[BUG]  [BUGGY]  sanityChecks(t0,  c.length,  y0,  c,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  c.length,  y0,  c,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  c.length,  y0,  c,  c.length);	  sanityChecks(equations,    c.length,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	54	None	replace
130	[BUG]  [BUGGY]  sanityChecks(t,  c.length,  y0,  c,  c.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t,  c.length,  y0,  c,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t,  c.length,  y0,  c,  c.length);	  sanityChecks(equations,    c.length,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	54	None	replace
131	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }	  if(c!=    null)    {    sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
132	[BUG]  [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c!=  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c!=  null)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	39	None	replace
133	[BUG]  [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	39	None	replace
134	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  c.length);  }	  if(c!=    null)    {    sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    }    else    {    System.arraycopy(stages,    0,    stages,    0,    c.length);    }    	non-compiled	[CE]  ';'  expected	35	None	replace
135	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  c,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  c,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  c,  c.length);	  sanityChecks(t0,    y0,    c,    c.length);    	non-compiled	[CE]  ';'  expected	7	None	replace
136	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  y0,  c,  t);	  sanityChecks(t0,    y0,    c,    t);    	non-compiled	[CE]  ';'  expected	24	None	replace
137	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  y);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  y);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  y);	  sanityChecks(t0,    y0,    c,    t);    	non-compiled	[CE]  ';'  expected	24	None	replace
138	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y2,  t,  k);  setEvaluations(equations);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y2,  t,  k);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y2,  t,  k);  setEvaluations(equations);	  sanityChecks(equations,    t0,    y1,    t,    k);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	32	None	replace
139	[BUG]  [BUGGY]  sanityChecks(c,  y0,  t,  t0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  y0,  t,  t0);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  y0,  t,  t0);	  sanityChecks(t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	67	None	replace
140	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  t.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  t.length);	  sanityChecks(equations,    t0,    y,    c,    t.length);    	non-compiled	[CE]  ';'  expected	66	None	replace
141	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  0,  c.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y1,  0,  c.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y1,  0,  c.length);  setEvaluations(equations);	  if(c!=    null)    {    sanityChecks(equations,    t0,    y,    0,    c.length);    setEvaluations(equations);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
142	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  c.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  c.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  c.length);  setEvaluations(equations);	  sanityChecks(t0,    y0,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	29	None	replace
143	[BUG]  [BUGGY]  if(c.length  ==  0)  {  sanityChecks(t0,  y0,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  ==  0)  {  sanityChecks(t0,  y0,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  ==  0)  {  sanityChecks(t0,  y0,  c.length);  setEvaluations(equations);  }	  sanityChecks(t0,    y0,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	29	None	replace
144	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  t.length  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  t.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  t.length  +  1);	  sanityChecks(equations,    t0,    y,    c,    t.length);    	non-compiled	[CE]  ';'  expected	66	None	replace
145	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  0,  t.length);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  0,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  0,  t.length);	  sanityChecks(equations,    t0,    y,    c,    t.length);    	non-compiled	[CE]  ';'  expected	66	None	replace
146	[BUG]  [BUGGY]  sanityChecks(t0,  y,  t,  k);  setEvaluations(equations);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y,  t,  k);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y,  t,  k);  setEvaluations(equations);	  sanityChecks(equations,    t0,    y,    t,    k);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	31	None	replace
147	[BUG]  [BUGGY]  sanityChecks(equations,  t0.length,  y0,  c,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0.length,  y0,  c,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0.length,  y0,  c,  c.length);	  sanityChecks(equations,    c.length,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	54	None	replace
148	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  }	  if(c.length    ==    0)    {    sanityChecks(t0,    y0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	56	None	replace
149	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();	  if(c.length    ==    0)    {    sanityChecks(t0,    y0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	56	None	replace
150	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  resetEvaluations();  }	  if(c.length    ==    0)    {    sanityChecks(t0,    y0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	56	None	replace
151	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  t.length);  setEvaluations(equations);	  if(c.length    ==    0)    {    sanityChecks(t0,    y0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	56	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(c,  0,  t,  1,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  t,  1,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  t,  1,  t.length);	  System.arraycopy(c,    0,    t,    0,    t.length);    	non-compiled	[CE]  ';'  expected	63	None	replace
153	[BUG]  [BUGGY]  sanityChecks(c,  y0,  t,  c);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  y0,  t,  c);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  y0,  t,  c);	  sanityChecks(t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	67	None	replace
154	[BUG]  [BUGGY]  sanityChecks(equations,  t1,  y,  c,  t);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t1,  y,  c,  t);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t1,  y,  c,  t);  setEvaluations(equations);	  sanityChecks(equations,    t0,    y,    c,    t);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	58	None	replace
155	[BUG]  [BUGGY]  sanityChecks(equations,  c,  y0,  t,  c);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  c,  y0,  t,  c);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  c,  y0,  t,  c);	  sanityChecks(equations,    t0,    y0,    t,    c);    	non-compiled	[CE]  ';'  expected	19	None	replace
156	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  equations.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  equations.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  equations.length);	  sanityChecks(c,    t0,    y0,    t,    equations.length);    	non-compiled	[CE]  ';'  expected	8	None	replace
157	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
158	[BUG]  [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  ==  0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	57	None	replace
159	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  t);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  t);	  sanityChecks(t0,    y0,    c,    t);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	14	None	replace
160	[BUG]  [BUGGY]  if(t  <  t0)  {  System.arraycopy(t0,  0,  t,  1,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  <  t0)  {  System.arraycopy(t0,  0,  t,  1,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  <  t0)  {  System.arraycopy(t0,  0,  t,  1,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    1,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
161	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  k);  setEvaluations(equations);  resetEvaluations();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  k);  setEvaluations(equations);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  k);  setEvaluations(equations);  resetEvaluations();	  sanityChecks(equations,    t0,    y0,    t,    k);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	48	None	replace
162	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  k);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  k);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  k);  setEvaluations(equations);	  sanityChecks(t0,    y0,    t,    k);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	4	None	replace
163	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  k);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  k);	  sanityChecks(t0,    y0,    t,    k);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	4	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  stages,  0,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(t0,  0,  stages,  0,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(t0,  0,  stages,  0,  c.length);	  System.arraycopy(c,    0,    stages,    0,    t.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
165	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	40	None	replace
166	[BUG]  [BUGGY]  if(c.length  >  0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  >  0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  >  0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	40	None	replace
167	[BUG]  [BUGGY]  if(c.length  ==  0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  ==  0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  ==  0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	40	None	replace
168	[BUG]  [BUGGY]  if(t0  ==  t0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t0  ==  t0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t0  ==  t0)  {  sanityChecks(stages,  t0,  t,  c.length);  setEvaluations(equations);  }	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	44	None	replace
169	[BUG]  [BUGGY]  sanityChecks(t0,  t,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  t,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  t,  c.length);	  sanityChecks(stages,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	44	None	replace
170	[BUG]  [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(c.length  ==  0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  }	  sanityChecks(equations,    t0,    y,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	13	None	replace
171	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  0,  c.length  +  2);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  0,  c.length  +  2);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  0,  c.length  +  2);	  sanityChecks(equations,    t0,    y,    0,    c.length    +    1);    	non-compiled	[CE]  ';'  expected	11	None	replace
172	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  length);	  sanityChecks(c,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	46	None	replace
173	[BUG]  [BUGGY]  sanityChecks(c,  t0,  t,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(c,  t0,  t,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(c,  t0,  t,  c.length);	  sanityChecks(c,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	46	None	replace
174	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  a.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  a.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  a.length);	  sanityChecks(t0,    y0,    c,    c.length);    	non-compiled	[CE]  ';'  expected	7	None	replace
175	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  t,  t.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(stages,  t0,  t,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(stages,  t0,  t,  t.length);	  sanityChecks(c,    y0,    t,    t.length);    	non-compiled	[CE]  ';'  expected	21	None	replace
176	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t.length);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t.length);	  sanityChecks(c,    y0,    t,    t.length);    	non-compiled	[CE]  ';'  expected	21	None	replace
177	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  c.length;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t  <  c.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t  <  c.length;	  final    boolean    forward    =    t    ==    c.length;    	non-compiled	[CE]  ';'  expected	1	None	replace
178	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  y0,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	39	None	replace
179	[BUG]  [BUGGY]  sanityChecks(t0,  y1,  t,  k);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y1,  t,  k);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y1,  t,  k);	  sanityChecks(t0,    y0,    t,    k);    	non-compiled	[CE]  ';'  expected	17	None	replace
180	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  t,  t);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  t,  t);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  c,  t,  t);	  sanityChecks(equations,    t0,    y,    c,    t);    	non-compiled	[CE]  ';'  expected	25	None	replace
181	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  c.length);  setEvaluations(equations);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y1,  c.length);  setEvaluations(equations);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y1,  c.length);  setEvaluations(equations);	  if(c!=    null)    {    sanityChecks(equations,    t0,    y0,    c.length);    setEvaluations(equations);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  1,  c.length);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  c,  1,  c.length);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  c,  1,  c.length);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	45	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1,  c.length);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1,  c.length);  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	System.arraycopy(c,  0,  c,  0,  c.length  +  1,  c.length);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  ';'  expected	45	None	replace
184	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(equations,  t0,  y,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  sanityChecks(equations,    t0,    y,    c.length);    setEvaluations(equations);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	12	None	replace
185	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  if(c!=    null)    {    sanityChecks(t0,    y0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	38	None	replace
186	[BUG]  [BUGGY]  if(t  >  t0)  {  sanityChecks(t0,  y0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  >  t0)  {  sanityChecks(t0,  y0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  >  t0)  {  sanityChecks(t0,  y0,  t,  c.length);  setEvaluations(equations);  resetEvaluations();  }	  if(c!=    null)    {    sanityChecks(t0,    y0,    t,    c.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	38	None	replace
187	[BUG]  [BUGGY]  if(t  <  t0  ||  t  >  t0)  {  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t  <  t0  ||  t  >  t0)  {  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t  <  t0  ||  t  >  t0)  {  System.arraycopy(t0,  0,  t,  0,  t.length);  setEvaluations(equations);  resetEvaluations();  }	  if(t    <    t0)    {    System.arraycopy(t0,    0,    t,    0,    t.length);    setEvaluations(equations);    resetEvaluations();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
188	[BUG]  [BUGGY]  if(t0  ==  t0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  if(t0  ==  t0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	if(t0  ==  t0)  {  sanityChecks(equations,  t0,  t,  c.length);  setEvaluations(equations);  }	  sanityChecks(equations,    t0,    t,    c.length);    setEvaluations(equations);    	non-compiled	[CE]  ';'  expected	34	None	replace
189	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  t0.length;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  final  boolean  forward  =  t  <  t0.length;  [BUGGY]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	final  boolean  forward  =  t  <  t0.length;	  final    boolean    forward    =    t    ==    t0.length;    	non-compiled	[CE]  ';'  expected	36	None	replace
190	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  t.length  +  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  c,  t.length  +  1);  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  c,  t.length  +  1);	  sanityChecks(t0,    y0,    t,    c.length    +    1);    	non-compiled	[CE]  ';'  expected	47	None	replace
191	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  t,  k);  resetEvaluations();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(equations,  t0,  y,  t,  k);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(equations,  t0,  y,  t,  k);  resetEvaluations();	  sanityChecks(equations,    t0,    y0,    t,    k);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	49	None	replace
192	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  k);  resetEvaluations();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();      [BUGGY]  sanityChecks(t0,  y0,  t,  k);  resetEvaluations();  [BUGGY]      final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	200	200	1	replace	sanityChecks(t0,  y0,  t,  k);  resetEvaluations();	  sanityChecks(equations,    t0,    y0,    t,    k);    resetEvaluations();    	non-compiled	[CE]  ';'  expected	49	None	replace
