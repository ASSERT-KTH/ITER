bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
5	[BUG] [BUGGY] interpolator.storeTime(stepStart + stepSize); [FE] AssertionError [CONTEXT] sum+= b[l] * yDotK[l][j]; } yTmp[j] = y[j] + stepSize * sum; }  error = estimateError(yDotK, y, yTmp, stepSize); if (error <= 1.0) {  [BUGGY] interpolator.storeTime(stepStart + stepSize); [BUGGY] if (manager.evaluateStep(interpolator)) { final double dt = manager.getEventTime() - stepStart; if (Math.abs(dt) <= Math.ulp(stepStart)) {  loop = false; } else {  hNew = dt; } } else { [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean firstTime forward fsal lastStep loop nextIsLast CombinedEventsManager manager double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yTmp double dt error exp factor hNew maxGrowth maxStep minReduction minStep nextStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int j k l stages FirstOrderDifferentialEquations equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.5	288	288	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] sum+= b[l] * yDotK[l][j]; } yTmp[j] = y[j] + stepSize * sum; }  error = estimateError(yDotK, y, yTmp, stepSize); if (error <= 1.0) {  [BUGGY] [BUGGY] interpolator.storeTime(stepStart + stepSize); if (manager.evaluateStep(interpolator)) { final double dt = manager.getEventTime() - stepStart; if (Math.abs(dt) <= Math.ulp(stepStart)) {  loop = false; } else {  hNew = dt; } } else { [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean firstTime forward fsal lastStep loop nextIsLast CombinedEventsManager manager double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yTmp double dt error exp factor hNew maxGrowth maxStep minReduction minStep nextStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int j k l stages FirstOrderDifferentialEquations equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.5	288	288	1	add	
