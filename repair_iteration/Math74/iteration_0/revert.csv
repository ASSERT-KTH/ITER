projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.storeTime(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.storeStep(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.storeMean(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.storeTime(lastStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(y,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(yTmp,0,y,0,y0.length);lastStep=manager.stepAccepted(nextStep,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(yTmp,0,y,0,y0.length);interpolator.storeTime(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(yTmp,0,y,0,y0.length);interpolator.storeTime(interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=stepStart+stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=stepStart+hNew;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=stepStart+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=stepStart+factor;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=stepStart+stepSize/hNew;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(yTmp,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y1,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y,0,y0.length);interpolator.init();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.evaluateStep(interpolator)){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(!manager.evaluateStep(interpolator)){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.evaluateStep(interpolator)||error>0.0){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.evaluateStep(interpolator)&&error>0.0){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(x0,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,y,0,y0.length);nextStep=nextStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,y,0,y0.length);nextStep=nextStep+stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(x0,0,x0,0,x0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(yTmp,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y1,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,y,0,y0.length);interpolator.storeTime(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,y,0,y0.length);interpolator.storeTime(interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,hNew,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289CombinedEventsManagermanager=getEventsManager();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error>0.0){Interpolatormanager=newCombinedEventsManager(error);if(manager.evaluateStep(interpolator)){loop=false;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error>0.0){Interpolatormanager=newCombinedEventsManager(error);if(manager.getEvent()!=stepStart){loop=false;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error>0.0){Interpolatormanager=newCombinedEventsManager(error);if(manager.evaluateStep(interpolator)){loop=true;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error>0.0){Interpolatormanager=newCombinedEventsManager(error);if(manager.getEvent()==stepStart){loop=false;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[y0.length];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[x.length];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[x0.length];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[vecAbsoluteTolerance.length];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart+stepSize);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart+error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart+error,stepSize);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart+stepSize,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=false;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=true;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=((hNew+hNew)>hNew)||(hNew>hNew)<0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=((hNew+hNew)>hNew)&&(hNew<=hNew)>hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=((hNew+hNew)>hNew)&&(hNew<=hNew)>hNew;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=java.util.Arrays.fill(y0,0,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=java.util.Arrays.fill(y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=java.util.Arrays.fill(y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=java.util.Arrays.fill(y0,0,yDotK[1]);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=vecAbsoluteTolerance.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=hNew.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.sin(hNew,hNew));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.sin(hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300handler.nextIsLast=hNew+hNew;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=handler.getEventTime();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(nextStep,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(nextStep,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(nextStep,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.accepted(nextStep,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288if(error>0.0){thrownewIllegalArgumentException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288if(error>0.0){thrownewIllegalStateException("");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288stepSize=Math.abs(error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288if(error>0.0){thrownewIllegalArgumentException("");}else{break;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288stepSize=Math.abs(error)*stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecAbsoluteTolerance!=null){scale=newdouble[y0.length];if(firstTime==false){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(y0,0,scale);if(vecAbsoluteTolerance==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecRelativeTolerance==null){scale=newdouble[y0.length];if(firstTime!=false){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(vecRelativeTolerance==null){scale=newdouble[y0.length];if(firstTime){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(y0,0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.stop();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.nextStep;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.nextStep();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.next();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.start();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,scalAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(java.util.Arrays.fill(scale,vecAbsoluteTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(java.util.Arrays.fill(scale,vecAbsoluteTolerance);}else{scale=newdouble[y0.length];if(vecRelativeTolerance==null){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(java.util.Arrays.fill(scale,vecAbsoluteTolerance);}else{scale=newdouble[y0.length];if(vecRelativeTolerance==0.0){scale=newdouble[y0.length];}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,y0.length);Interpolator.init(newStepHandler(t0,y0,t0,y0));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,y0.length);interpolator.addStep(newStepHandler(t0,y0,t0));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y0,0,y0.length);interpolator.interpolate(nextStep,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,y1,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(y,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(yTmp,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(yTmp,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(y,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320System.arraycopy(y0,0,y1,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,y,0,nextStep.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.evaluateStep(stepStart)){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.getEventTime()!=stepStart){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.getEventTime()==stepStart){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.getEventTime()!=time){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=(hNew>hNew)?loop:null;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=(hNew>hNew)?t0:newDouble(hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=(hNew>hNew)?t0:null;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(nextStep,y0,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(nextStep,yTmp);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.nextStep+1;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.reset();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288System.arraycopy(yTmp,0,yTmp,0,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288intstepSize=Math.max(stepSize,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288System.arraycopy(yTmp,0,yTmp,1,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288stepSize=Math.abs(error)/stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y0,0,y0.length);Interpolator.init(newCombinedEventsManagerInterpolator(t0,y0,hNew));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y0,0,y0.length);interpolator.addStep(newStepHandler(t0,y0,hNew));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y0,0,y0.length);interpolator.addStep(nextIsLast,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=vecRelativeTolerance.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0[0]=vecRelativeTolerance.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0[0]=vecAbsoluteTolerance.doubleValue();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=vecRelativeTolerance.doubleToLongBits(x0,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247y0=vecRelativeTolerance.doubleToLongBits(x0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[scalAbsoluteTolerance.length];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[0].length;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(y0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,y0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,y0[0],vecRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248java.util.Arrays.fill(scale,y0[0]);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,1,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,y0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scale=Math.max(scale,y0[0],vecRelativeTolerance);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248scale=Math.max(scale,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,y0,x0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,yTmp,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,y1,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,yTmp,1,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=handler.getHorizontalMillis();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=handler.getHorizontalStep();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300dt=manager.getEventTime()-stepStart;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.max(hNew,stepsInt());
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=handler.getHorizontalMath();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=stepSize+stepStart;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=lastStep+stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=hNew+stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=factor+stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289System.arraycopy(yTmp,0,yTmp,error,stepSize);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289System.arraycopy(yTmp,0,yTmp,0,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289System.arraycopy(y,0,yTmp,error,stepSize);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289System.arraycopy(yTmp,0,yTmp,error,stepSize);interpolator.addStep(error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289System.arraycopy(yTmp,0,yTmp,error,stepSize);interpolator.recordStep(error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart-stepSize);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepSize+stepStart);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart/stepSize);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.storeTime(nextStep-1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.storeTime(nextStep+1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.reportInvalidStep(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.addStep(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314finaldoublenextStep=maxStep+stepSize;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288Interpolatorinterpolator=ArrayBuilders.insertInList(error,false);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288Interpolatorinterpolator=ArrayBuilders.insert(error,1.0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288if(error==1.0){thrownewIllegalArgumentException("Stepsarenotimplementedbytheoperator.getSteps();for(intj=0;j<k;j++){stepSize+=error;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288if(error==1.0){thrownewIllegalArgumentException("Stepsarenotimplementedbytheoperator.getSteps();for(intj=0;j<l;j++){stepSize+=error;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288if(error==1.0){thrownewIllegalArgumentException("Stepsarenotimplementedbytheoperator.getSteps();for(intj=0;j<steps.length;++j){stepSize+=error;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=normalizeLoop(t0,hNew)&&(Math.abs(hNew-stepStart)<Math.abs(hNew-stepStart)));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=normalizeLoop(t0,hNew)&&(Math.abs(hNew-stepStart)<=Math.abs(hNew-stepStart)));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=normalizeLoop(t0,hNew)&&(Math.abs(hNew-stepStart)<Math.abs(hNew)));
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.init(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.init(nextStep,lastStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.init(stepStart,lastStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320interpolator.interpolate();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289handler.addStep(error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error==1.0){thrownewIllegalStateException("Stepsarenotimplementedbythecompiler.");}else{Interpolator.init();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error==1.0){thrownewIllegalArgumentException("Morethanoneshouldbepossible,");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error==1.0){thrownewIllegalStateException("Stepsarenotimplementedbythecompiler.");}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(error==1.0){thrownewIllegalStateException("Stepsarenotimplementedbytheoperator."+Error.getMessage());}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,yTmp,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,yDotK,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,y0,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,y0,yTmp,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248System.arraycopy(y0,0,scale,yTmp,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247scale=newdouble[2];
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300if(hNew==0.0){dt=Math.floor(stepStart);if(Math.abs(hNew)>Float.MAX_VALUE){hNew=Float.valueOf(stepStart);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300if(hNew==0.0){dt=Math.floor(stepStart);if(Math.abs(hNew)>Float.MAX_VALUE){hNew=Float.doubleToLongBits(hNew);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300if(hNew==0.0){dt=Math.floor(stepStart);if(Math.abs(hNew)>Float.MAX_VALUE){hNew=Float.valueOf(hNew);}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300if(hNew==0.0){dt=Math.floor(stepStart);if(Math.abs(hNew)>regress){hNew=dt;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300if(hNew==0.0){dt=Math.floor(stepStart);if(Math.abs(hNew)>1.0){hNew=dt;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java288interpolator.storeTime(stepStart+0.5);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247vecAbsoluteTolerance=java.util.Arrays.fill(y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247java.util.Arrays.fill(y0,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247vecAbsoluteTolerance=vecRelativeTolerance.evaluate(equations);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247vecAbsoluteTolerance=vecRelativeTolerance.effects();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java247vecAbsoluteTolerance=java.util.Arrays.fill(y0,0,scale);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317lastStep=manager.step(nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314ensureCapacity(hNew);System.arraycopy(y0,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314System.arraycopy(y0,0,y,0,y0.length);interpolator.init(stepStart,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java314ensureCapacity(hNew);System.arraycopy(yTmp,0,y,0,y0.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,y0.length);interpolator.init(nextStep,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,y0.length);Interpolator.init(nextStep,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y0,0,y,0,y0.length);Interpolator.interpolate(nextStep,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(y,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(yTmp,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316manager.stepAccepted(thenNextStep,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale!=0){java.util.Arrays.fill(y0,scale);}else{scale=vecRelativeTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale!=0){java.util.Arrays.fill(y0,scale);}else{scale=vecAbsoluteTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java248if(scale!=0){Arrays.fill(y0,scale,vecAbsoluteTolerance);}else{scale=vecRelativeTolerance;}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320Interpolator<K,V>interpolator=EmbeddedStepInterpolator.createChildObjectInterpolator(x,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320Interpolator<K,V>interpolator=EmbeddedStepInterpolator.createChildObjectInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320Interpolator<K,V>interpolator=EmbeddedStepInterpolator.create(x,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320Interpolator<K,V>interpolator=EmbeddedStepInterpolator.createChildObjectInterpolator(t0,y);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java320Interpolator<K,V>interpolator=EmbeddedStepInterpolator.createChildObjectInterpolator(manager,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.isEvent()){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java289if(manager.getEvent()!=stepStart){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(yTmp,0,y,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(y,0,y,0,y.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(y,0,y,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(y,0,y,0,y.length);interpolator.init(handler,nextStep);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java317System.arraycopy(y,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java315System.arraycopy(y,0,y,0,hNew);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yTmp,0,y,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(y,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(ys,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(yStmp,0,yTmp,0,yTmp.length);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java316System.arraycopy(y,0,y,0,yTmp.length);
