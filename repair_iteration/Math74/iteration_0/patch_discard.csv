compilation error,320,replace,[CE] cannot find symbol,interpolator.storeTime(nextStep); ,interpolator.storeStep(nextStep);
compilation error,320,replace,[CE] cannot find symbol,interpolator.storeTime(nextStep); ,interpolator.storeMean(nextStep);
compilation error,320,replace,[CE] method storeTime in class AbstractStepInterpolator cannot be applied to given types;,interpolator.storeTime(nextStep); ,interpolator.storeTime(lastStep);
compilation error,320,add,[CE] incompatible types,,  System.arraycopy(yTmp, 0, y, 0, y0.length); lastStep = manager.stepAccepted(nextStep, y);
compilation error,320,add,[CE] incompatible types,,  System.arraycopy(yTmp, 0, y, 0, y0.length); interpolator.storeTime(nextStep);
compilation error,320,add,[CE] method storeTime in class AbstractStepInterpolator cannot be applied to given types;,,  System.arraycopy(yTmp, 0, y, 0, y0.length); interpolator.storeTime(interpolator);
compilation error,314,replace,[CE] incompatible types,final double nextStep = stepStart + stepSize; ,final double nextStep = stepStart + hNew;
compilation error,314,replace,[CE] incompatible types,final double nextStep = stepStart + stepSize; ,final double nextStep = stepStart + 1;
compilation error,314,replace,[CE] cannot find symbol factor,final double nextStep = stepStart + stepSize; ,final double nextStep = stepStart + factor;
compilation error,314,replace,[CE] incompatible types,final double nextStep = stepStart + stepSize; ,final double nextStep = stepStart + stepSize / hNew;
compilation error,314,replace,[CE] cannot find symbol nextStep,final double nextStep = stepStart + stepSize; , 
compilation error,314,add,[CE] incompatible types,,  System.arraycopy(y0, 0, y, 0, y0.length);
compilation error,314,add,[CE] incompatible types,,  System.arraycopy(yTmp, 0, y, 0, y0.length);
compilation error,314,add,[CE] cannot find symbol equals,,  System.arraycopy(yTmp, 0, y0, 0, y0.length);
compilation error,314,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y1, 0, y0.length);
compilation error,314,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y, 0, y0.length); interpolator.init();
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(!manager.evaluateStep(interpolator)) {
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(manager.evaluateStep(interpolator)|| error > 0.0) {
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(manager.evaluateStep(interpolator)&& error > 0.0) {
compilation error,289,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),if (manager.evaluateStep(interpolator)) { , 
compilation error,316,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y, 0, y0.length);
compilation error,316,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(x0, 0, y, 0, y0.length);
compilation error,316,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y, 0, y0.length); nextStep = nextStep;
compilation error,316,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y0, 0, y0.length);
compilation error,316,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y, 0, y0.length); nextStep = nextStep + stepSize;
compilation error,315,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(x0, 0, x0, 0, x0.length);
compilation error,315,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y0, 0, y0.length);
compilation error,315,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y1, 0, y0.length);
compilation error,317,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y, 0, y0.length);
compilation error,317,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y, 0, y0.length); interpolator.storeTime(nextStep);
compilation error,317,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y, 0, y0.length); interpolator.storeTime(interpolator);
compilation error,317,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y0, 0, y0.length);
compilation error,317,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, hNew, 0, y0.length);
compilation error,289,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  CombinedEventsManager manager = getEventsManager();
compilation error,289,add,[CE] illegal start of expression,,  if(error > 0.0) { Interpolator manager = new CombinedEventsManager(error); if(manager.evaluateStep(interpolator)) { loop = false; }
compilation error,289,add,[CE] illegal start of expression,,  if(error > 0.0) { Interpolator manager = new CombinedEventsManager(error); if(manager.getEvent()!= stepStart) { loop = false; }
compilation error,289,add,[CE] illegal start of expression,,  if(error > 0.0) { Interpolator manager = new CombinedEventsManager(error); if(manager.evaluateStep(interpolator)) { loop = true; }
compilation error,289,add,[CE] illegal start of expression,,  if(error > 0.0) { Interpolator manager = new CombinedEventsManager(error); if(manager.getEvent() == stepStart) { loop = false; }
compilation error,247,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),scale = new double[y0.length]; ,scale = new double[x.length];
compilation error,247,replace,[CE] invalid method declaration; return type required,scale = new double[y0.length]; ,scale = new double[x0.length];
compilation error,247,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),scale = new double[y0.length]; ,scale = new double[vecAbsoluteTolerance.length];
compilation error,247,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),scale = new double[y0.length]; , 
compilation error,288,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepStart + error);
compilation error,288,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepStart + error, stepSize);
compilation error,288,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepStart + stepSize, error);
compilation error,288,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),interpolator.storeTime(stepStart + stepSize); , 
compilation error,300,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),loop = false; ,loop = true;
compilation error,300,replace,[CE] ';' expected,loop = false; ,loop =(( hNew + hNew)> hNew)||(hNew > hNew) < 0);
compilation error,300,replace,[CE] ';' expected,loop = false; ,loop =(( hNew + hNew)> hNew)&&(hNew <= hNew)> hNew);
compilation error,300,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),loop = false; ,loop =(( hNew + hNew)> hNew)&&(hNew <= hNew)> hNew;
compilation error,300,replace,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),loop = false; , 
compilation error,247,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  y0 = java.util.Arrays.fill(y0, 0, yDotK);
compilation error,247,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  y0 = java.util.Arrays.fill(y0, 0, y0.length);
compilation error,247,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  y0 = java.util.Arrays.fill(y0);
compilation error,247,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  y0 = java.util.Arrays.fill(y0, 0, yDotK[1]);
compilation error,247,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  y0 = vecAbsoluteTolerance.doubleValue();
compilation error,300,add,[CE] variable c is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  hNew = hNew.doubleValue();
compilation error,300,add,[CE] ';' expected,,  hNew = Math.sin(hNew, hNew));
compilation error,300,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  hNew = Math.sin(hNew);
compilation error,300,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  handler.nextIsLast = hNew + hNew;
compilation error,300,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  hNew = handler.getEventTime();
compilation error,316,replace,[CE] illegal start of expression,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(nextStep, y0);
compilation error,316,replace,[CE] illegal start of expression,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(nextStep, hNew);
compilation error,316,replace,[CE] illegal start of expression,manager.stepAccepted(nextStep, y); ,manager.accepted(nextStep, y0);
compilation error,288,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  if(error > 0.0) { throw new IllegalArgumentException(""); }
compilation error,288,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  if(error > 0.0) { throw new IllegalStateException(""); }
compilation error,288,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  stepSize = Math.abs(error);
compilation error,288,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  if(error > 0.0) { throw new IllegalArgumentException(""); } else { break; }
compilation error,288,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  stepSize = Math.abs(error)* stepSize;
compilation error,248,add,[CE] illegal start of expression,,  if(vecAbsoluteTolerance!= null) { scale = new double[y0.length]; if(firstTime == false) { scale = new double[y0.length]; }
compilation error,248,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  java.util.Arrays.fill(y0, 0, scale); if(vecAbsoluteTolerance == null) { scale = new double[y0.length]; }
compilation error,248,add,[CE] illegal start of expression,,  if(vecRelativeTolerance == null) { scale = new double[y0.length]; if(firstTime!= false) { scale = new double[y0.length]; }
compilation error,248,add,[CE] illegal start of expression,,  if(vecRelativeTolerance == null) { scale = new double[y0.length]; if(firstTime) { scale = new double[y0.length]; }
compilation error,248,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  java.util.Arrays.fill(y0, 0, scale);
compilation error,317,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),lastStep = manager.stop(); ,lastStep = manager.nextStep;
compilation error,317,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),lastStep = manager.stop(); ,lastStep = manager.nextStep();
compilation error,317,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),lastStep = manager.stop(); ,lastStep = manager.next();
compilation error,317,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),lastStep = manager.stop(); ,lastStep = manager.start();
compilation error,248,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,java.util.Arrays.fill(scale, vecAbsoluteTolerance);
compilation error,248,replace,[CE] ')' expected,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,if(java.util.Arrays.fill(scale, vecAbsoluteTolerance);
compilation error,248,replace,[CE] ')' expected,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,if(java.util.Arrays.fill(scale, vecAbsoluteTolerance); } else { scale = new double[y0.length]; if(vecRelativeTolerance == null) { scale = new double[y0.length]; }
compilation error,248,replace,[CE] ')' expected,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,if(java.util.Arrays.fill(scale, vecAbsoluteTolerance); } else { scale = new double[y0.length]; if(vecRelativeTolerance == 0.0) { scale = new double[y0.length]; }
compilation error,315,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y0, 0, y0.length);
compilation error,315,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y0, 0, y0.length); Interpolator.init(new StepHandler(t0, y0, t0, y0));
compilation error,315,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y0, 0, y0.length); interpolator.addStep(new StepHandler(t0, y0, t0));
compilation error,315,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y0, 0, y0.length); interpolator.interpolate(nextStep, y0, 0, y0.length);
compilation error,317,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, yTmp, 0, yTmp.length);
compilation error,317,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y1, 0, y0.length);
compilation error,317,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y, 0, y0, 0, y0.length);
compilation error,317,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, yTmp, 0, y0.length);
compilation error,320,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, y0, 0, y0.length);
compilation error,320,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, yTmp, 0, y0.length);
compilation error,320,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(yTmp, 0, yTmp, 0, y0.length);
compilation error,320,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y, 0, y0, 0, y0.length);
compilation error,320,add,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),,  System.arraycopy(y0, 0, y1, 0, y0.length);
compilation error,315,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),System.arraycopy(yTmp, 0, y, 0, y0.length); ,System.arraycopy(y0, 0, y, 0, nextStep.length);
compilation error,315,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),System.arraycopy(yTmp, 0, y, 0, y0.length); ,System.arraycopy(y, 0, y, 0, nextStep.length);
compilation error,315,replace,[CE] variable y0 is already defined in method integrate(FirstOrderDifferentialEquations,double,double[],double,double[]),System.arraycopy(yTmp, 0, y, 0, y0.length); ,System.arraycopy(y0, 0, yTmp, 0, y0.length);
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(manager.evaluateStep(stepStart)) {
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(manager.getEventTime()!= stepStart) {
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(manager.getEventTime() == stepStart) {
compilation error,289,replace,[CE] illegal start of expression,if (manager.evaluateStep(interpolator)) { ,if(manager.getEventTime()!= time) {
compilation error,300,replace,[CE] illegal start of expression,loop = false; ,loop =(hNew > hNew)? loop : null;
compilation error,300,replace,[CE] illegal start of expression,loop = false; ,loop =(hNew > hNew)? t0 : new Double(hNew);
compilation error,300,replace,[CE] illegal start of expression,loop = false; ,loop =(hNew > hNew)? t0 : null;
compilation error,316,replace,[CE] illegal start of expression,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(nextStep, y0, hNew);
compilation error,316,replace,[CE] illegal start of expression,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(nextStep, yTmp);
compilation error,317,replace,[CE] illegal start of expression,lastStep = manager.stop(); ,lastStep = manager.nextStep + 1;
compilation error,317,replace,[CE] illegal start of expression,lastStep = manager.stop(); ,lastStep = manager.reset();
compilation error,288,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, 0, error);
compilation error,288,add,[CE] illegal start of expression,,  int stepSize = Math.max(stepSize, error);
compilation error,288,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, 1, error);
compilation error,288,add,[CE] illegal start of expression,,  stepSize = Math.abs(error)/ stepSize;
compilation error,314,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, y0, 0, y0.length);
compilation error,314,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, y0, 0, y0.length); Interpolator.init(new CombinedEventsManagerInterpolator(t0, y0, hNew));
compilation error,314,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, y0, 0, y0.length); interpolator.addStep(new StepHandler(t0, y0, hNew));
compilation error,314,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, y0, 0, y0.length); interpolator.addStep(nextIsLast, hNew);
compilation error,247,add,[CE] illegal start of expression,,  y0 = vecRelativeTolerance.doubleValue();
compilation error,247,add,[CE] illegal start of expression,,  y0[0] = vecRelativeTolerance.doubleValue();
compilation error,247,add,[CE] illegal start of expression,,  y0[0] = vecAbsoluteTolerance.doubleValue();
compilation error,247,add,[CE] illegal start of expression,,  y0 = vecRelativeTolerance.doubleToLongBits(x0, y0);
compilation error,247,add,[CE] illegal start of expression,,  y0 = vecRelativeTolerance.doubleToLongBits(x0);
compilation error,247,replace,[CE] illegal start of expression,scale = new double[y0.length]; ,scale = new double[scalAbsoluteTolerance.length];
compilation error,247,replace,[CE] illegal start of expression,scale = new double[y0.length]; ,scale = new double[0].length;
compilation error,248,replace,[CE] illegal start of expression,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,java.util.Arrays.fill(y0, scale);
compilation error,248,replace,[CE] illegal start of expression,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,java.util.Arrays.fill(scale, y0);
compilation error,248,replace,[CE] illegal start of expression,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,java.util.Arrays.fill(scale, y0[0], vecRelativeTolerance);
compilation error,248,replace,[CE] illegal start of expression,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,java.util.Arrays.fill(scale, y0[0]);
compilation error,248,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, scale, 1, y0.length);
compilation error,248,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, scale, y0, y0.length);
compilation error,248,add,[CE] illegal start of expression,,  scale = Math.max(scale, y0[0], vecRelativeTolerance);
compilation error,248,add,[CE] illegal start of expression,,  scale = Math.max(scale, y0.length);
compilation error,248,add,[CE] illegal start of expression,,  System.arraycopy(y0, 0, scale, y0, x0, y0.length);
compilation error,316,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, 0, yTmp.length);
compilation error,316,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, 0, y0.length);
compilation error,316,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, y1, 0, y0.length);
compilation error,316,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, 1, y0.length);
compilation error,300,add,[CE] illegal start of expression,,  hNew = handler.getHorizontalMillis();
compilation error,300,add,[CE] illegal start of expression,,  hNew = handler.getHorizontalStep();
compilation error,300,add,[CE] illegal start of expression,,  dt = manager.getEventTime() - stepStart;
compilation error,300,add,[CE] illegal start of expression,,  hNew = Math.max(hNew, stepsInt());
compilation error,300,add,[CE] illegal start of expression,,  hNew = handler.getHorizontalMath();
compilation error,314,replace,[CE] illegal start of expression,final double nextStep = stepStart + stepSize; ,final double nextStep = stepSize + stepStart;
compilation error,314,replace,[CE] illegal start of expression,final double nextStep = stepStart + stepSize; ,final double nextStep = lastStep + stepSize;
compilation error,314,replace,[CE] illegal start of expression,final double nextStep = stepStart + stepSize; ,final double nextStep = hNew + stepSize;
compilation error,314,replace,[CE] illegal start of expression,final double nextStep = stepStart + stepSize; ,final double nextStep = factor + stepSize;
compilation error,289,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, error, stepSize);
compilation error,289,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, 0, error);
compilation error,289,add,[CE] illegal start of expression,,  System.arraycopy(y, 0, yTmp, error, stepSize);
compilation error,289,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, error, stepSize); interpolator.addStep(error);
compilation error,289,add,[CE] illegal start of expression,,  System.arraycopy(yTmp, 0, yTmp, error, stepSize); interpolator.recordStep(error);
compilation error,288,replace,[CE] illegal start of expression,interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepStart - stepSize);
compilation error,288,replace,[CE] illegal start of expression,interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepSize + stepStart);
compilation error,288,replace,[CE] illegal start of expression,interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepStart / stepSize);
compilation error,320,replace,[CE] ')' expected,interpolator.storeTime(nextStep); ,interpolator.storeTime(nextStep - 1);
compilation error,320,replace,[CE] ';' expected,interpolator.storeTime(nextStep); ,interpolator.storeTime(nextStep + 1);
compilation error,320,replace,[CE] illegal start of expression,interpolator.storeTime(nextStep); ,interpolator.reportInvalidStep(nextStep);
compilation error,320,replace,[CE] illegal start of expression,interpolator.storeTime(nextStep); ,interpolator.addStep(nextStep);
compilation error,314,replace,[CE] illegal start of expression,final double nextStep = stepStart + stepSize; ,final double nextStep = maxStep + stepSize;
compilation error,288,add,[CE] illegal start of expression,,  Interpolator interpolator = ArrayBuilders.insertInList(error, false);
compilation error,288,add,[CE] illegal start of expression,,  Interpolator interpolator = ArrayBuilders.insert(error, 1.0);
compilation error,288,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalArgumentException("Steps are not implemented by the operator.getSteps(); for(int j = 0; j < k; j++) { stepSize += error; }
compilation error,288,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalArgumentException("Steps are not implemented by the operator.getSteps(); for(int j = 0; j < l; j++) { stepSize += error; }
compilation error,288,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalArgumentException("Steps are not implemented by the operator.getSteps(); for(int j = 0; j < steps.length; ++j) { stepSize += error; }
compilation error,300,replace,[CE] unclosed string literal,loop = false; ,loop = normalizeLoop(t0, hNew)&&(Math.abs(hNew - stepStart) < Math.abs(hNew - stepStart)));
compilation error,300,replace,[CE] unclosed string literal,loop = false; ,loop = normalizeLoop(t0, hNew)&&(Math.abs(hNew - stepStart) <= Math.abs(hNew - stepStart)));
compilation error,300,replace,[CE] unclosed string literal,loop = false; ,loop = normalizeLoop(t0, hNew)&&(Math.abs(hNew - stepStart) < Math.abs(hNew)));
compilation error,320,replace,[CE] unclosed string literal,interpolator.storeTime(nextStep); ,interpolator.init(nextStep);
compilation error,320,replace,[CE] unclosed string literal,interpolator.storeTime(nextStep); ,interpolator.init(nextStep, lastStep);
compilation error,320,replace,[CE] unclosed string literal,interpolator.storeTime(nextStep); ,interpolator.init(stepStart, lastStep);
compilation error,320,replace,[CE] unclosed string literal,interpolator.storeTime(nextStep); ,interpolator.interpolate();
compilation error,289,add,[CE] unclosed string literal,,  handler.addStep(error);
compilation error,289,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalStateException("Steps are not implemented by the compiler."); } else { Interpolator.init(); }
compilation error,289,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalArgumentException("More than one should be possible,"); }
compilation error,289,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalStateException("Steps are not implemented by the compiler."); }
compilation error,289,add,[CE] unclosed string literal,,  if(error == 1.0) { throw new IllegalStateException("Steps are not implemented by the operator." + Error.getMessage()); }
compilation error,248,add,[CE] unclosed string literal,,  System.arraycopy(y0, 0, scale, yTmp, y0.length);
compilation error,248,add,[CE] ,,  System.arraycopy(y0, 0, scale, yDotK, y0.length);
compilation error,248,add,[CE] ,,  System.arraycopy(y0, 0, scale, y0, yDotK);
compilation error,248,add,[CE] ,,  System.arraycopy(y0, 0, scale, y0, yTmp, y0.length);
compilation error,248,add,[CE] ,,  System.arraycopy(y0, 0, scale, yTmp, yDotK);
compilation error,247,replace,[CE] ,scale = new double[y0.length]; ,scale = new double[2];
compilation error,300,add,[CE] ,,  if(hNew == 0.0) { dt = Math.floor(stepStart); if(Math.abs(hNew)> Float.MAX_VALUE) { hNew = Float.valueOf(stepStart); }
compilation error,300,add,[CE] ,,  if(hNew == 0.0) { dt = Math.floor(stepStart); if(Math.abs(hNew)> Float.MAX_VALUE) { hNew = Float.doubleToLongBits(hNew); }
compilation error,300,add,[CE] ,,  if(hNew == 0.0) { dt = Math.floor(stepStart); if(Math.abs(hNew)> Float.MAX_VALUE) { hNew = Float.valueOf(hNew); }
compilation error,300,add,[CE] ,,  if(hNew == 0.0) { dt = Math.floor(stepStart); if(Math.abs(hNew)> regress) { hNew = dt; }
compilation error,300,add,[CE] ,,  if(hNew == 0.0) { dt = Math.floor(stepStart); if(Math.abs(hNew)> 1.0) { hNew = dt; }
compilation error,288,replace,[CE] ,interpolator.storeTime(stepStart + stepSize); ,interpolator.storeTime(stepStart + 0.5);
compilation error,247,add,[CE] ,,  vecAbsoluteTolerance = java.util.Arrays.fill(y0, 0, y0.length);
compilation error,247,add,[CE] ,,  java.util.Arrays.fill(y0, 0, y0.length);
compilation error,247,add,[CE] ,,  vecAbsoluteTolerance = vecRelativeTolerance.evaluate(equations);
compilation error,247,add,[CE] ,,  vecAbsoluteTolerance = vecRelativeTolerance.effects();
compilation error,247,add,[CE] ,,  vecAbsoluteTolerance = java.util.Arrays.fill(y0, 0, scale);
compilation error,317,replace,[CE] ,lastStep = manager.stop(); ,lastStep = manager.step(nextStep);
compilation error,314,add,[CE] ,,  ensureCapacity(hNew); System.arraycopy(y0, 0, y, 0, y0.length);
compilation error,314,add,[CE] ,,  System.arraycopy(y, 0, y, 0, y0.length);
compilation error,314,add,[CE] ,,  System.arraycopy(y0, 0, y, 0, y0.length); interpolator.init(stepStart, hNew);
compilation error,314,add,[CE] ,,  ensureCapacity(hNew); System.arraycopy(yTmp, 0, y, 0, y0.length);
compilation error,315,add,[CE] ,,  System.arraycopy(y0, 0, y, 0, y0.length); interpolator.init(nextStep, hNew);
compilation error,315,add,[CE] ,,  System.arraycopy(y0, 0, y, 0, y0.length); Interpolator.init(nextStep, hNew);
compilation error,315,add,[CE] ,,  System.arraycopy(y0, 0, y, 0, y0.length); Interpolator.interpolate(nextStep, hNew);
compilation error,316,replace,[CE] ,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(y, nextStep);
compilation error,316,replace,[CE] ,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(yTmp, nextStep);
compilation error,316,replace,[CE] ,manager.stepAccepted(nextStep, y); ,manager.stepAccepted(thenNextStep, y);
compilation error,248,replace,[CE] ,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,if(scale!= 0) { java.util.Arrays.fill(y0, scale); } else { scale = vecRelativeTolerance; }
compilation error,248,replace,[CE] ,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,if(scale!= 0) { java.util.Arrays.fill(y0, scale); } else { scale = vecAbsoluteTolerance; }
compilation error,248,replace,[CE] ,java.util.Arrays.fill(scale, scalAbsoluteTolerance); ,if(scale!= 0) { Arrays.fill(y0, scale, vecAbsoluteTolerance); } else { scale = vecRelativeTolerance; }
compilation error,320,add,[CE] ,,  Interpolator < K, V> interpolator = EmbeddedStepInterpolator.createChildObjectInterpolator(x, y);
compilation error,320,add,[CE] ,,  Interpolator < K, V> interpolator = EmbeddedStepInterpolator.createChildObjectInterpolator();
compilation error,320,add,[CE] ,,  Interpolator < K, V> interpolator = EmbeddedStepInterpolator.create(x, y);
compilation error,320,add,[CE] ,,  Interpolator < K, V> interpolator = EmbeddedStepInterpolator.createChildObjectInterpolator(t0, y);
compilation error,320,add,[CE] ,,  Interpolator < K, V> interpolator = EmbeddedStepInterpolator.createChildObjectInterpolator(manager, nextStep);
compilation error,289,replace,[CE] ,if (manager.evaluateStep(interpolator)) { ,if(manager.isEvent()) {
compilation error,289,replace,[CE] ,if (manager.evaluateStep(interpolator)) { ,if(manager.getEvent()!= stepStart) {
compilation error,317,add,[CE] ,,  System.arraycopy(yTmp, 0, y, 0, yTmp.length);
compilation error,317,add,[CE] ,,  System.arraycopy(y, 0, y, 0, y.length);
compilation error,317,add,[CE] ,,  System.arraycopy(y, 0, y, 0, yTmp.length);
compilation error,317,add,[CE] ,,  System.arraycopy(y, 0, y, 0, y.length); interpolator.init(handler, nextStep);
compilation error,317,add,[CE] ,,  System.arraycopy(y, 0, yTmp, 0, yTmp.length);
compilation error,315,replace,[CE] ,System.arraycopy(yTmp, 0, y, 0, y0.length); ,System.arraycopy(y, 0, y, 0, hNew);
compilation error,316,add,[CE] ,,  System.arraycopy(yTmp, 0, y, 0, yTmp.length);
compilation error,316,add,[CE] ,,  System.arraycopy(y, 0, yTmp, 0, yTmp.length);
compilation error,316,add,[CE] ,,  System.arraycopy(ys, 0, yTmp, 0, yTmp.length);
compilation error,316,add,[CE] ,,  System.arraycopy(yStmp, 0, yTmp, 0, yTmp.length);
compilation error,316,add,[CE] ,,  System.arraycopy(y, 0, y, 0, yTmp.length);
