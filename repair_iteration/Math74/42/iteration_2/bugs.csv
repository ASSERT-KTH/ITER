bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(StepHandler  handler  :  ytmp)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  ytmp)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  ytmp)  {	  for(StepHandler    handler    :    y)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.hNew)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  y.hNew)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y.hNew)  {	  for(StepHandler    handler    :    y)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlers)  {	  for(StepHandler    handler    :    this.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
4	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepStart)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers,  stepStart)  {	  for(StepHandler    handler    :    this.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
5	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers.length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  this.stepHandlers.length)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers.length)  {	  for(StepHandler    handler    :    this.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
6	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
9	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlersManager)  {	  for(StepHandler    handler    :    eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventsHandlers())  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  eventsHandlersManager.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  getStepHandlers();	      stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  eventsHandlersManager);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  eventsHandlersManager);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  eventsHandlersManager);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  eventsHandlersManager);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  eventsHandlersManager);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).set();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).set();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).set();	      ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).setTime(t0);	      ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).update();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).update();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).update();	      ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  stepHandlers  =  rki.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  rki.getStepHandlers();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  rki.getStepHandlers();	      stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStdHandlers();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  prototype.getStdHandlers();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStdHandlers();	      stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  stepStart);	      stepHandlers    =    getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  getStepHandlers(stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(stepStart);	      stepHandlers    =    getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  getStepHandlers(t1);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t1);	      stepHandlers    =    getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  int  stepHandlers  =  getStepHandlers()  -  1;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers()  -  1;	      int    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
31	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart);	      int    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
32	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers().length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  int  stepHandlers  =  getStepHandlers().length;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers().length;	      int    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  this);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  this);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  this);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  this);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  this);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  this);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  this);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  this);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers.add(interpolator,  stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(interpolator,  stepStart);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers.add(interpolator,  t0);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(interpolator,  t0);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  stepHandlers.put(y,  interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers.put(y,  interpolator);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(y,  interpolator);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  if(stepStart  >  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  yTmp,  stepStart)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  yTmp,  stepStart)  {	  for(StepHandler    handler    :    yTmp)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  for(StepHandler  handler  :  yDotK)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  yDotK)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  yDotK)  {	  for(StepHandler    handler    :    yTmp)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  doublehNew;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  doublehNew;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  doublehNew;	      ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  yTmp;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  yTmp;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  yTmp;	      ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  stepStart;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  stepStart;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  stepStart;	      ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(stepStart);	      stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(hNew);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  prototype.getStepHandlers(hNew);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(hNew);	      stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  stepHandlers.put(interpolator,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers.put(interpolator,  stepStart);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(interpolator,  stepStart);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager())  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager())  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlersManager())  {	  for(StepHandler    handler    :    eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  t0  =  Math.max(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  t0  =  Math.max(t0,  stepStart);  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.max(t0,  stepStart);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  stepStart  =  t0;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepStart  =  t0;  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  t0;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  t0  =  Math.min(stepStart,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  t0  =  Math.min(stepStart,  stepStart);  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(stepStart,  stepStart);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  t0  =  Math.min(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  t0  =  Math.min(t0,  stepStart);  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(t0,  stepStart);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  y0;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  y0;	      ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  rki;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  rki;  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  rki;	      ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  this);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  this);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart();	      ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  getEventsHandlers())  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlers())  {	  for(StepHandler    handler    :    this.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  rki);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  rki);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	      if(stepStart    >    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
75	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  yTmp,  firstTime)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  yTmp,  firstTime)  {	  for(StepHandler    handler    :    yTmp)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  rki)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  rki)  {	  for(StepHandler    handler    :    yTmp)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  t,  eventsHandlersManager);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  t,  eventsHandlersManager);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  eventsHandlersManager);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  eventsHandlersManager);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  t0)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  t0)  {	  for(StepHandler    handler    :    y)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  dt)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  dt)  {	  for(StepHandler    handler    :    y)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(rki);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers  =  getStepHandlers(rki);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(rki);	      stepHandlers    =    getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepsManager);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepsManager);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepsManager);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventHandlersManager)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(StepHandler  handler  :  eventHandlersManager)  {  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  eventHandlersManager)  {	  for(StepHandler    handler    :    eventsHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  this);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  this);	      ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers();	      stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  if(stepStart  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
91	[BUG]  [BUGGY]  stepHandlers.push(interpolator);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  stepHandlers.push(interpolator);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.push(interpolator);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.reset();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.reset();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart.reset();	      ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	      if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
95	[BUG]  [BUGGY]  if(stepStart  >  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
96	[BUG]  [BUGGY]  if(stepStart  >  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
97	[BUG]  [BUGGY]  if(stepStart  >  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
98	[BUG]  [BUGGY]  if(stepStart  >  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;    [BUGGY]  if(stepStart  >  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
