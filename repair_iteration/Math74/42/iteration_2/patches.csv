bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getRungeKuttaStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getRungeKuttaStepInterpolator();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getRungeKuttaStepInterpolator();	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
3	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  yTmp.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  yTmp.getStepHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  yTmp.getStepHandlers();	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
4	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getRawHandlers();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getRawHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getRawHandlers();	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
5	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).setTime(t0,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0  +  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0  +  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).setTime(t0  +  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0  -  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(t0  -  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).setTime(t0  -  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }	  if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    y1)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
9	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  }	  if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    y1)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
10	[BUG]  [BUGGY]  for(StepHandler  handler  :  ytmp,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  ytmp,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  ytmp,  stepStart)  {	  for(StepHandler    handler    :    ytmp)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  step  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  step  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  step  :  y)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki,    this);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
14	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yDotK,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yDotK,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yDotK,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki,    this);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
15	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlers,  stepStart)  {	  for(StepHandler    handler    :    this.eventsHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
17	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlersManager.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  yTmp.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  yTmp.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  t0.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  t0.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  if(stepStart  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  if(stepEnd    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
21	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  if(stepEnd    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
22	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(hNew,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(hNew,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(hNew,  stepStart);	  stepHandlers    =    prototype.getStepHandlers(hNew);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
23	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  hNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(stepStart,  hNew);	  stepHandlers    =    prototype.getStepHandlers(hNew);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
24	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(y);	  stepHandlers    =    prototype.getStepHandlers(hNew);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
25	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  stepStart  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  stepStart  -  1;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  stepStart  -  1;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
26	[BUG]  [BUGGY]  if(stepStart!=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart!=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart!=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  if(stepStart    >=    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
27	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  if(stepStart    >=    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
28	[BUG]  [BUGGY]  stepStart  =  t1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepStart  =  t1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  t1;	  stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
29	[BUG]  [BUGGY]  stepStart  =  rki;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepStart  =  rki;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  rki;	  stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
30	[BUG]  [BUGGY]  stepStart  =  doublehNew;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepStart  =  doublehNew;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  doublehNew;	  stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
31	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
34	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
35	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).updateAndUpdate();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).updateAndUpdate();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).updateAndUpdate();	  ((    RungeKuttaStepInterpolator)interpolator).update();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    >=    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
37	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  rki);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  rki);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  stepHandlers.push(interpolator,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.push(interpolator,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.push(interpolator,  stepStart);	  stepHandlers.push(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
39	[BUG]  [BUGGY]  stepHandlers.push(interpolator,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.push(interpolator,  t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.push(interpolator,  t0);	  stepHandlers.push(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
40	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  for(RungeKuttaStepInterpolator    prototype    :    y)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
41	[BUG]  [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    >=    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
42	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y)  {  interpolator.storeTime(t0);  }	  for(RangeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
43	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  }	  for(RangeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
44	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  }	  for(RangeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
45	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  interpolator,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  interpolator,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  interpolator,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    interpolator,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  eventHandlersManager);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  eventHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  eventHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    interpolator,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  stepsManager);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  stepsManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  stepsManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepsManager);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
48	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepsManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepsManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepsManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepsManager);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
49	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepsManager);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
50	[BUG]  [BUGGY]  for(StepHandler  handler  :  a)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  a)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  a)  {	  for(StepHandler    handler    :    yDotK)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
51	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.add(interpolator,  doublehNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(interpolator,  doublehNew);	  stepHandlers.add(interpolator,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
52	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.add(interpolator,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(interpolator,  y);	  stepHandlers.add(interpolator,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  stepHandlers.add(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.add(t0,  interpolator);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(t0,  interpolator);	  stepHandlers.add(interpolator,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  doublehNew);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  doublehNew);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  doublehNew);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
56	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  stepStart);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  stepStart);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  stepStart);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
57	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addStartTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addStartTimeChecker(t0,  k);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addStartTimeChecker(t0,  k);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
58	[BUG]  [BUGGY]  for(StepHandler  handler  :  y,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  y,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y,  stepStart)  {	  for(StepHandler    handler    :    yTmp,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  y0,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y0,  stepStart)  {	  for(StepHandler    handler    :    yTmp,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
60	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
61	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
62	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  rki,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  rki,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  rki,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
63	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
64	[BUG]  [BUGGY]  stepHandlers.put(y,  rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(y,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(y,  rki);	  stepHandlers.put(y,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
65	[BUG]  [BUGGY]  stepHandlers.put(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(t0,  interpolator);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(t0,  interpolator);	  stepHandlers.put(y,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
66	[BUG]  [BUGGY]  stepHandlers.put(y0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(y0,  interpolator);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(y0,  interpolator);	  stepHandlers.put(y,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
67	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
68	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRungeKuttaStepInterpolator();  if(handler!=  null)  {  addEndTimeCheck  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRungeKuttaStepInterpolator();  if(handler!=  null)  {  addEndTimeCheck  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRungeKuttaStepInterpolator();  if(handler!=  null)  {  addEndTimeCheck	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
69	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRungeKuttaStepInterpolator();  if(handler!=  null)  {  addEndTimeChecker  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRungeKuttaStepInterpolator();  if(handler!=  null)  {  addEndTimeChecker  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRungeKuttaStepInterpolator();  if(handler!=  null)  {  addEndTimeChecker	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
70	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
71	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    yTmp,    this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
72	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yTmp,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    yTmp,    this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
73	[BUG]  [BUGGY]  stepHandlers  =  rki.getStdHandlers();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  rki.getStdHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  rki.getStdHandlers();	  stepHandlers    =    prototype.getStdHandlers();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
74	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  stepHandlers.put(yTmp,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(yTmp,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(yTmp,  stepStart);	  stepHandlers.put(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
77	[BUG]  [BUGGY]  stepHandlers.put(y,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(y,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(y,  stepStart);	  stepHandlers.put(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  stepHandlers.put(stepStart,  interpolator);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(stepStart,  interpolator);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(stepStart,  interpolator);	  stepHandlers.put(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
79	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(y);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(y);	  stepHandlers    =    getStepHandlers(rki);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
80	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(hNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(hNew);	  stepHandlers    =    getStepHandlers(rki);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
81	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers().length  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers().length  -  1;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers().length  -  1;	  int    stepHandlers    =    getStepHandlers().length;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
82	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers().length  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers().length  +  1;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers().length  +  1;	  int    stepHandlers    =    getStepHandlers().length;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
83	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers().length  -  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers().length  -  2;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers().length  -  2;	  int    stepHandlers    =    getStepHandlers().length;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
84	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
85	[BUG]  [BUGGY]  if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
86	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
87	[BUG]  [BUGGY]  if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
88	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  interpolator,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  interpolator,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  interpolator,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    interpolator,    this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
89	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    interpolator,    this);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlersManager().stepStart)  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
91	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getEventsHandlersManager())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getEventsHandlersManager())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlersManager().getEventsHandlersManager())  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
92	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getCurrentStructure())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getCurrentStructure())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlersManager().getCurrentStructure())  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
93	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHNew,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHNew,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHNew,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
94	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  prototype,  stepStart,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  prototype,  stepStart,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  prototype,  stepStart,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
95	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  y,  stepStart,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  y,  stepStart,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  y,  stepStart,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  interpolator,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  interpolator,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  interpolator,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
97	[BUG]  [BUGGY]  for(StepHandler  handler  :  y,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  y,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y,  firstTime)  {	  for(StepHandler    handler    :    yTmp,    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
98	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  rki,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  rki,  firstTime)  {	  for(StepHandler    handler    :    yTmp,    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
99	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
100	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  b.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  b.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  b.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
101	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addStartTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addStartTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addStartTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
103	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
104	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
105	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.set();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.set();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart.set();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart.reset();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
106	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepEnd.reset();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepEnd.reset();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepEnd.reset();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart.reset();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
107	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.clear();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.clear();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart.clear();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart.reset();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
108	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers()  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers()  *  1;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers()  *  1;	  int    stepHandlers    =    getStepHandlers()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
109	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(stepStart,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(stepStart,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(stepStart,  y);	  stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
110	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(stepStart,  firstTime);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(stepStart,  firstTime);	  stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
111	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(yStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(yStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(yStart);	  stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
112	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator.storeTime(t0));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator.storeTime(t0));  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  interpolator.storeTime(t0));	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
113	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    this);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
114	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsManager);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
115	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers.values())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.stepHandlers.values())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers.values())  {	  for(StepHandler    handler    :    this.stepHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
116	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers.length,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.stepHandlers.length,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers.length,  stepStart)  {	  for(StepHandler    handler    :    this.stepHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
117	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  stepStart,  y);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
118	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  rki);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  rki);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    rki);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
119	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepStart);	  stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
120	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(t0);	  stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
121	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(yStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(yStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(yStart);	  stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
122	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepEnd();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepEnd();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepEnd();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
123	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepToFront();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepToFront();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepToFront();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
124	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepToStart();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepToStart();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepToStart();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
125	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  doublehNew  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  doublehNew  +  1;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  doublehNew  +  1;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    doublehNew;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
126	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  0;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  0;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    doublehNew;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
127	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart,  y);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
128	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart,  firstTime);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart,  firstTime);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
129	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(yStart);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(yStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(yStart);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
130	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart  +  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart  +  1);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
131	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlersManager,  stepStart)  {	  for(StepHandler    handler    :    this.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
132	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlersManager,  t)  {	  for(StepHandler    handler    :    this.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
133	[BUG]  [BUGGY]  stepHandlers  =  yTmp.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  yTmp.getStepHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  yTmp.getStepHandlers();	  stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
134	[BUG]  [BUGGY]  t0  =  Math.min(t0,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(t0,  doublehNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(t0,  doublehNew);	  t0    =    Math.min(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
135	[BUG]  [BUGGY]  t0  =  Math.min(t0,  stepStart,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(t0,  stepStart,  doublehNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(t0,  stepStart,  doublehNew);	  t0    =    Math.min(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
136	[BUG]  [BUGGY]  t0  =  Math.min(t0,  firstTime);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(t0,  firstTime);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(t0,  firstTime);	  t0    =    Math.min(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
137	[BUG]  [BUGGY]  t0  =  Math.max(t0,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.max(t0,  doublehNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.max(t0,  doublehNew);	  t0    =    Math.min(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
138	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
139	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  y,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  y,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  y,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
140	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  dt,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  dt,  stepStart)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
141	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  error)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  dt,  error)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  dt,  error)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
142	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  dt,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  dt,  stepEnd)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
143	[BUG]  [BUGGY]  t0  =  Math.max(t0,  firstTime);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.max(t0,  firstTime);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.max(t0,  firstTime);	  t0    =    Math.max(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
144	[BUG]  [BUGGY]  t0  =  Math.max(t0,  stepStart,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.max(t0,  stepStart,  doublehNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.max(t0,  stepStart,  doublehNew);	  t0    =    Math.max(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
145	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addToDebugLog();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addToDebugLog();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addToDebugLog();	  ((    RungeKuttaStepInterpolator)interpolator).set();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
146	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  yTmp)  {  interpolator.storeTime(t0);  }	  for(RungeKuttaStepInterpolator    prototype    :    yDotK)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
147	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
148	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ".);  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
149	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
150	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
151	[BUG]  [BUGGY]  t0  =  Math.min(stepStart,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(stepStart,  doublehNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(stepStart,  doublehNew);	  t0    =    Math.min(stepStart,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
152	[BUG]  [BUGGY]  t0  =  Math.min(stepStart,  stepTime);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(stepStart,  stepTime);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(stepStart,  stepTime);	  t0    =    Math.min(stepStart,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
153	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  for(RungeKuttaStepInterpolator    prototype    :    y)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
154	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  rki);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.add(interpolator,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(interpolator,  rki);	  stepHandlers.add(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
155	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlers().hNew)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlers().hNew)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlers().hNew)  {	  for(StepHandler    handler    :    getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
156	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlers())  {	  for(StepHandler    handler    :    getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
157	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yDotK);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yDotK);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yDotK);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
158	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(yTmp,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(yTmp,  t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(yTmp,  t0);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
159	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yTmp);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yTmp);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yTmp);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    yTmp);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
160	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  yDotK)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
161	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  interpolator,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  interpolator,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  interpolator,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
162	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  t,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  rki,  t,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
163	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart,  t,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  stepStart,  t,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
164	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y,  t,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  y,  t,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
165	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers(t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  getStepHandlers(t0);	  StepHandler    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
166	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  getStepHandlers(stepStart);	  StepHandler    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
167	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  getStepHandler(stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  getStepHandler(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  getStepHandler(stepStart);	  StepHandler    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
168	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  y);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
169	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  doublehNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  doublehNew);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
170	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart,  y);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  stepStart,  y);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
171	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart,  hNew);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart,  hNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  stepStart,  hNew);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventHandlersManager)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventHandlersManager)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventHandlersManager)  {	  for(StepHandler    handler    :    eventHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
173	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  eventsHandlersManager.getEventHandlers())  {	  for(StepHandler    handler    :    eventHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
174	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventHandlersManager.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  eventHandlersManager.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  eventHandlersManager.getEventHandlers())  {	  for(StepHandler    handler    :    eventHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
175	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
176	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.hNew,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  y.hNew,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y.hNew,  stepStart)  {	  for(StepHandler    handler    :    y.hNew)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
177	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.hNew)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  yTmp.hNew)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  yTmp.hNew)  {	  for(StepHandler    handler    :    y.hNew)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
178	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.hNew,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  y.hNew,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y.hNew,  firstTime)  {	  for(StepHandler    handler    :    y.hNew)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
179	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepStart,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepStart,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers,  stepStart,  firstTime)  {	  for(StepHandler    handler    :    this.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
180	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers,  stepEnd)  {	  for(StepHandler    handler    :    this.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
181	[BUG]  [BUGGY]  t0  =  Math.min(stepStart,  firstTime);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(stepStart,  firstTime);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(stepStart,  firstTime);	  t0    =    Math.min(stepStart,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
182	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yTmp,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yTmp,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yTmp,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    yTmp,    this);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
183	[BUG]  [BUGGY]  if(t0  >  stepStart)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(t0  >  stepStart)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(t0  >  stepStart)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
184	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRunge();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRunge();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  RungeKuttaStepInterpolator  handler  =  prototype.getRunge();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
185	[BUG]  [BUGGY]  for(StepHandler  handler  :  ytmp,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  ytmp,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  ytmp,  firstTime)  {	  for(StepHandler    handler    :    ytmp)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
186	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  hNew);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.add(interpolator,  hNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.add(interpolator,  hNew);	  stepHandlers.add(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
187	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers(rki);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  getStepHandlers(rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  getStepHandlers(rki);	  StepHandler    stepHandlers    =    getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
188	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  }	  for(RangeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
189	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }	  for(RangeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
190	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  t0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  t0)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers,  t0)  {	  for(StepHandler    handler    :    this.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
191	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  eventsHandlersManager,  stepStart)  {	  for(StepHandler    handler    :    this.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
192	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(rki);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(rki);	  stepHandlers    =    prototype.getStepHandlers(hNew);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
193	[BUG]  [BUGGY]  if(firstTime)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
194	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  doublehNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  doublehNew);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    rki);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
195	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t0)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlersManager,  t0)  {	  for(StepHandler    handler    :    this.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
196	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
197	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
198	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
199	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  doublehNew);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  doublehNew);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  doublehNew);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
200	[BUG]  [BUGGY]  if(firstTime)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
201	[BUG]  [BUGGY]  if(firstTime)  {  for(int  j  =  0;  j  <  b.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  j  =  0;  j  <  b.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  j  =  0;  j  <  b.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
202	[BUG]  [BUGGY]  if(firstTime)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
203	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStdHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStdHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStdHandlers(stepStart);	  stepHandlers    =    prototype.getStdHandlers();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
204	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(dt);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(dt);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).setTime(dt);	  ((    RungeKuttaStepInterpolator)interpolator).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
205	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.length)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlers.length)  {	  for(StepHandler    handler    :    this.stepHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
206	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getStepHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getStepHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  eventsHandlersManager.getStepHandlers())  {	  for(StepHandler    handler    :    this.stepHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
207	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(stepStart  -  1);	  stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
208	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(stepStart  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(stepStart  +  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(stepStart  +  1);	  stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
209	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  }	  if(stepStart    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    y1)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
210	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  stepStart  -  1);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
211	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  yStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  yStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  yStart);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
212	[BUG]  [BUGGY]  stepHandlers.put(interpolator,  rki);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(interpolator,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(interpolator,  rki);	  stepHandlers.put(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
213	[BUG]  [BUGGY]  for(StepHandler  handler  :  yFactory)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  yFactory)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  yFactory)  {	  for(StepHandler    handler    :    rki)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
214	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  rki,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  rki,  stepStart)  {	  for(StepHandler    handler    :    yTmp,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
215	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
216	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  this.eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  this.eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  this.eventsHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
217	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  EventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  EventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  EventsHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
218	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  t,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  t,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  t,  stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
219	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.add(nextStep);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart.add(nextStep);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart.add(nextStep);	  ((    RungeKuttaStepInterpolator)interpolator).stepStart.reset();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
220	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepDown();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepDown();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepDown();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
221	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepDelta();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepDelta();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepDelta();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
222	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  yStart);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
223	[BUG]  [BUGGY]  t0  =  Math.max(t0,  stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.max(t0,  stepStart  -  1);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.max(t0,  stepStart  -  1);	  t0    =    Math.max(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
224	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
225	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  rki,  stepStart,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  rki,  stepStart,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  rki,  stepStart,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
226	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepStart,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
227	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  prototype,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  prototype,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  prototype,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
228	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.eventsHandlers,  firstTime)  {	  for(StepHandler    handler    :    this.eventsHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
229	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y0)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
230	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
231	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  hNew;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  hNew;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  hNew;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
232	[BUG]  [BUGGY]  t0  =  Math.min(t0,  yNew);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(t0,  yNew);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(t0,  yNew);	  t0    =    Math.min(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
233	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  this.stepStart;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  this.stepStart;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  this.stepStart;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
234	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y1,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y1,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y1,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki,    this);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
235	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  y0,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  y0,  firstTime)  {	  for(StepHandler    handler    :    yTmp,    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
236	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  t0,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  t0,  firstTime)  {	  for(StepHandler    handler    :    yTmp,    firstTime)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
237	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getRangeHandlers();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getRangeHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getRangeHandlers();	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
238	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart);	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
239	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart  -  1);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
240	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
241	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y1,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y1,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  y1,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    rki,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
242	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager(),  t)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager(),  t)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlersManager(),  t)  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
243	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().interpolator)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().interpolator)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  getEventsHandlersManager().interpolator)  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
244	[BUG]  [BUGGY]  t0  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  prototype.getStepInterpolator();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  prototype.getStepInterpolator();	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
245	[BUG]  [BUGGY]  Integer  rki  =(Integer)interpolator.clone();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  Integer  rki  =(Integer)interpolator.clone();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	Integer  rki  =(Integer)interpolator.clone();	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
246	[BUG]  [BUGGY]  int  stepStart  =  t0;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepStart  =  t0;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepStart  =  t0;	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
247	[BUG]  [BUGGY]  t0  =  prototype.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  prototype.getStepHandler();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  prototype.getStepHandler();	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
248	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
249	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addStartTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addStartTimeChecker(t0,  k);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addStartTimeChecker(t0,  k);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
250	[BUG]  [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  firstTime);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  firstTime);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(firstTime)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  firstTime);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
251	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);	  stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
252	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  this.stepsManager);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  this.stepsManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  this.stepsManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepsManager);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
253	[BUG]  [BUGGY]  stepHandlers  =  y.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  y.getStepHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  y.getStepHandlers();	  stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
254	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  firstTime)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  dt,  firstTime)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  dt,  firstTime)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
255	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yDotK,  this);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yDotK,  this);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  yDotK,  this);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t,    this);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
256	[BUG]  [BUGGY]  stepStart  =  t0  +  doublehNew;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepStart  =  t0  +  doublehNew;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  t0  +  doublehNew;	  stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
257	[BUG]  [BUGGY]  stepStart  =  hNew;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepStart  =  hNew;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  hNew;	  stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
258	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  t,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  stepStart,  t,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
259	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepHandlersManager);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,  t,  stepHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addStartTimeChecker(t0,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
260	[BUG]  [BUGGY]  stepHandlers.put(y,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(y,  t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(y,  t0);	  stepHandlers.put(y,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
261	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  t,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  t,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    y,    t,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
262	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepStart,  this.eventsHandlers)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  this.stepHandlers,  stepStart,  this.eventsHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  this.stepHandlers,  stepStart,  this.eventsHandlers)  {	  for(StepHandler    handler    :    this.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
263	[BUG]  [BUGGY]  t0  =  Math.min(t0,  stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(t0,  stepStart  -  1);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(t0,  stepStart  -  1);	  t0    =    Math.min(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
264	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  rki.getStepHandlers();	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
265	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0);	  StepHandler    stepHandlers    =    prototype.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
266	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
267	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0,  y	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
268	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeCheck  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeCheck  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeCheck	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
269	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  addEndTimeChecker(t0	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    addEndTimeChecker(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
270	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepTime);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepTime);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  prototype.getStepHandlers(stepStart,  stepTime);	  stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
271	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
272	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  this.step;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  =  this.step;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  =  this.step;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    rki;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
273	[BUG]  [BUGGY]  if(stepStart  ==  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  interpolator.storeTime(t0);  }	  if(stepStart    >=    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
274	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  }	  if(stepStart    >=    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
275	[BUG]  [BUGGY]  if(stepStart!=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart!=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart!=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
276	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  return  prototype.addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
277	[BUG]  [BUGGY]  for(RungeKuttaStepInterpolator  step  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RungeKuttaStepInterpolator  step  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RungeKuttaStepInterpolator  step  :  y0)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    y0)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
278	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  interpolator,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  interpolator,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepStart,  interpolator,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
279	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHold,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHold,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHold,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
280	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHnew,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHnew,  eventsHandlersManager);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,  t,  stepHnew,  eventsHandlersManager);	  ((    RungeKuttaStepInterpolator)interpolator).addEndTimeChecker(t0,    t,    stepStart,    eventsHandlersManager);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
281	[BUG]  [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  if(stepEnd    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
282	[BUG]  [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepEnd  >  0)  {  for(RungeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepEnd  =  t0;  }	  if(stepEnd    >    0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepEnd    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
283	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventsHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
284	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k,  t,  eventHandlersManager);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
285	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  -  stepStart;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  -  stepStart;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  -  stepStart;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    stepStart;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
286	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart,  yTmp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(t0,  stepStart,  yTmp);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(t0,  stepStart,  yTmp);	  stepHandlers    =    getStepHandlers(t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
287	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).start();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).start();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).start();	  ((    RungeKuttaStepInterpolator)interpolator).update();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
288	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  t0,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  t0,  stepStart)  {	  for(StepHandler    handler    :    yTmp,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
289	[BUG]  [BUGGY]  t0  =  Math.min(stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  t0  =  Math.min(stepStart,  t0);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	t0  =  Math.min(stepStart,  t0);	  t0    =    Math.min(stepStart,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
290	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart,  stepTime);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart,  stepTime);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart,  stepTime);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
291	[BUG]  [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart  -  stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  int  stepHandlers  =  getStepHandlers(stepStart  -  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	int  stepHandlers  =  getStepHandlers(stepStart  -  stepStart);	  int    stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
292	[BUG]  [BUGGY]  if(stepStart  >=  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
293	[BUG]  [BUGGY]  if(stepStart  >=  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  t0)  {  for(int  j  =  0;  j  <  a.length;  ++j)  {  addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    >    t0)    {    for(int    j    =    0;    j    <    a.length;    ++j)    {    addEndTimeChecker(t0,    t,    eventHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
294	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
295	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
296	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( "  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( "  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(int  k  =  0;  k  <  2;  k++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  throw  new  IllegalStateException( "	  if(stepStart    >    t0)    {    for(int    k    =    0;    k    <    2;    k++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
297	[BUG]  [BUGGY]  if(stepStart!=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart!=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart!=  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  rki)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
298	[BUG]  [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  t0)  {  for(RungeKuttaStepInterpolator  prototype  :  y1)  {  return  prototype.addEndTimeChecker(t0,  t,  eventsHandlersManager);  }	  if(stepStart    ==    t0)    {    for(RungeKuttaStepInterpolator    prototype    :    rki)    {    return    prototype.addEndTimeChecker(t0,    t,    eventsHandlersManager);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
299	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart(t0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart(t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart(t0);	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
300	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepToLast();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepToLast();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepToLast();	  ((    RungeKuttaStepInterpolator)interpolator).stepStart();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
301	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0.getSteps())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  t0.getSteps())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  t0.getSteps())  {	  for(StepHandler    handler    :    t0)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
302	[BUG]  [BUGGY]  for(StepHandler  handler  :  anEventsManager.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(StepHandler  handler  :  anEventsManager.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(StepHandler  handler  :  anEventsManager.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
303	[BUG]  [BUGGY]  stepStart  =  t0  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepStart  =  t0  +  1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepStart  =  t0  +  1;	  stepStart    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
304	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStdHandlers();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStdHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	StepHandler  stepHandlers  =  prototype.getStdHandlers();	  stepHandlers    =    prototype.getStdHandlers();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
305	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
306	[BUG]  [BUGGY]  if(stepStart  ==  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  0)  {  for(int  j  =  0;  j  <  y.length;  j++)  {  handler.addEndTimeChecker(t0,  b[j][j]);  }	  if(stepStart    >    0)    {    for(int    j    =    0;    j    <    y.length;    j++)    {    handler.addEndTimeChecker(t0,    b[j][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
307	[BUG]  [BUGGY]  stepHandlers  =  getStepHandlers(stepStart,  stepTime);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers  =  getStepHandlers(stepStart,  stepTime);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers  =  getStepHandlers(stepStart,  stepTime);	  stepHandlers    =    getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
308	[BUG]  [BUGGY]  stepHandlers.put(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  stepHandlers.put(t0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	stepHandlers.put(t0,  stepStart);	  stepHandlers.put(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
309	[BUG]  [BUGGY]  if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  >=  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
310	[BUG]  [BUGGY]  if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	if(stepStart  ==  0)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  handler.addEndTimeChecker(t0,  k);  }	  if(stepStart    >    0)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    handler.addEndTimeChecker(t0,    k);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
311	[BUG]  [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  for(RangeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	for(RangeKuttaStepInterpolator  prototype  :  y2)  {  interpolator.storeTime(t0);  stepStart  =  t0;  }	  for(RungeKuttaStepInterpolator    prototype    :    rki)    {    interpolator.storeTime(t0);    stepStart    =    t0;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
312	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTime(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).setTime(stepStart);	  ((    RungeKuttaStepInterpolator)interpolator).setTime(t0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
313	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  -  doublehNew;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  doublehNew=  0;  boolean  firstTime  =  true;      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).stepStart  -  doublehNew;  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	225	225	1	replace	((  RungeKuttaStepInterpolator)interpolator).stepStart  -  doublehNew;	  ((    RungeKuttaStepInterpolator)interpolator).stepStart    =    doublehNew;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
