bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  forward);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  forward);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c,  forward);	  sanityChecks(stages,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	30	None	replace
2	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y1,  c,  stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y1,  c,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y1,  c,  stages);	  sanityChecks(stages,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	30	None	replace
3	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[c.length][t.length];  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[c.length][t.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[c.length][t.length];	  final    double[][]    a    =    new    double[stages][t.length];    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  y1,  0,  stages.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  y1,  0,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  y1,  0,  stages.length);	  System.arraycopy(stages,    0,    y0,    0,    stages.length);    	non-compiled	[CE]  ';'  expected	32	None	replace
5	[BUG]  [BUGGY]  sanityChecks(equations,  y0,  t,  c,  y0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  y0,  t,  c,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  y0,  t,  c,  y0);	  sanityChecks(stages,    y0,    t,    c,    y0);    	non-compiled	[CE]  ';'  expected	47	None	replace
6	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  y0);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c,  y0);	  sanityChecks(stages,    y0,    t,    c,    y0);    	non-compiled	[CE]  ';'  expected	47	None	replace
7	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  stages,  y0);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  t,  stages,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  t,  stages,  y0);	  sanityChecks(stages,    y0,    t,    c,    y0);    	non-compiled	[CE]  ';'  expected	47	None	replace
8	[BUG]  [BUGGY]  sanityChecks(c,  y0,  t,  stages,  y0);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(c,  y0,  t,  stages,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(c,  y0,  t,  stages,  y0);	  sanityChecks(stages,    y0,    t,    c,    y0);    	non-compiled	[CE]  ';'  expected	47	None	replace
9	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[c.length][dt.length];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[c.length][dt.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[c.length][dt.length];	  final    double[][]    a    =    new    double[stages][dt.length];    	non-compiled	[CE]  ';'  expected	42	None	replace
10	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[stages][dt.length  +  1];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[stages][dt.length  +  1];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[stages][dt.length  +  1];	  final    double[][]    a    =    new    double[stages][dt.length];    	non-compiled	[CE]  ';'  expected	42	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y0,  0,  c.length  +  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y0,  0,  c.length  +  1);	  System.arraycopy(c,    0,    y0,    0,    c.length);    	non-compiled	[CE]  ';'  expected	11	None	replace
12	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c,  stages,  t);	  sanityChecks(equations,    t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	27	None	replace
13	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c,  stages,  1);	  sanityChecks(equations,    t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	27	None	replace
14	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages,  t);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  t,  stages,  t);	  sanityChecks(equations,    t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	27	None	replace
15	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  y);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  t,  y);	  sanityChecks(stages,    t0,    y0,    t,    y);    	non-compiled	[CE]  ';'  expected	43	None	replace
16	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  t,  y);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(c,  t0,  y0,  t,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(c,  t0,  y0,  t,  y);	  sanityChecks(stages,    t0,    y0,    t,    y);    	non-compiled	[CE]  ';'  expected	43	None	replace
17	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  c);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  c);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  t,  c);	  sanityChecks(stages,    t0,    y0,    t,    y);    	non-compiled	[CE]  ';'  expected	43	None	replace
18	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[c.length][t.length];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[c.length][t.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[c.length][t.length];	  final    double[][]    yTmp    =    new    double[stages][t.length];    	non-compiled	[CE]  ';'  expected	14	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ystages,  0,  c.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(y0,  0,  ystages,  0,  c.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(y0,  0,  ystages,  0,  c.length);	  System.arraycopy(y0,    0,    ystages,    0,    y0.length);    	non-compiled	[CE]  ';'  expected	19	None	replace
20	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  y0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  t,  y0);	  sanityChecks(stages,    t0,    y0,    t,    y0);    	non-compiled	[CE]  ';'  expected	46	None	replace
21	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  t,  y0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(c,  t0,  y0,  t,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(c,  t0,  y0,  t,  y0);	  sanityChecks(stages,    t0,    y0,    t,    y0);    	non-compiled	[CE]  ';'  expected	46	None	replace
22	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[c.length][t0.length];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[c.length][t0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[c.length][t0.length];	  final    double[][]    a    =    new    double[stages][t0.length];    	non-compiled	[CE]  ';'  expected	54	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  y0,  0,  stages.length  +  1);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  y0,  0,  stages.length  +  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  y0,  0,  stages.length  +  1);	  System.arraycopy(stages,    0,    y,    0,    stages.length    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
24	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  t);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  t,  t);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
25	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  t,  stages);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
26	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  t,  stages);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
27	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  c);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  t,  c);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  t,  c);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
28	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  y);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c,  y);	  sanityChecks(equations,    t0,    y0,    c,    y);    	non-compiled	[CE]  ';'  expected	44	None	replace
29	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  forward);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  forward);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c,  forward);	  sanityChecks(equations,    t0,    y0,    c,    y);    	non-compiled	[CE]  ';'  expected	44	None	replace
30	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c.length);	  sanityChecks(t0,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	4	None	replace
31	[BUG]  [BUGGY]  sanityChecks(c,  y0,  t,  t.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(c,  y0,  t,  t.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(c,  y0,  t,  t.length);	  sanityChecks(t0,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	4	None	replace
32	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  stages,  y);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  t,  stages,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  t,  stages,  y);	  sanityChecks(t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	28	None	replace
33	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  stages,  t);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  c,  stages,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  c,  stages,  t);	  sanityChecks(t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	28	None	replace
34	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  stages,  1);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  c,  stages,  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  c,  stages,  1);	  sanityChecks(t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	28	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(c,  0,  stages,  1,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  stages,  1,  c.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  stages,  1,  c.length);	  System.arraycopy(c,    0,    y,    1,    c.length);    	non-compiled	[CE]  ';'  expected	53	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y,  1,  c.length  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y,  1,  c.length  +  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y,  1,  c.length  +  1);	  System.arraycopy(c,    0,    y,    1,    c.length);    	non-compiled	[CE]  ';'  expected	53	None	replace
37	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[t0.length][y0.length];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[t0.length][y0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[t0.length][y0.length];	  final    double[][]    yTmp    =    new    double[c.length][y0.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  0,  stages);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y0,  0,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y0,  0,  stages);	  System.arraycopy(stages,    0,    y0,    0,    stages);    	non-compiled	[CE]  ';'  expected	21	None	replace
39	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[c.length][y.length];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[c.length][y.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[c.length][y.length];	  final    double[][]    yTmp    =    new    double[stages][y.length];    	non-compiled	[CE]  ';'  expected	36	None	replace
40	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][dt.length];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][dt.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][dt.length];	  final    double[][]    yTmp    =    new    double[stages][dt.length    +    1];    	non-compiled	[CE]  ';'  expected	12	None	replace
41	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[c.length][t0.length];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[c.length][t0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[c.length][t0.length];	  final    double[][]    yTmp    =    new    double[stages][t0.length];    	non-compiled	[CE]  ';'  expected	49	None	replace
42	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][t0.length  +  1];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][t0.length  +  1];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][t0.length  +  1];	  final    double[][]    yTmp    =    new    double[stages][t0.length];    	non-compiled	[CE]  ';'  expected	49	None	replace
43	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[y0.length][c.length];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[y0.length][c.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[y0.length][c.length];	  final    double[][]    a    =    new    double[c.length][y0.length];    	non-compiled	[CE]  ';'  expected	2	None	replace
44	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages,  t);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y,  c,  stages,  t);	  sanityChecks(equations,    t0,    y,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	24	None	replace
45	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages,  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages,  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y,  c,  stages,  1);	  sanityChecks(equations,    t0,    y,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	24	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  1,  c.length  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y0,  1,  c.length  +  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y0,  1,  c.length  +  1);	  System.arraycopy(c,    0,    y0,    1,    c.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
47	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y,  c,  t0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y,  c,  t0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y,  c,  t0);	  sanityChecks(stages,    y0,    c,    t0);    	non-compiled	[CE]  ';'  expected	38	None	replace
48	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y,  c,  t);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y,  c,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y,  c,  t);	  sanityChecks(stages,    y0,    c,    t0);    	non-compiled	[CE]  ';'  expected	38	None	replace
49	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][0];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][0];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][0];	  final    double[][]    yTmp    =    new    double[stages][1];    	non-compiled	[CE]  ';'  expected	15	None	replace
50	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][2];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][2];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][2];	  final    double[][]    yTmp    =    new    double[stages][1];    	non-compiled	[CE]  ';'  expected	15	None	replace
51	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][3];  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][3];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][3];	  final    double[][]    yTmp    =    new    double[stages][1];    	non-compiled	[CE]  ';'  expected	15	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(c,  0,  stages,  0,  stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  stages,  0,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  stages,  0,  stages);	  System.arraycopy(c,    0,    y,    0,    stages);    	non-compiled	[CE]  ';'  expected	22	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(c,  0,  stages,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  stages,  0,  c.length  +  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  stages,  0,  c.length  +  1);	  System.arraycopy(c,    0,    stages,    0,    c.length);    	non-compiled	[CE]  ';'  expected	35	None	replace
54	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  deficiencies);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  deficiencies);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c,  deficiencies);	  sanityChecks(equations,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	45	None	replace
55	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y,  c,  stages);	  sanityChecks(equations,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	45	None	replace
56	[BUG]  [BUGGY]  sanityChecks(equations,  y0,  c,  t);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  y0,  c,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  y0,  c,  t);	  sanityChecks(stages,    y0,    c,    t);    	non-compiled	[CE]  ';'  expected	31	None	replace
57	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[stages][c.length  +  1];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[stages][c.length  +  1];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[stages][c.length  +  1];	  final    double[][]    a    =    new    double[stages][c.length];    	non-compiled	[CE]  ';'  expected	1	None	replace
58	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[c.length];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[c.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[c.length];	  final    double[][]    a    =    new    double[stages][c.length];    	non-compiled	[CE]  ';'  expected	1	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  c,  0,  stages.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  c,  0,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  c,  0,  stages.length);	  System.arraycopy(c,    0,    stages,    0,    stages.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
60	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  stages.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c,  stages.length);	  sanityChecks(t0,    y0,    c,    stages.length);    	non-compiled	[CE]  ';'  expected	52	None	replace
61	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  stages.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  t,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  t,  stages.length);	  sanityChecks(t0,    y0,    c,    stages.length);    	non-compiled	[CE]  ';'  expected	52	None	replace
62	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c,  stages.length  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  c,  stages.length  +  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  c,  stages.length  +  1);	  sanityChecks(t0,    y0,    c,    stages.length);    	non-compiled	[CE]  ';'  expected	52	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y,  0,  c.length  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y,  0,  c.length  +  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y,  0,  c.length  +  1);	  System.arraycopy(c,    0,    y,    0,    c.length);    	non-compiled	[CE]  ';'  expected	16	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  0,  stages.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y0,  0,  stages.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y0,  0,  stages.length);	  System.arraycopy(c,    0,    stages,    0,    y0.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
65	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  stages,  c.length  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  stages,  c.length  +  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  stages,  c.length  +  1);	  sanityChecks(equations,    t0,    y0,    stages,    c.length);    	non-compiled	[CE]  ';'  expected	5	None	replace
66	[BUG]  [BUGGY]  sanityChecks(c,  t0,  y0,  stages.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(c,  t0,  y0,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(c,  t0,  y0,  stages.length);	  sanityChecks(stages,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	34	None	replace
67	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y,  c.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y,  c.length);	  sanityChecks(stages,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	34	None	replace
68	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][y.length  +  2];  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][y.length  +  2];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][y.length  +  2];	  final    double[][]    yTmp    =    new    double[stages][y.length    +    1];    	non-compiled	[CE]  ';'  expected	40	None	replace
69	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][y.length  +  3];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][y.length  +  3];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][y.length  +  3];	  final    double[][]    yTmp    =    new    double[stages][y.length    +    1];    	non-compiled	[CE]  ';'  expected	40	None	replace
70	[BUG]  [BUGGY]  sanityChecks(stages,  y0,  t,  t);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  y0,  t,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  y0,  t,  t);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
71	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[stages][y.length];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[stages][y.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[stages][y.length];	  final    double[][]    a    =    new    double[stages][c.length];    	non-compiled	[CE]  ';'  expected	1	None	replace
72	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  t0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  t0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c,  stages,  t0);	  sanityChecks(equations,    t0,    y,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	24	None	replace
73	[BUG]  [BUGGY]  sanityChecks(equations,  y0,  t,  c,  stages,  t0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  y0,  t,  c,  stages,  t0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  y0,  t,  c,  stages,  t0);	  sanityChecks(equations,    t0,    y,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	24	None	replace
74	[BUG]  [BUGGY]  sanityChecks(stages,  y0,  t,  c,  forward);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  y0,  t,  c,  forward);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  y0,  t,  c,  forward);	  sanityChecks(stages,    y0,    t,    c,    y0);    	non-compiled	[CE]  ';'  expected	47	None	replace
75	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[stages][x0.length];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[stages][x0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[stages][x0.length];	  final    double[][]    a    =    new    double[c.length][y0.length];    	non-compiled	[CE]  ';'  expected	2	None	replace
76	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[stages][i0.length];  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  a  =  new  double[stages][i0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  a  =  new  double[stages][i0.length];	  final    double[][]    a    =    new    double[c.length][y0.length];    	non-compiled	[CE]  ';'  expected	2	None	replace
77	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  t1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  c,  stages,  t1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  c,  stages,  t1);	  sanityChecks(equations,    t0,    y0,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	23	None	replace
78	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  t);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c,  t);	  sanityChecks(stages,    y0,    c,    t);    	non-compiled	[CE]  ';'  expected	31	None	replace
79	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  forward);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  t,  forward);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  t,  forward);	  sanityChecks(stages,    t0,    y0,    t,    y);    	non-compiled	[CE]  ';'  expected	43	None	replace
80	[BUG]  [BUGGY]  sanityChecks(stages,  y0,  t,  y);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  y0,  t,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  y0,  t,  y);	  sanityChecks(stages,    t0,    y0,    t,    y);    	non-compiled	[CE]  ';'  expected	43	None	replace
81	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][y1.length];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][y1.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][y1.length];	  final    double[][]    yTmp    =    new    double[stages][c.length];    	non-compiled	[CE]  ';'  expected	8	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  c,  0,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y0,  c,  0,  c.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y0,  c,  0,  c.length);	  System.arraycopy(c,    0,    y1,    0,    c.length);    	non-compiled	[CE]  ';'  expected	18	None	replace
83	[BUG]  [BUGGY]  final  double[][]  xTmp  =  new  double[c.length][y0.length];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  xTmp  =  new  double[c.length][y0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  xTmp  =  new  double[c.length][y0.length];	  final    double[][]    yTmp    =    new    double[c.length][y0.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
84	[BUG]  [BUGGY]  final  double[][]  xxTmp  =  new  double[c.length][y0.length];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  xxTmp  =  new  double[c.length][y0.length];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  xxTmp  =  new  double[c.length][y0.length];	  final    double[][]    yTmp    =    new    double[c.length][y0.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(c,  0,stages,  0,  y0.length  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,stages,  0,  y0.length  +  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,stages,  0,  y0.length  +  1);	  System.arraycopy(c,    0,    stages,    0,    y0.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  stages,  0,  stages.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  stages,  0,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  stages,  0,  stages.length);	  System.arraycopy(c,    0,    stages,    0,    stages.length);    	non-compiled	[CE]  ';'  expected	33	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  y0,  1,  stages.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  y0,  1,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  y0,  1,  stages.length);	  System.arraycopy(stages,    0,    y0,    0,    stages.length);    	non-compiled	[CE]  ';'  expected	32	None	replace
88	[BUG]  [BUGGY]  sanityChecks(stages,  y0,  t,  c,  stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  y0,  t,  c,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  y0,  t,  c,  stages);	  sanityChecks(stages,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	30	None	replace
89	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  c.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  c.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  c.length);	  sanityChecks(stages,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	34	None	replace
90	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c.length  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c.length  +  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c.length  +  1);	  sanityChecks(stages,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	34	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(c,  0,  ystages,  0,  y0.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  ystages,  0,  y0.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  ystages,  0,  y0.length);	  System.arraycopy(y0,    0,    ystages,    0,    y0.length);    	non-compiled	[CE]  ';'  expected	19	None	replace
92	[BUG]  [BUGGY]  sanityChecks(stages,  y0,  t,  c.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  y0,  t,  c.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  y0,  t,  c.length);	  sanityChecks(t0,    y0,    t,    c.length);    	non-compiled	[CE]  ';'  expected	4	None	replace
93	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  stages.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  stages.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  stages.length);	  sanityChecks(t0,    y0,    c,    stages.length);    	non-compiled	[CE]  ';'  expected	52	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  y0,  0,  c.length);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  y0,  0,  c.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  y0,  0,  c.length);	  System.arraycopy(y0,    0,    y0,    0,    c.length);    	non-compiled	[CE]  ';'  expected	51	None	replace
95	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  c,  y0);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  c,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  c,  y0);	  sanityChecks(stages,    y0,    c,    t0);    	non-compiled	[CE]  ';'  expected	38	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(stages,  0,  c,  0,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(stages,  0,  c,  0,  c.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(stages,  0,  c,  0,  c.length);	  System.arraycopy(y0,    0,    stages,    0,    c.length);    	non-compiled	[CE]  ';'  expected	17	None	replace
97	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  stages,  c.length);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y,  stages,  c.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y,  stages,  c.length);	  sanityChecks(equations,    t0,    y0,    stages,    c.length);    	non-compiled	[CE]  ';'  expected	5	None	replace
98	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  stages,  c.length  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y,  stages,  c.length  +  1);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y,  stages,  c.length  +  1);	  sanityChecks(equations,    t0,    y0,    stages,    c.length);    	non-compiled	[CE]  ';'  expected	5	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  1,  c.length  -  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y0,  1,  c.length  -  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y0,  1,  c.length  -  1);	  System.arraycopy(c,    0,    y0,    1,    c.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
100	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  stages,  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y0,  c,  stages,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y0,  c,  stages,  t);	  sanityChecks(t0,    y0,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	25	None	replace
101	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][c.length  +  4];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][c.length  +  4];  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	final  double[][]  yTmp  =  new  double[stages][c.length  +  4];	  final    double[][]    yTmp    =    new    double[stages][c.length    +    3];    	non-compiled	[CE]  ';'  expected	9	None	replace
102	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  t,  c,  y0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  t,  c,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  t,  c,  y0);	  sanityChecks(stages,    y0,    t,    c,    y0);    	non-compiled	[CE]  ';'  expected	47	None	replace
103	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages,  forward);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y,  c,  stages,  forward);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y,  c,  stages,  forward);	  sanityChecks(equations,    t0,    y,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	24	None	replace
104	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y1,  c,  stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y1,  c,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y1,  c,  stages);	  sanityChecks(equations,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	45	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y,  1,  c.length  -  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  y,  1,  c.length  -  1);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  y,  1,  c.length  -  1);	  System.arraycopy(c,    0,    y,    1,    c.length);    	non-compiled	[CE]  ';'  expected	53	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(c,  0,  stages,  1,  y0.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  stages,  1,  y0.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  stages,  1,  y0.length);	  System.arraycopy(c,    0,    stages,    0,    y0.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
107	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages,  y);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  t,  stages,  y);	  sanityChecks(equations,    t0,    y0,    c,    stages,    y);    	non-compiled	[CE]  ';'  expected	27	None	replace
108	[BUG]  [BUGGY]  sanityChecks(t0,  y0,  t,  y);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(t0,  y0,  t,  y);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(t0,  y0,  t,  y);	  sanityChecks(stages,    t0,    y0,    t,    y);    	non-compiled	[CE]  ';'  expected	43	None	replace
109	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  t,  c.length);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  t,  c.length);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  t,  c.length);	  sanityChecks(stages,    t0,    y0,    c.length);    	non-compiled	[CE]  ';'  expected	34	None	replace
110	[BUG]  [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages,  y0);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(equations,  t0,  y0,  t,  stages,  y0);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(equations,  t0,  y0,  t,  stages,  y0);	  sanityChecks(equations,    t0,    y0,    c,    stages,    y0);    	non-compiled	[CE]  ';'  expected	23	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(c,  0,  staging,  0,  c.length);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  System.arraycopy(c,  0,  staging,  0,  c.length);  [BUGGY]      }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	System.arraycopy(c,  0,  staging,  0,  c.length);	  System.arraycopy(y0,    0,    stages,    0,    c.length);    	non-compiled	[CE]  ';'  expected	17	None	replace
112	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y,  c,  stages);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y,  c,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y,  c,  stages);	  sanityChecks(stages,    t0,    y0,    c,    stages);    	non-compiled	[CE]  ';'  expected	30	None	replace
113	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y,  t,  stages);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y,  t,  stages);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y,  t,  stages);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
114	[BUG]  [BUGGY]  sanityChecks(stages,  t0,  y,  t);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  DerivativeException,  IntegratorException  {  sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {      [BUGGY]  sanityChecks(stages,  t0,  y,  t);  [BUGGY]      System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][y0.length];  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	205	205	1	replace	sanityChecks(stages,  t0,  y,  t);	  sanityChecks(t0,    y0,    t,    stages);    	non-compiled	[CE]  ';'  expected	29	None	replace
