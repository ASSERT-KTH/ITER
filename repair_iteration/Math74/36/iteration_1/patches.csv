bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki);	  interpolator    =    prototype;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.getStepInterpolator();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null)?  prototype  :  rki.getStepInterpolator();	  interpolator    =    prototype;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  y0,  yDotK,  forward);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  yDotK,  forward);	      rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  t0,  yDotK,  forward);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  yDotK,  forward);	      rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  rki.initialize(this,  y1,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  y1,  yDotK,  forward);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y1,  yDotK,  forward);	      rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  error);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  yDotK,  error);	      rki.reinitialize(this,    yTmp,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  error);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  t0,  yDotK,  error);	      rki.reinitialize(this,    yTmp,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  y0,  yDotK,  error);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  yDotK,  error);	      rki.reinitialize(this,    yTmp,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.copy();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  }  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  }	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.copy();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  a);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  a);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  yDotK,  a);	      rki.reinitialize(this,    yTmp,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  a);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  t0,  yDotK,  a);	      rki.reinitialize(this,    yTmp,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  y0,  yDotK,  a);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  yDotK,  a);	      rki.reinitialize(this,    yTmp,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  forward);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  yDotK,  forward);	      rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  forward);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  t0,  yDotK,  forward);	      rki.reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  interpolator  =  prototype.getInstance();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  prototype.getInstance();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.getInstance();	  interpolator    =    rki.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
17	[BUG]  [BUGGY]  Interpolator  interpolator  =  prototype.getInstance();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  Interpolator  interpolator  =  prototype.getInstance();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  prototype.getInstance();	  interpolator    =    rki.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
18	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  y	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
24	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.get  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.get  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.get	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.get    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKutta	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(prototype!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    rki    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKutta	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  r	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  interpolator  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  prototype.getStepInterpolator();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.getStepInterpolator();	  interpolator    =    rki.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  Interpolator  interpolator  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  Interpolator  interpolator  =  prototype.getStepInterpolator();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  prototype.getStepInterpolator();	  interpolator    =    rki.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  interpolator  =  prototype.getInterpolator();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  prototype.getInterpolator();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.getInterpolator();	  interpolator    =    rki.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  Interpolator  interpolator  =  prototype.getInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  Interpolator  interpolator  =  prototype.getInterpolator();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  prototype.getInterpolator();	  interpolator    =    rki.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  a);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  yDotK,  a);	      rki.initialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  rki.initialize(this,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  yDotK,  t0);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yDotK,  t0);	      rki.initialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  y0,  t,  a);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  a);	      rki.initialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  yTmp,  a,  yDotK);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yTmp,  a,  yDotK);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  interpolator  =  prototype.interpolator;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  prototype.interpolator;  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.interpolator;	  interpolator    =    rki.interpolator;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeK	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  t0,  yDotK);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  rki.createInterpolator(t0,  t0,  yDotK);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  t0,  yDotK);	  interpolator    =    rki.interpolator;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  Interpolator  interpolator  =  rki.getInterpolator();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  Interpolator  interpolator  =  rki.getInterpolator();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  rki.getInterpolator();	  interpolator    =    rki.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
44	[BUG]  [BUGGY]  interpolator  =  rki.getInterpolator(this);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =  rki.getInterpolator(this);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.getInterpolator(this);	  interpolator    =    rki.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  interpolator);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yTmp,  yDotK,  interpolator);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  a,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.reinitialize(this,  yTmp,  a,  forward);  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yTmp,  a,  forward);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  t0,  yDotK,  back);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  yDotK,  back);	      rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.next();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.next();  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null)?  prototype  :  rki.next();	  interpolator    =    prototype;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  y  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  y  [BUGGY]    }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  y	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  a);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  ytmp,  yDotK,  a);	      rki.initialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  t0,  yDotK,  error);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  yDotK,  error);	      rki.reinitialize(this,    yTmp,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	      if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);    [BUGGY]  rki.initialize(this,  y0,  t0,  forward);  [BUGGY]    interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t0,  forward);	      rki.initialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
