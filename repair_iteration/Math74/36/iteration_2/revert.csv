projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.getStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.getInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.interpolator;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorrki
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.get
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null)?prototype:rki.getStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y1,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,t0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,t0,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,t0,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=prototype.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yDotK,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.get
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKutta
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki==null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(prototype!=null){if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKutta
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki==null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorr
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.getStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=prototype.getStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.getInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=prototype.getInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yDotK,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.interpolator;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeK
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,t0,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=rki.getInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.getInterpolator(this);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,yDotK,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){interpolator[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,a,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,yDotK,back);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null)?prototype:rki.next();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();System.arraycopy(y,0,interpolator,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getDummyStepInterpolator();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();System.arraycopy(y,0,interpolator,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRunge
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolator
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,ytmp,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeK
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRunge
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolator
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t0,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,t,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y1,t,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,a,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,ytmp,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.copy();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y1,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y1,a,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=rki.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,t0,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t0,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y1,t0,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yDotK,t0,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,ytmp,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(prototype!=null){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yDotK,}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki=prototype.copy();rki.reinitialize(this,yDotK,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki==null)?prototype:rki.getStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null)?prototype:rki.getRangeInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,yDotK,back);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,ytmp,yDotK,back);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yDotK,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki=prototype.copy();rki.reinitialize(this,yTmp,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=prototype.copy();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,ytmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.getRangeInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,ytmp,yDotK,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.createInterpolator(t0,t0,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,yDotK,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(y0,t0,rDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,yDotK,t1);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();System.arraycopy(y,0,interpolator
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki,prototype);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki,dt);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki,yTmp);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yDotK,t0,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorprototype=prototype.copy();rki.reinitialize(this,y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){Interpolatorinterpolator[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){interface[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){Interpolator[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getDummyStepInterpolator();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getDummyStepInterpolator();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getDummyStepInterpolator();if(a.length>0){return
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finaldouble[][]a=rki.getDummyStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();System.arraycopy(y,0,interpolator,}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finaldouble[][]a=rki.getScale();System.arraycopy(y,0,interpolator,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=prototype.getInterpolator(rki);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaSte
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y1,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.rki;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRunge}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki==null)?prototype:rki.next();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null)?prototype:rki.remove();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yTmp,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorprototype=prototype.copy();rki.reinitialize(this,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,yDotK,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,yDotK,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y1,yDotK,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandler
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yDotK,t0,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,a,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y1,a,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,yTmp,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,yTmp,a,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();if(a.length>0){return
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();if(a.length>0){returnnew}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)super.get
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,yDotK,t0,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,ytmp,yDotK,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.getInterpolator(this);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=prototype.getInterpolator(rki);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.getInterpolator(this,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=prototype.getInterpolator(this);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y1,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=rki.getStepInterpolator();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();if(a.length>0){return
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,t0,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki,v0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,t,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInter
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,yDotK,back);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,back);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t1,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki==null)?prototype:rki.getInstance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,a,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,t,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,y,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,k);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorprototype=
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpol
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)interpolator.get
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki==null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolator
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,yTmp,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.getInterpolator(this,yTmp);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t1,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRun
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRunge}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlers
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();rki.reinitialize(this,yDotK,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,t0,yDotK,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInter
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRun
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null)?prototype.interpolator:rki.interpolator;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki==null)?prototype.interpolator:rki.interpolator;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null?prototype.interpolator:rki.interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki!=null)?rki.getStepInterpolator():prototype;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=(rki==null)?rki.getStepInterpolator():prototype;
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<yAbsoluteTolerance;k++){interpolator[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<a.length;k++){interpolator[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<y.length;k++){interpolator[k][k]=rki.getDummyStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKut
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getDummyStepInterpolator();if(a.length>0){return
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){finaldouble[][]a=rki.getScale();System.arraycopy(y
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();rki.reinitialize(this,yTmp,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(prototype!=null){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,yTmp,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,y1,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,y,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=rki.createInterpolator(t0,y2,t0);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki==null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeK
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t0,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(interpolator==null){finaldouble[][]a=rki.getScale();if(a.length>0){returnnew
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,ytmp,yDotK,a);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,yDotK,interpolator);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,t,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorinterpol
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215intscalAbsoluteTolerance=rki.getScaleAbsoluteTolerance();
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){interpolator[k][k]=rki.getInitializingStepInterpolator();}
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(prototype!=null){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yDotK,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){finalRungeKuttaStepInterpolatorinterpol
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(prototype!=null){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,yDotK,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(prototype!=null){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,yTmp,
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215if(rki!=null){for(intk=0;k<scalAbsoluteTolerance;k++){if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215interpolator=newRungeKuttaStepInterpolator(rki,b);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215Interpolatorinterpolator=newRungeKuttaStepInterpolator(rki,prototype);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t,forward);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,t0,a,yDotK);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.initialize(this,y0,t0,error);
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)rprototype.
projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java215rki.reinitialize(this,y0,t0,a);
