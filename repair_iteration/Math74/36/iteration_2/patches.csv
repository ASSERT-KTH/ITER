bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype;  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype;	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  a,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  a,  yDotK);	  rki.reinitialize(this,    y0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  t,  a);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yTmp,  t,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  t,  a);	  rki.initialize(this,    y0,    t,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  rki.initialize(this,  y1,  t,  a);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y1,  t,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y1,  t,  a);	  rki.initialize(this,    y0,    t,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  a,  forward);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t,  a,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  a,  forward);	  rki.initialize(this,    y0,    t,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
6	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKutta    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  ytmp,  a,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  ytmp,  a,  yDotK);	  rki.initialize(this,    ytmp,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
8	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.copy();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.copy();  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.copy();	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.copy();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  yDotK,  error);	  rki.initialize(this,    y0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  rki.initialize(this,  y1,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y1,  yDotK,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y1,  yDotK,  error);	  rki.initialize(this,    y0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  rki.initialize(this,  y1,  a,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y1,  a,  yDotK,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y1,  a,  yDotK,  forward);	  rki.initialize(this,    y1,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  Interpolator  interpolator  =  rki.getInstance();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  Interpolator  interpolator  =  rki.getInstance();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  rki.getInstance();	  interpolator    =    prototype.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yTmp,  t0,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  t0,  forward);	  rki.initialize(this,    y0,    t0,    forward);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
14	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t0,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t0,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t0,  yDotK);	  rki.initialize(this,    y0,    t0,    forward);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
15	[BUG]  [BUGGY]  rki.initialize(this,  y1,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y1,  t0,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y1,  t0,  forward);	  rki.initialize(this,    y0,    t0,    forward);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
16	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yTmp,  t0);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  t0);	  rki.initialize(this,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
17	[BUG]  [BUGGY]  rki.initialize(this,  yDotK,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yDotK,  t0,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yDotK,  t0,  forward);	  rki.initialize(this,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
18	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  t0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  ytmp,  t0);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  ytmp,  t0);	  rki.initialize(this,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
19	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yDotK,    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
20	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yDotK,    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  interpolator  =(rki  ==  null)?  prototype  :  rki.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki  ==  null)?  prototype  :  rki.getStepInterpolator();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki  ==  null)?  prototype  :  rki.getStepInterpolator();	  interpolator    =(rki!=    null)?    prototype    :    rki.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.getRangeInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.getRangeInterpolator();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null)?  prototype  :  rki.getRangeInterpolator();	  interpolator    =(rki!=    null)?    prototype    :    rki.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  back);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  yDotK,  back);	  rki.initialize(this,    t0,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
24	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  back);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  ytmp,  yDotK,  back);	  rki.initialize(this,    t0,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
25	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  yDotK,  t0);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yDotK,  t0);	  rki.reinitialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
28	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
29	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  ytmp,  yDotK,  forward);	  rki.initialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  interpolator  =  prototype.getRangeInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  prototype.getRangeInterpolator();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.getRangeInterpolator();	  interpolator    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
31	[BUG]  [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  ytmp,  yDotK,  forward);	  rki.reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  interpolator  =  prototype.createInterpolator(t0,  t0,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  prototype.createInterpolator(t0,  t0,  yDotK);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.createInterpolator(t0,  t0,  yDotK);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
33	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(t0,  yDotK,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  yDotK,  t0);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
34	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(y0,  t0,  rDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(y0,  t0,  rDotK);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(y0,  t0,  rDotK);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
35	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  yDotK,  t1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(t0,  yDotK,  t1);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  yDotK,  t1);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
36	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,	  if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
37	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
38	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    System.arraycopy(y,    0,    interpolator,    y    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
39	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki,  t0);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  prototype);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  prototype);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki,  prototype);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  dt);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  dt);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki,  dt);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  yTmp);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  yTmp);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki,  yTmp);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =(RangeKuttaStepInterpolator)prototype.	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
44	[BUG]  [BUGGY]  rki.initialize(this,  y0,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  a,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  a,  yDotK);	  rki.initialize(this,    y0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  }	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yDotK,  t0,  error);	  rki.reinitialize(this,    t0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  rki.reinitialize(this,  y  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  rki.reinitialize(this,  y  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  rki.reinitialize(this,  y	  if(interpolator!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    y    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
49	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  Interpolator  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  Interpolator  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  Interpolator  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
50	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interface[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interface[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interface[k][k]  =  rki.getDummyStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
51	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  Interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  Interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  Interpolator[k][k]  =  rki.getDummyStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
52	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getDummyStepInterpolator();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
53	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  new	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getDummyStepInterpolator();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
54	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getDummyStepInterpolator();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
55	[BUG]  [BUGGY]  final  double[][]  a  =  rki.getDummyStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  double[][]  a  =  rki.getDummyStepInterpolator();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  double[][]  a  =  rki.getDummyStepInterpolator();	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getDummyStepInterpolator();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
56	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    System.arraycopy(y,    0,    interpolator,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
57	[BUG]  [BUGGY]  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  double[][]  a  =  rki.getScale();  System.arraycopy(y,  0,  interpolator,	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    System.arraycopy(y,    0,    interpolator,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
58	[BUG]  [BUGGY]  Interpolator  interpolator  =  prototype.getInterpolator(rki);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  Interpolator  interpolator  =  prototype.getInterpolator(rki);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  prototype.getInterpolator(rki);	  Interpolator    interpolator    =    prototype.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
59	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaSte  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaSte  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaSte	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
60	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y1,  yDotK,  error);	  rki.reinitialize(this,    y0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  interpolator  =  prototype.rki;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  prototype.rki;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.rki;	  interpolator    =    prototype.interpolator;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
62	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Runge  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
63	[BUG]  [BUGGY]  interpolator  =(rki  ==  null)?  prototype  :  rki.next();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki  ==  null)?  prototype  :  rki.next();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki  ==  null)?  prototype  :  rki.next();	  interpolator    =(rki!=    null)?    prototype    :    rki.next();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
64	[BUG]  [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.remove();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki!=  null)?  prototype  :  rki.remove();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null)?  prototype  :  rki.remove();	  interpolator    =(rki!=    null)?    prototype    :    rki.next();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
65	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yTmp,  a,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yTmp,  a,  yDotK);	  rki.initialize(this,    yTmp,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
66	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  rki.reinitialize(this,  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  rki.reinitialize(this,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  prototype  =  prototype.copy();  rki.reinitialize(this,	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
67	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  yDotK,  interpolator);	  rki.reinitialize(this,    yTmp,    yDotK,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
68	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  yDotK,  interpolator);	  rki.reinitialize(this,    yTmp,    yDotK,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
69	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y1,  yDotK,  interpolator);	  rki.reinitialize(this,    yTmp,    yDotK,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
70	[BUG]  [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(prototype!=    null)    {    if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
71	[BUG]  [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandler	  if(prototype!=    null)    {    if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
72	[BUG]  [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||	  if(prototype!=    null)    {    if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
73	[BUG]  [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  yDotK,  t0,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yDotK,  t0,  forward);	  rki.reinitialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  a,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  a,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  a,  forward);	  rki.reinitialize(this,    yTmp,    a,    forward);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
75	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  a,  forward);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y1,  a,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y1,  a,  forward);	  rki.reinitialize(this,    yTmp,    a,    forward);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
76	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yTmp,  forward);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  yTmp,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  yTmp,  forward);	  rki.reinitialize(this,    yTmp,    a,    forward);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
77	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  a,  interpolator);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  yTmp,  a,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  yTmp,  a,  interpolator);	  rki.reinitialize(this,    yTmp,    a,    forward);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
78	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
79	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
80	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
81	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
82	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.clone();  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.clone();	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.get    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
83	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.get  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.get  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)super.get	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.get    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
84	[BUG]  [BUGGY]  rki.initialize(this,  yDotK,  t0,  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  yDotK,  t0,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  yDotK,  t0,  error);	  rki.initialize(this,    t0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
85	[BUG]  [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  ytmp,  yDotK,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  ytmp,  yDotK,  error);	  rki.initialize(this,    t0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
86	[BUG]  [BUGGY]  interpolator  =  prototype.getInterpolator(this);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  prototype.getInterpolator(this);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.getInterpolator(this);	  interpolator    =    rki.getInterpolator(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
87	[BUG]  [BUGGY]  interpolator  =  prototype.getInterpolator(rki);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  prototype.getInterpolator(rki);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  prototype.getInterpolator(rki);	  interpolator    =    rki.getInterpolator(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
88	[BUG]  [BUGGY]  interpolator  =  rki.getInterpolator(this,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.getInterpolator(this,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.getInterpolator(this,  t0);	  interpolator    =    rki.getInterpolator(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
89	[BUG]  [BUGGY]  Interpolator  interpolator  =  prototype.getInterpolator(this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  Interpolator  interpolator  =  prototype.getInterpolator(this);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  prototype.getInterpolator(this);	  interpolator    =    rki.getInterpolator(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
90	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y1,  a,  yDotK);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y1,  a,  yDotK);	  rki.reinitialize(this,    yTmp,    a,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
91	[BUG]  [BUGGY]  Interpolator  interpolator  =  rki.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  Interpolator  interpolator  =  rki.getStepInterpolator();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  rki.getStepInterpolator();	  Interpolator    interpolator    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
92	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
93	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  t0,  a,  yDotK);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  t0,  a,  yDotK);	  rki.reinitialize(this,    yTmp,    a,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
94	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  v0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  v0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki,  v0);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  t,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  t,  error);	  rki.reinitialize(this,    t0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter	  if(rki    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
97	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  back);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  yDotK,  back);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  yDotK,  back);	  rki.initialize(this,    t0,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
98	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  back);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t,  back);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  back);	  rki.initialize(this,    t0,    yDotK,    back);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
99	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  error);	  rki.initialize(this,    t0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
100	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t1,  error);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t1,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t1,  error);	  rki.initialize(this,    t0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
101	[BUG]  [BUGGY]  interpolator  =(rki  ==  null)?  prototype  :  rki.getInstance();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki  ==  null)?  prototype  :  rki.getInstance();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki  ==  null)?  prototype  :  rki.getInstance();	  interpolator    =(rki!=    null)?    prototype    :    rki.next();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
102	[BUG]  [BUGGY]  rki.initialize(this,  y0,  a,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  a,  forward);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  a,  forward);	  rki.reinitialize(this,    yTmp,    a,    forward);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
103	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  t,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  t,  a);	  rki.reinitialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  rki.initialize(this,  t0,  y,  a);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  t0,  y,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  y,  a);	  rki.initialize(this,    y0,    t,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
105	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  k);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t,  k);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  k);	  rki.initialize(this,    y0,    t,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
106	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  yDotK);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  yDotK);	  rki.initialize(this,    y0,    t,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
107	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  prototype  =  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  prototype  =  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  prototype  =	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
108	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpol  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpol  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpol	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
109	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)interpolator.get  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)interpolator.get  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)interpolator.get	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.get    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
110	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(	  if(interpolator    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
111	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
112	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yTmp,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  yTmp,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  yTmp,  forward);	  rki.initialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
113	[BUG]  [BUGGY]  interpolator  =  rki.getInterpolator(this,  yTmp);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.getInterpolator(this,  yTmp);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.getInterpolator(this,  yTmp);	  interpolator    =    rki.getInterpolator(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
114	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t0);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t0);	  rki.initialize(this,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
115	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t1,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t1,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t1,  forward);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
116	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Run  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Run  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Run	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
117	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  Runge  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
118	[BUG]  [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlers	  if(prototype!=    null)    {    if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
119	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yDotK,  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yDotK,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yDotK,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yDotK,    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
120	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  t0,  yDotK,  interpolator);	  rki.reinitialize(this,    yTmp,    yDotK,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
121	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInter	  if(rki    ==    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    r    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
122	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Run  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Run  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  Run	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    Runge    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
123	[BUG]  [BUGGY]  interpolator  =(rki!=  null)?  prototype.interpolator  :  rki.interpolator;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki!=  null)?  prototype.interpolator  :  rki.interpolator;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null)?  prototype.interpolator  :  rki.interpolator;	  interpolator    =    prototype.interpolator;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
124	[BUG]  [BUGGY]  interpolator  =(rki  ==  null)?  prototype.interpolator  :  rki.interpolator;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki  ==  null)?  prototype.interpolator  :  rki.interpolator;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki  ==  null)?  prototype.interpolator  :  rki.interpolator;	  interpolator    =    prototype.interpolator;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
125	[BUG]  [BUGGY]  interpolator  =(rki!=  null?  prototype.interpolator  :  rki.interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki!=  null?  prototype.interpolator  :  rki.interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null?  prototype.interpolator  :  rki.interpolator);	  interpolator    =    prototype.interpolator;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
126	[BUG]  [BUGGY]  interpolator  =(rki!=  null)?  rki.getStepInterpolator()  :  prototype;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki!=  null)?  rki.getStepInterpolator()  :  prototype;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki!=  null)?  rki.getStepInterpolator()  :  prototype;	  interpolator    =(rki!=    null)?    prototype    :    rki.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
127	[BUG]  [BUGGY]  interpolator  =(rki  ==  null)?  rki.getStepInterpolator()  :  prototype;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =(rki  ==  null)?  rki.getStepInterpolator()  :  prototype;  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =(rki  ==  null)?  rki.getStepInterpolator()  :  prototype;	  interpolator    =(rki!=    null)?    prototype    :    rki.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
128	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  yAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  yAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  yAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
129	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
130	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  interpolator[k][k]  =  rki.getDummyStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
131	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKut  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKut  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKut	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKutta    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
132	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getDummyStepInterpolator();  if(a.length  >  0)  {  return	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getDummyStepInterpolator();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
133	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  final  double[][]  a  =  rki.getScale();  System.arraycopy(y	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    System.arraycopy(y,    0,    interpolator,    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
134	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)prototype.copy();  rki.reinitialize(this,  yTmp,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
135	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  }	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
136	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  yTmp,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(t0,  yTmp,  yDotK);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  yTmp,  yDotK);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
137	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  y1,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(t0,  y1,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  y1,  t0);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
138	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  y,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(t0,  y,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  y,  t0);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
139	[BUG]  [BUGGY]  interpolator  =  rki.createInterpolator(t0,  y2,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  rki.createInterpolator(t0,  y2,  t0);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  rki.createInterpolator(t0,  y2,  t0);	  interpolator    =    rki.createInterpolator(t0,    t0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
140	[BUG]  [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki  ==  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeK	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeK    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
141	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t0,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t0,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t0,  a);	  rki.initialize(this,    ytmp,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
142	[BUG]  [BUGGY]  if(interpolator  ==  null)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(interpolator  ==  null)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(interpolator  ==  null)  {  final  double[][]  a  =  rki.getScale();  if(a.length  >  0)  {  return  new	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    final    double[][]    a    =    rki.getScale();    if(a.length    >    0)    {    return    new    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
143	[BUG]  [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  ytmp,  yDotK,  a);	  rki.reinitialize(this,    t0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
144	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  t0,  yDotK,  interpolator);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  yDotK,  interpolator);	  rki.reinitialize(this,    yTmp,    yDotK,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
145	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  t,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  t,  forward);	  rki.reinitialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
146	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.	  if(prototype!=    null)    {    if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
147	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  }  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.  }	  if(prototype!=    null)    {    if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
148	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  interpol  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  interpol  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  interpol	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
149	[BUG]  [BUGGY]  int  scalAbsoluteTolerance  =  rki.getScaleAbsoluteTolerance();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  int  scalAbsoluteTolerance  =  rki.getScaleAbsoluteTolerance();  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	int  scalAbsoluteTolerance  =  rki.getScaleAbsoluteTolerance();	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
150	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getInitializingStepInterpolator();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getInitializingStepInterpolator();  }  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  interpolator[k][k]  =  rki.getInitializingStepInterpolator();  }	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    interpolator[k][k]    =    rki.getDummyStepInterpolator();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
151	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yDotK,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yDotK,    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
152	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  interpol  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  interpol  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  final  RungeKuttaStepInterpolator  interpol	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    final    RungeKuttaStepInterpolator    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
153	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
154	[BUG]  [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(prototype!=  null)  {  final  RungeKuttaStepInterpolator  rki  =  prototype.copy();  rki.reinitialize(this,  yTmp,	  final    RungeKuttaStepInterpolator    rki    =    prototype.copy();    rki.reinitialize(this,    yTmp,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
155	[BUG]  [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	if(rki!=  null)  {  for(int  k  =  0;  k  <  scalAbsoluteTolerance;  k++)  {  if(!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty()	  if(rki!=    null)    {    for(int    k    =    0;    k    <    scalAbsoluteTolerance;    k++)    {    if(!requiresDenseOutput()    &&!eventsHandlersManager.isEmpty())    {    final    RungeKutta    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
156	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  t0,  yDotK);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  yDotK);	  rki.initialize(this,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  b);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  interpolator  =  new  RungeKuttaStepInterpolator(rki,  b);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	interpolator  =  new  RungeKuttaStepInterpolator(rki,  b);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
158	[BUG]  [BUGGY]  Interpolator  interpolator  =  new  RungeKuttaStepInterpolator(rki,  prototype);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  Interpolator  interpolator  =  new  RungeKuttaStepInterpolator(rki,  prototype);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	Interpolator  interpolator  =  new  RungeKuttaStepInterpolator(rki,  prototype);	  interpolator    =    new    RungeKuttaStepInterpolator(rki);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
159	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t,  forward);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t,  forward);	  rki.initialize(this,    t0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
160	[BUG]  [BUGGY]  rki.initialize(this,  t0,  a,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  t0,  a,  yDotK);  [BUGGY]      }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  t0,  a,  yDotK);	  rki.reinitialize(this,    yTmp,    a,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
161	[BUG]  [BUGGY]  rki.initialize(this,  y0,  t0,  error);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.initialize(this,  y0,  t0,  error);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.initialize(this,  y0,  t0,  error);	  rki.initialize(this,    y0,    yDotK,    error);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
162	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)rprototype.  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)rprototype.  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)rprototype.	  final    RungeKuttaStepInterpolator    rki    =    (RungeKuttaStepInterpolator)prototype.    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
163	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t0,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);      [BUGGY]  rki.reinitialize(this,  y0,  t0,  a);  [BUGGY]      interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	215	215	1	replace	rki.reinitialize(this,  y0,  t0,  a);	  rki.reinitialize(this,    y0,    yDotK,    a);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
