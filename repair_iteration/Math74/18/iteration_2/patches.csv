bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMaxReduction();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMaxReduction();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMaxReduction();	  this.minStep    =    -1.0    /    getMinReduction();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinReduction()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinReduction()  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinReduction()  +  1;	  this.minStep    =    -1.0    /    getMinReduction();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
3	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  +  1.0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  +  1.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  +  1.0;	  this.minGrowth    =    minGrowth    +    10.0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  +  2.0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  +  2.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  +  2.0;	  this.minGrowth    =    minGrowth    +    10.0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMaxGrowth(2);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal!=  null)  {  setMaxGrowth(2);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(2);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
6	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMaxGrowth(2);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal  ==  null)  {  setMaxGrowth(2);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(2);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
7	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)super.prototype;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)super.prototype;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)super.prototype;	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?    prototype    :(RangeKuttaStepInterpolator)prototype;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  safety(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safety(1.0);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safety(1.0);	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
9	[BUG]  [BUGGY]  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
10	[BUG]  [BUGGY]  if(exp  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
11	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal)  {  setMinGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal)  {  setMinGrowth(1);  }	  if(prototype!=    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
12	[BUG]  [BUGGY]  if(prototype  ==  null)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype  ==  null)  {  setMaxGrowth(2);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype  ==  null)  {  setMaxGrowth(2);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMaxGrowth(2);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
13	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal!=  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
14	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
15	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
16	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  >  0.0)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal  >  0.0)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal  >  0.0)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
17	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
18	[BUG]  [BUGGY]  if(exp!=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp!=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp!=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
19	[BUG]  [BUGGY]  if(exp!=  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp!=  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp!=  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
20	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinStep()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinStep()  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinStep()  +  1;	  this.minStep    =    -1.0    /    getOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
21	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getOrder()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getOrder()  *  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getOrder()  *  1;	  this.minStep    =    -1.0    /    getOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
22	[BUG]  [BUGGY]  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setMinReduction(1.0);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setMinReduction(1.0);	  if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  if(prototype!=  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  setMinReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  setMinReduction(1);  }	  if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
24	[BUG]  [BUGGY]  this.prototype  =  prototype.getPrototype();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype.getPrototype();  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype.getPrototype();	  this.prototype    =    proto;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
25	[BUG]  [BUGGY]  this.prototype  =  prototype.scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype.scalAbsoluteTolerance;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype.scalAbsoluteTolerance;	  this.prototype    =    proto;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
26	[BUG]  [BUGGY]  this.prototype  =  prototype.prototype;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype.prototype;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype.prototype;	  this.prototype    =    proto;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
27	[BUG]  [BUGGY]  setSafety(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(1);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(1);	  this.prototype    =    prototype;    setSafety(1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  this.prototype  =  prototype;  setSafety(2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype;  setSafety(2);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype;  setSafety(2);	  this.prototype    =    prototype;    setSafety(1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  RungeKuttaStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  RungeKuttaStepInterpolator();  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  RungeKuttaStepInterpolator();	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype    :    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
30	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance(false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Settings  settings  =  Settings.getInstance(false);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Settings  settings  =  Settings.getInstance(false);	  Settings    settings    =    Settings.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance(null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Settings  settings  =  Settings.getInstance(null);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Settings  settings  =  Settings.getInstance(null);	  Settings    settings    =    Settings.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance(this.fsal);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Settings  settings  =  Settings.getInstance(this.fsal);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Settings  settings  =  Settings.getInstance(this.fsal);	  Settings    settings    =    Settings.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  this.prototype  =  PROTOTYPE  +  scalRelativeTolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  PROTOTYPE  +  scalRelativeTolerance;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  PROTOTYPE  +  scalRelativeTolerance;	  this.prototype    =    PROTOTYPE    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  this.prototype  =  PROTOTYPE  /  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  PROTOTYPE  /  scalAbsoluteTolerance;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  PROTOTYPE  /  scalAbsoluteTolerance;	  this.prototype    =    PROTOTYPE    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  this.prototype  =  PROTOTYPE  +  minStep;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  PROTOTYPE  +  minStep;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  PROTOTYPE  +  minStep;	  this.prototype    =    PROTOTYPE    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  this.prototype  =  scalAbsoluteTolerance  +  PROTOTYPE;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  scalAbsoluteTolerance  +  PROTOTYPE;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  scalAbsoluteTolerance  +  PROTOTYPE;	  this.prototype    =    PROTOTYPE    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  if(exp  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  null)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
38	[BUG]  [BUGGY]  if(exp  ==  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  null)  {  if(fsal  ==  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
39	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinimumSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinimumSize()  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinimumSize()  +  1;	  this.minStep    =    -1.0    /    getMinimumSize();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMaximumSize();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMaximumSize();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMaximumSize();	  this.minStep    =    -1.0    /    getMinimumSize();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
41	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinimumSize()  *  getMaximumSize();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinimumSize()  *  getMaximumSize();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinimumSize()  *  getMaximumSize();	  this.minStep    =    -1.0    /    getMinimumSize();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
42	[BUG]  [BUGGY]  this.c  =  new  double[Math.min(minStep,  maxStep),  scalAbsoluteTolerance);  [CE]  ']'  expected  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  new  double[Math.min(minStep,  maxStep),  scalAbsoluteTolerance);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  new  double[Math.min(minStep,  maxStep),  scalAbsoluteTolerance);	  this.c    =    a;    	non-compiled	[CE]  ']'  expected	41	None	replace
43	[BUG]  [BUGGY]  this.c  =  new  double[Math.log(minStep,  maxStep),  scalAbsoluteTolerance);  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  new  double[Math.log(minStep,  maxStep),  scalAbsoluteTolerance);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  new  double[Math.log(minStep,  maxStep),  scalAbsoluteTolerance);	  this.c    =    a;    	non-compiled	[CE]  ']'  expected	41	None	replace
44	[BUG]  [BUGGY]  this.c  =  new  double[Math.min(minStep,  maxStep),  scalRelativeTolerance);  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  new  double[Math.min(minStep,  maxStep),  scalRelativeTolerance);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  new  double[Math.min(minStep,  maxStep),  scalRelativeTolerance);	  this.c    =    a;    	non-compiled	[CE]  ']'  expected	41	None	replace
45	[BUG]  [BUGGY]  this.minGrowth  =  maxStep;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maxStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maxStep;	  this.minGrowth    =    minStep;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMaxReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal!=  null)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
47	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMaxReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal  ==  null)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMaxReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  this.minStep  =  minStep  +  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  minStep  +  scalAbsoluteTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  minStep  +  scalAbsoluteTolerance;	  this.minStep    =    maxStep    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
50	[BUG]  [BUGGY]  this.minStep  =  minStep  +  scalRelativeTolerance;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  minStep  +  scalRelativeTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  minStep  +  scalRelativeTolerance;	  this.minStep    =    maxStep    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
51	[BUG]  [BUGGY]  this.minStep  =  minStep  /  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  minStep  /  scalAbsoluteTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  minStep  /  scalAbsoluteTolerance;	  this.minStep    =    maxStep    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
52	[BUG]  [BUGGY]  setSafety(1.0  /  getOrder());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(1.0  /  getOrder());  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(1.0  /  getOrder());	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  setSafety(0.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(0.0);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(0.0);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  this.c  =  c  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  c  +  2;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  c  +  2;	  this.c    =    c    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  this.c  =  c  +  3;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  c  +  3;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  c  +  3;	  this.c    =    c    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  this.minStep  =  scalRelativeTolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  scalRelativeTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  scalRelativeTolerance;	  this.minStep    =    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  this.minStep  =  maximumStep;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  maximumStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  maximumStep;	  this.minStep    =    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinGrowth();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinGrowth();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinGrowth();	  this.minStep    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
59	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMaxGrowth()  +  10.0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMaxGrowth()  +  10.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMaxGrowth()  +  10.0;	  this.minStep    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
60	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinGrowth()  +  10.0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinGrowth()  +  10.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinGrowth()  +  10.0;	  this.minStep    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
61	[BUG]  [BUGGY]  setSafety(1.0d);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(1.0d);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(1.0d);	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
62	[BUG]  [BUGGY]  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  ']'  expected	55	None	replace
63	[BUG]  [BUGGY]  if(prototype  ==  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype  ==  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype  ==  null)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal  ==  null)  {  setMinReduction(1);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(b  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(b  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(b  ==  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  this.minGrowth  =  maxGrowth  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maxGrowth  -  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maxGrowth  -  1;	  this.minGrowth    =    minGrowth    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  /  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  /  1;	  this.minGrowth    =    minGrowth    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  -  10.0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  -  10.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  -  10.0;	  this.minGrowth    =    minGrowth    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  this.minGrowth  =  maxGrowth  /  10.0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maxGrowth  /  10.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maxGrowth  /  10.0;	  this.minGrowth    =    maxGrowth    +    10.0;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
70	[BUG]  [BUGGY]  this.minGrowth  =  maxGrowth  +  1.0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maxGrowth  +  1.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maxGrowth  +  1.0;	  this.minGrowth    =    maxGrowth    +    10.0;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
71	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  +  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  +  scalAbsoluteTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  +  scalAbsoluteTolerance;	  this.minGrowth    =    minGrowth    +    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
72	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  /  maxGrowth;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  /  maxGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  /  maxGrowth;	  this.minGrowth    =    minGrowth    +    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
73	[BUG]  [BUGGY]  this.minGrowth  =  maxGrowth  +  minGrowth;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maxGrowth  +  minGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maxGrowth  +  minGrowth;	  this.minGrowth    =    minGrowth    +    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
74	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMaxStep()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMaxStep()  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMaxStep()  +  1;	  this.minStep    =    -1.0    /    getMaxStep();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
75	[BUG]  [BUGGY]  setMaxGrowth(1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setMaxGrowth(1);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setMaxGrowth(1);	  if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype  ==  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  this.minStep  =  minStep  -  maxStep;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  minStep  -  maxStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  minStep  -  maxStep;	  this.minStep    =    maxStep    -    minStep;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
78	[BUG]  [BUGGY]  this.minStep  =  maxStep  /  minStep;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  maxStep  /  minStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  maxStep  /  minStep;	  this.minStep    =    maxStep    -    minStep;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  this.minStep  =  maxStep  -  minStep  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  maxStep  -  minStep  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  maxStep  -  minStep  +  1;	  this.minStep    =    maxStep    -    minStep;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
81	[BUG]  [BUGGY]  siguranță(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  siguranță(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	siguranță(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
82	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safe(fsal)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safe(fsal)  {  setSafety(0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
83	[BUG]  [BUGGY]  this.minGrowth  =  maxGrowth  -  minGrowth;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maxGrowth  -  minGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maxGrowth  -  minGrowth;	  this.minGrowth    =    minGrowth    -    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
84	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  -  maxGrowth  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  -  maxGrowth  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  -  maxGrowth  +  1;	  this.minGrowth    =    minGrowth    -    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
85	[BUG]  [BUGGY]  luate(fsal,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  luate(fsal,  c);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	luate(fsal,  c);	  luate(fsal);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
86	[BUG]  [BUGGY]  luate(a);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  luate(a);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	luate(a);	  luate(fsal);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
87	[BUG]  [BUGGY]  luate(this.fsal);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  luate(this.fsal);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	luate(this.fsal);	  luate(fsal);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
88	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
89	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
90	[BUG]  [BUGGY]  safeTolerance();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safeTolerance();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safeTolerance();	  safely();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
91	[BUG]  [BUGGY]  safeTree();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safeTree();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safeTree();	  safely();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
92	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal  >  0)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal  >  0)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal  >  0)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
93	[BUG]  [BUGGY]  if(fsal  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ==  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
94	[BUG]  [BUGGY]  if(exp  ==  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
95	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
96	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(exp  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(exp  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(exp  ==  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
97	[BUG]  [BUGGY]  this.minGrowth  =  scalRelativeTolerance;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  scalRelativeTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  scalRelativeTolerance;	  this.minGrowth    =    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0.0)  {  if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  this.minStep  =  minStep  +  maxStep  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  minStep  +  maxStep  -  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  minStep  +  maxStep  -  1;	  this.minStep    =    minStep    +    maxStep;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  this.minStep  =  minStep  /  maxStep;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  minStep  /  maxStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  minStep  /  maxStep;	  this.minStep    =    minStep    +    maxStep;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
101	[BUG]  [BUGGY]  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ==  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
102	[BUG]  [BUGGY]  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal!=  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
103	[BUG]  [BUGGY]  if(fsal  ||  prototype!=  null)  {  if(fsal!=  null)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ||  prototype!=  null)  {  if(fsal!=  null)  {  setMaxReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ||  prototype!=  null)  {  if(fsal!=  null)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
104	[BUG]  [BUGGY]  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ==  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
105	[BUG]  [BUGGY]  this.prototype  =  new  double[maxStep][scalAbsoluteTolerance];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  new  double[maxStep][scalAbsoluteTolerance];  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  new  double[maxStep][scalAbsoluteTolerance];	  this.prototype    =    scalRelativeTolerance;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
106	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinStep()  +  maxStep;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinStep()  +  maxStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinStep()  +  maxStep;	  this.minStep    =    -1.0    /    getMinStep();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
107	[BUG]  [BUGGY]  if(fsal  ||  prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ||  prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ||  prototype!=  null)  {  if(fsal!=  null)  {  setMinReduction(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
108	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMaxReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMaxReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMaxReduction(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
109	[BUG]  [BUGGY]  safely()  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safely()  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safely()  {  setSafety(1.0);  }	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
110	[BUG]  [BUGGY]  luate(fsal,  b);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  luate(fsal,  b);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	luate(fsal,  b);	  luate(fsal);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
111	[BUG]  [BUGGY]  this.prototype  =  a;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  a;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  a;	  this.prototype    =    b;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  this.c  =  fsal;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  fsal;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  fsal;	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
113	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMaxStep()  +  minStep;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMaxStep()  +  minStep;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMaxStep()  +  minStep;	  this.minStep    =    -1.0    /    getMaxStep();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
114	[BUG]  [BUGGY]  if(prototype!=  null)  {  this.prototype  =  proto;  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  this.prototype  =  proto;  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  this.prototype  =  proto;  setSafety(1.0);  }	  this.prototype    =    proto;    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
115	[BUG]  [BUGGY]  if(prototype!=  null)  {  this.prototype  =  proto;  setSafety(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  this.prototype  =  proto;  setSafety(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  this.prototype  =  proto;  setSafety(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	  this.prototype    =    proto;    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
116	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  >=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype  >=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype  >=  null)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
117	[BUG]  [BUGGY]  if(fsal!=  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal!=  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal!=  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
118	[BUG]  [BUGGY]  if(fsal  ==  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ==  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ==  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
119	[BUG]  [BUGGY]  if(fsal  >=  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  >=  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  >=  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
120	[BUG]  [BUGGY]  if(fsal!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal!=  null)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
121	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(2);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMinGrowth(2);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
122	[BUG]  [BUGGY]  this.c  =  c  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  c  *  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  c  *  1;	  this.c    =    c    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
123	[BUG]  [BUGGY]  if(fsal!=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal!=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal!=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
124	[BUG]  [BUGGY]  if(fsal  >=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  >=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  >=  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
125	[BUG]  [BUGGY]  if(fsal  ==  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  ==  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  ==  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
126	[BUG]  [BUGGY]  safety(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safety(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safety(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
127	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  double[0];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  double[0];  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  double[0];	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype    :    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
128	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  double[1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  double[1];  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  double[1];	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype    :    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
129	[BUG]  [BUGGY]  setSafety(1.0  -  minStep);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(1.0  -  minStep);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(1.0  -  minStep);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
130	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)this.prototype;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)this.prototype;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)this.prototype;	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?    prototype    :(RangeKuttaStepInterpolator)prototype;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
131	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)supertype;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)supertype;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  prototype  :(RangeKuttaStepInterpolator)supertype;	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?    prototype    :(RangeKuttaStepInterpolator)prototype;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
132	[BUG]  [BUGGY]  this.minStep  =  maxStep  +  minStep  +  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  maxStep  +  minStep  +  scalAbsoluteTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  maxStep  +  minStep  +  scalAbsoluteTolerance;	  this.minStep    =    maxStep    +    minStep;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
133	[BUG]  [BUGGY]  this.minGrowth  =  maximumGrowth  -  minGrowth;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maximumGrowth  -  minGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maximumGrowth  -  minGrowth;	  this.minGrowth    =    minGrowth    -    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(3);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(3);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(3);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(2);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
135	[BUG]  [BUGGY]  if(prototype!=  null)  {  this.prototype  =  prototype;  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  this.prototype  =  prototype;  setSafety(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  this.prototype  =  prototype;  setSafety(1);  }	  if(prototype!=    null)    {    this.prototype    =    prototype;    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
136	[BUG]  [BUGGY]  if(prototype  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype  ==  null)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
137	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance(this.minStep,  maxStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Settings  settings  =  Settings.getInstance(this.minStep,  maxStep);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Settings  settings  =  Settings.getInstance(this.minStep,  maxStep);	  Settings    settings    =    Settings.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Preconditions.checkState(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Preconditions.checkState(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(fsal  ||  fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Preconditions.checkState(fsal  ||  fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Preconditions.checkState(fsal  ||  fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(fsal);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Preconditions.checkState(fsal);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Preconditions.checkState(fsal);	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(fsal)  ==  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Preconditions.checkState(fsal)  ==  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Preconditions.checkState(fsal)  ==  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
142	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  -  2;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  -  2;	  this.minGrowth    =    minGrowth    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
143	[BUG]  [BUGGY]  if(fsal!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal!=  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
144	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  *  maxGrowth;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  *  maxGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  *  maxGrowth;	  this.minGrowth    =    minGrowth    +    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
145	[BUG]  [BUGGY]  this.minStep  =  maxStep  +  scalRelativeTolerance;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  maxStep  +  scalRelativeTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  maxStep  +  scalRelativeTolerance;	  this.minStep    =    maxStep    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
146	[BUG]  [BUGGY]  if(prototype!=  null)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  setMaxGrowth(2);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  setMaxGrowth(2);  }	  if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
147	[BUG]  [BUGGY]  if(prototype!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  setMinGrowth(1);  }	  if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
148	[BUG]  [BUGGY]  this.minStep  =  -1.0  /  getMinimumGrowth();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -1.0  /  getMinimumGrowth();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -1.0  /  getMinimumGrowth();	  this.minStep    =    -1.0    /    getMinimumSize();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
149	[BUG]  [BUGGY]  this.minStep  =  maxStep  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  maxStep  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  maxStep  +  1;	  this.minStep    =    maxStep    +    minStep;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
150	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  (RangeKuttaStepInterpolator)prototype  :(RangeKuttaStepInterpolator)prototype;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  (RangeKuttaStepInterpolator)prototype  :(RangeKuttaStepInterpolator)prototype;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?  (RangeKuttaStepInterpolator)prototype  :(RangeKuttaStepInterpolator)prototype;	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?    prototype    :(RangeKuttaStepInterpolator)prototype;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
151	[BUG]  [BUGGY]  this.minGrowth  =  maximumGrowth;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  maximumGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  maximumGrowth;	  this.minGrowth    =    minStep;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
152	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0.0)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0.0)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
153	[BUG]  [BUGGY]  if(exp  ==  0)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0)  {  if(fsal  ==  null)  {  setMinReduction(1.0);  }	  if(prototype!=    null)    {    if(fsal    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
154	[BUG]  [BUGGY]  if(prototype!=  null)  {  setMaxGrowth(0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  setMaxGrowth(0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  setMaxGrowth(0);  }	  if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
155	[BUG]  [BUGGY]  if(prototype!=  null)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  setSafety(1.0);  }	  if(prototype!=    null)    {    this.prototype    =    prototype;    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
156	[BUG]  [BUGGY]  reset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  reset();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	reset();	  safely();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
157	[BUG]  [BUGGY]  safe();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safe();  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safe();	  safely();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
158	[BUG]  [BUGGY]  this.c  =  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.c  =  scalAbsoluteTolerance;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.c  =  scalAbsoluteTolerance;	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
159	[BUG]  [BUGGY]  this.minGrowth  =  scalAbsoluteTolerance  -  maxGrowth;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  scalAbsoluteTolerance  -  maxGrowth;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  scalAbsoluteTolerance  -  maxGrowth;	  this.minGrowth    =    minGrowth    -    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
160	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal)  {  setMaxGrowth(2);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal)  {  setMaxGrowth(2);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal)  {  setMaxGrowth(2);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMaxGrowth(2);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
161	[BUG]  [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  Double(prototype);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  Double(prototype);  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  instanceof  RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype  :  new  Double(prototype);	  this.prototype    =    prototype    instanceof    RungeKuttaStepInterpolator?(RangeKuttaStepInterpolator)prototype    :    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
162	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d,  maxStep);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  setSafety(1.0d,  maxStep);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  setSafety(1.0d,  maxStep);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
163	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0d);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0d);  }	  if(fsal)    {    setSafety(1.0d);    }    else    {    setSafety(1.0d);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
164	[BUG]  [BUGGY]  this.prototype  =  prototype;  setSafety(10.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype;  setSafety(10.0);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype;  setSafety(10.0);	  this.prototype    =    prototype;    setSafety(1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
165	[BUG]  [BUGGY]  this.minGrowth  =  minGrowth  /  10.0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minGrowth  =  minGrowth  /  10.0;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minGrowth  =  minGrowth  /  10.0;	  this.minGrowth    =    maxGrowth    +    10.0;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  if(exp  >  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  >  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  >  0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
167	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  >  0.0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  >  0.0)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }	  if(fsal    >    0)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
168	[BUG]  [BUGGY]  if(exp  ==  0)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0)  {  if(fsal!=  null)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
169	[BUG]  [BUGGY]  safety(a)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  safety(a)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	safety(a)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
170	[BUG]  [BUGGY]  this.b  =  c;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.b  =  c;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.b  =  c;	  this.c    =    b;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
171	[BUG]  [BUGGY]  Set  <  String>  prototype  =  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Set  <  String>  prototype  =  setMinReduction(1.0);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Set  <  String>  prototype  =  setMinReduction(1.0);	  if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
172	[BUG]  [BUGGY]  this.prototype  =  prototype  +  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.prototype  =  prototype  +  scalAbsoluteTolerance;  [BUGGY]        exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.prototype  =  prototype  +  scalAbsoluteTolerance;	  this.prototype    =    PROTOTYPE    +    scalAbsoluteTolerance;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
173	[BUG]  [BUGGY]  if(fsal  >  0)  {  if(prototype!=  null)  {  setMinReduction(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  >  0)  {  if(prototype!=  null)  {  setMinReduction(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  >  0)  {  if(prototype!=  null)  {  setMinReduction(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinReduction(1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
174	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0.0)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0.0)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
175	[BUG]  [BUGGY]  if(exp  ==  0)  {  if(fsal)  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  ==  0)  {  if(fsal)  {  setMaxGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  ==  0)  {  if(fsal)  {  setMaxGrowth(1);  }	  if(prototype!=    null)    {    if(fsal)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
176	[BUG]  [BUGGY]  if(prototype!=  null)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  setMaxReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
177	[BUG]  [BUGGY]  if(fsal)  {  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal)  {  setMaxReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal)  {  setMaxReduction(1.0);  }	  if(fsal)    {    if(prototype!=    null)    {    setMaxReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
178	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance(c);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Settings  settings  =  Settings.getInstance(c);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Settings  settings  =  Settings.getInstance(c);	  Settings    settings    =    Settings.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
179	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance(fsal);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  Settings  settings  =  Settings.getInstance(fsal);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	Settings  settings  =  Settings.getInstance(fsal);	  Settings    settings    =    Settings.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  this.minStep  =  -10.0  /  getOrder()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.minStep  =  -10.0  /  getOrder()  +  1;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.minStep  =  -10.0  /  getOrder()  +  1;	  this.minStep    =    -1.0    /    getOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
181	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(exp  >  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(exp  >  0.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
182	[BUG]  [BUGGY]  if(fsal  >  1.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  >  1.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  >  1.0)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	  if(fsal    >    0.0)    {    if(prototype!=    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
183	[BUG]  [BUGGY]  this.fsal  =  fsal;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  this.fsal  =  fsal;  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	this.fsal  =  fsal;	  if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
184	[BUG]  [BUGGY]  setSafety(1.0  -  10.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  setSafety(1.0  -  10.0);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	setSafety(1.0  -  10.0);	  setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
185	[BUG]  [BUGGY]  luate(c);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  luate(c);  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	luate(c);	  luate(fsal);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
186	[BUG]  [BUGGY]  if(prototype!=  null)  {  if(fsal)  {  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(prototype!=  null)  {  if(fsal)  {  setMinReduction(1.0);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(prototype!=  null)  {  if(fsal)  {  setMinReduction(1.0);  }	  if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
187	[BUG]  [BUGGY]  if(fsal  >  0)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;      [BUGGY]  if(fsal  >  0)  {  if(prototype!=  null)  {  setMinGrowth(1);  }  [BUGGY]      this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4472135954999579	122	122	1	replace	if(fsal  >  0)  {  if(prototype!=  null)  {  setMinGrowth(1);  }	  if(fsal)    {    if(prototype!=    null)    {    setMinGrowth(1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
