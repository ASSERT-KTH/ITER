bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] jsdocBuilder.build(null); [FE] AssertionFailedError [CONTEXT] case EOC: if (hasParsedFileOverviewDocInfo()) { fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo(); } checkExtendedTypes(extendedTypes); return true; case EOF:  [BUGGY] jsdocBuilder.build(null); [BUGGY] parser.addParserWarning("msg.unexpected.eof", stream.getLineno(), stream.getCharno()); checkExtendedTypes(extendedTypes); return false; case EOL: if (state == State.SEARCHING_NEWLINE) { state = State.SEARCHING_ANNOTATION; } token = next(); [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parse [RETURN_TYPE] boolean  [VARIABLES] Set modifiesAnnotationKeywords suppressionNames Node templateNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview meaning messageArg messageId name paramDescription preserve reason reference returnDescription sourceName string templateTypeName typeString version JSDocInfo fileOverviewJSDocInfo int charno lineno Annotation annotation ExtractionInfo authorInfo blockInfo descriptionInfo fileOverviewInfo meaningInfo paramDescriptionInfo preserveInfo reasonInfo referenceInfo returnDescriptionInfo templateInfo versionInfo ErrorReporter errorReporter boolean isBracketedParam matchingRc JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type List extendedTypes JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.7071067811865475	886	886	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case EOC: if (hasParsedFileOverviewDocInfo()) { fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo(); } checkExtendedTypes(extendedTypes); return true; case EOF:  [BUGGY] [BUGGY] jsdocBuilder.build(null); parser.addParserWarning("msg.unexpected.eof", stream.getLineno(), stream.getCharno()); checkExtendedTypes(extendedTypes); return false; case EOL: if (state == State.SEARCHING_NEWLINE) { state = State.SEARCHING_ANNOTATION; } token = next(); [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parse [RETURN_TYPE] boolean  [VARIABLES] Set modifiesAnnotationKeywords suppressionNames Node templateNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview meaning messageArg messageId name paramDescription preserve reason reference returnDescription sourceName string templateTypeName typeString version JSDocInfo fileOverviewJSDocInfo int charno lineno Annotation annotation ExtractionInfo authorInfo blockInfo descriptionInfo fileOverviewInfo meaningInfo paramDescriptionInfo preserveInfo reasonInfo referenceInfo returnDescriptionInfo templateInfo versionInfo ErrorReporter errorReporter boolean isBracketedParam matchingRc JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type List extendedTypes JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.7071067811865475	886	886	1	add	
3	[BUG] [BUGGY] parser.addParserWarning("msg.unexpected.eof", stream.getLineno(), stream.getCharno()); [FE] AssertionFailedError [CONTEXT] case EOC: if (hasParsedFileOverviewDocInfo()) { fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo(); } checkExtendedTypes(extendedTypes); return true; case EOF:  jsdocBuilder.build(null); [BUGGY] parser.addParserWarning("msg.unexpected.eof",    stream.getLineno(), stream.getCharno()); [BUGGY] stream.getLineno(), stream.getCharno()); checkExtendedTypes(extendedTypes); return false; case EOL: if (state == State.SEARCHING_NEWLINE) { state = State.SEARCHING_ANNOTATION; } token = next(); continue retry; [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parse [RETURN_TYPE] boolean  [VARIABLES] Set modifiesAnnotationKeywords suppressionNames Node templateNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview meaning messageArg messageId name paramDescription preserve reason reference returnDescription sourceName string templateTypeName typeString version JSDocInfo fileOverviewJSDocInfo int charno lineno Annotation annotation ExtractionInfo authorInfo blockInfo descriptionInfo fileOverviewInfo meaningInfo paramDescriptionInfo preserveInfo reasonInfo referenceInfo returnDescriptionInfo templateInfo versionInfo ErrorReporter errorReporter boolean isBracketedParam matchingRc JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type List extendedTypes JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.7071067811865475	887	888	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case EOC: if (hasParsedFileOverviewDocInfo()) { fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo(); } checkExtendedTypes(extendedTypes); return true; case EOF:  jsdocBuilder.build(null); [BUGGY] [BUGGY] parser.addParserWarning("msg.unexpected.eof",    stream.getLineno(), stream.getCharno()); stream.getLineno(), stream.getCharno()); checkExtendedTypes(extendedTypes); return false; case EOL: if (state == State.SEARCHING_NEWLINE) { state = State.SEARCHING_ANNOTATION; } token = next(); continue retry; [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parse [RETURN_TYPE] boolean  [VARIABLES] Set modifiesAnnotationKeywords suppressionNames Node templateNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview meaning messageArg messageId name paramDescription preserve reason reference returnDescription sourceName string templateTypeName typeString version JSDocInfo fileOverviewJSDocInfo int charno lineno Annotation annotation ExtractionInfo authorInfo blockInfo descriptionInfo fileOverviewInfo meaningInfo paramDescriptionInfo preserveInfo reasonInfo referenceInfo returnDescriptionInfo templateInfo versionInfo ErrorReporter errorReporter boolean isBracketedParam matchingRc JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type List extendedTypes JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.7071067811865475	887	888	1	add	
5	[BUG] [BUGGY] return reportTypeSyntaxWarning("msg.jsdoc.missing.lp"); [FE] AssertionFailedError [CONTEXT] private Node parseFunctionType(JsDocToken token) {   if (token != JsDocToken.LP) { [BUGGY] return reportTypeSyntaxWarning("msg.jsdoc.missing.lp"); [BUGGY] } Node functionType = newNode(Token.FUNCTION); Node parameters = null; skipEOLs(); if (!match(JsDocToken.RP)) { token = next(); boolean hasParams = true; if (token == JsDocToken.STRING) { [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parseFunctionType [RETURN_TYPE] Node  JsDocToken token [VARIABLES] Set modifies modifiesAnnotationKeywords suppressionNames suppressions Node basicTypeExpr contextType functionType memberType n parameters resultType templateNode typeExpr typeList typeNameNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview line meaning messageArg messageId multilineText name paramDescription preserve reason reference returnDescription s sourceName string templateTypeName tokenStr typeName typeString version JSDocInfo fileOverviewJSDocInfo int charno endCharno endLineno lineno startCharno startLineno trimCount ErrorReporter errorReporter boolean hasParams isNew isThis JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM option ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.7071067811865475	1761	1761	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node parseFunctionType(JsDocToken token) {   if (token != JsDocToken.LP) { [BUGGY] [BUGGY] return reportTypeSyntaxWarning("msg.jsdoc.missing.lp"); } Node functionType = newNode(Token.FUNCTION); Node parameters = null; skipEOLs(); if (!match(JsDocToken.RP)) { token = next(); boolean hasParams = true; if (token == JsDocToken.STRING) { [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parseFunctionType [RETURN_TYPE] Node  JsDocToken token [VARIABLES] Set modifies modifiesAnnotationKeywords suppressionNames suppressions Node basicTypeExpr contextType functionType memberType n parameters resultType templateNode typeExpr typeList typeNameNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview line meaning messageArg messageId multilineText name paramDescription preserve reason reference returnDescription s sourceName string templateTypeName tokenStr typeName typeString version JSDocInfo fileOverviewJSDocInfo int charno endCharno endLineno lineno startCharno startLineno trimCount ErrorReporter errorReporter boolean hasParams isNew isThis JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM option ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.7071067811865475	1761	1761	1	add	
7	[BUG] [BUGGY] return parseTypeExpression(token); [FE] AssertionFailedError [CONTEXT] skipEOLs(); if (!match(JsDocToken.RC)) { reportTypeSyntaxWarning("msg.jsdoc.missing.rc"); } else { next(); } } return typeNode; } else { [BUGGY] return parseTypeExpression(token); [BUGGY] } } [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parseTypeExpressionAnnotation [RETURN_TYPE] Node  JsDocToken token [VARIABLES] Set modifies modifiesAnnotationKeywords suppressionNames suppressions Node n templateNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview line meaning messageArg messageId multilineText name paramDescription preserve reason reference returnDescription s sourceName string templateTypeName typeString version JSDocInfo fileOverviewJSDocInfo int charno endCharno endLineno lineno startCharno startLineno trimCount ErrorReporter errorReporter boolean JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM option ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.24253562503633297	1513	1513	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] skipEOLs(); if (!match(JsDocToken.RC)) { reportTypeSyntaxWarning("msg.jsdoc.missing.rc"); } else { next(); } } return typeNode; } else { [BUGGY] [BUGGY] return parseTypeExpression(token); } } [CLASS] JsDocInfoParser ErrorReporterParser State ExtractionInfo ExtendedTypeInfo WhitespaceOption [METHOD] parseTypeExpressionAnnotation [RETURN_TYPE] Node  JsDocToken token [VARIABLES] Set modifies modifiesAnnotationKeywords suppressionNames suppressions Node n templateNode typeNode JsDocTokenStream stream FileLevelJsDocBuilder fileLevelJsDocBuilder String annotationName author description fileOverview line meaning messageArg messageId multilineText name paramDescription preserve reason reference returnDescription s sourceName string templateTypeName typeString version JSDocInfo fileOverviewJSDocInfo int charno endCharno endLineno lineno startCharno startLineno trimCount ErrorReporter errorReporter boolean JsDocToken NO_UNREAD_TOKEN token unreadToken WhitespaceOption PRESERVE SINGLE_LINE TRIM option ErrorReporterParser parser State NEXT_IS_ANNOTATION SEARCHING_ANNOTATION SEARCHING_NEWLINE state JSTypeExpression type JSDocInfoBuilder jsdocBuilder Map annotationNames  	projects/Closure68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.24253562503633297	1513	1513	1	add	
