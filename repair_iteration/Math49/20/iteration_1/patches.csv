bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  1);  [CE]  illegal  start  of  type  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  -  1);	      Entry    entry    =(Entry)this.entries.get(index);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  1);  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  +  1);	      Entry    entry    =(Entry)this.entries.get(index);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value);  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index,  value);	      Entry    entry    =(Entry)this.entries.get(index);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  -  1);	      Entry    entry    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  +  1);  [CE]  illegal  start  of  type  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  +  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  +  1);	      Entry    entry    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value);  [CE]  illegal  start  of  type  [FE]                    MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index,  value);	      Entry    entry    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if  (value  <  =  0  ||!isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if  (value  <  =  0  ||!isDefaultValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value  <  =  0  ||!isDefaultValue(value))  {	  if    (value    <    0    ||!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  if  (value  <  0  ||!isLocal(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if  (value  <  0  ||!isLocal(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value  <  0  ||!isLocal(value))  {	  if    (value    <    0    ||!isDefaultValue(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
9	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  current  =(Entry)this.entries.get(index);  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entries.get(index);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index);  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entryMap.get(index);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  if  (!isDefaultValue(value)&&!isEmpty(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if  (!isDefaultValue(value)&&!isEmpty(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (!isDefaultValue(value)&&!isEmpty(value))  {	  if    (!isDefaultValue(value)||!isEmpty(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	16	None	replace
12	[BUG]  [BUGGY]  if  (!isDefaultValue(index)||!isEmpty(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if  (!isDefaultValue(index)||!isEmpty(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (!isDefaultValue(index)||!isEmpty(value))  {	  if    (!isDefaultValue(value)||!isEmpty(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	16	None	replace
13	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE)  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	14	None	replace
15	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1);  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  -  1);	      Entry    entry    =(Entry)this.entryMap.get(index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  1);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  +  1);	      Entry    entry    =(Entry)this.entryMap.get(index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  value);	      Entry    entry    =(Entry)this.entryMap.get(index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.next();  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  current  =(Entry)entry.next();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)entry.next();	      Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  entry  =(Entry)iter.next();  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  entry  =(Entry)iter.next();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	entry  =(Entry)iter.next();	      Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  1);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entries.get(index  -  1);	      Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  1);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  1);  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entries.get(index  +  1);	      Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [CE]  illegal  start  of  type  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  current.entrySet().iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.values().iterator();  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Iterator  <  Entry>  iter  =  entries.values().iterator();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  entries.values().iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
26	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	2	None	replace
27	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {	  if    (value!=    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	15	None	replace
28	[BUG]  [BUGGY]  if  (value!=  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if  (value!=  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value!=  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {	  if    (value!=    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	15	None	replace
29	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.next();  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)entry.next();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entry.next();	      Entry    entry    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter2.next();  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)iter2.next();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter2.next();	      Entry    entry    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.getValue();  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  current  =(Entry)iter.getValue();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter.getValue();	      Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  Entry  current  =(Entry)iter2.next();  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  current  =(Entry)iter2.next();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter2.next();	      Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.getValue();  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)iter.getValue();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter.getValue();	      Entry    entry    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(value  ==  0)  {  [CE]  ';'  expected  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  ==  0)  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  0)  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
35	[BUG]  [BUGGY]  if(value  >=  0)  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  >=  0)  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  0)  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  current.entries.iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	10	None	replace
37	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
38	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	3	None	replace
40	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.remove();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  current  =(Entry)iter.remove();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter.remove();	      Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	11	None	replace
41	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  [CE]  ';'  expected  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
42	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.remove();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  Entry  entry  =(Entry)iter.remove();  [BUGGY]    if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter.remove();	      Entry    entry    =(Entry)iter.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	6	None	replace
43	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);    [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [BUGGY]    entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {	  if    (value    ==    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
