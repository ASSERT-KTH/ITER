projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();virtualSize=current.getDimension();}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183if(value!=DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();entry.setValue(entry.getValue());}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183resize=iter.next();entries.add(newOpenMapRealVector(virtualSize,virtualSize,epsilon));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183epsilon.setValue(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183resize=iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183resize=iter.next();entries.add(newOpenMapRealVector(virtualSize,virtualSize));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183resize=iter.next();entries.add(newOpenMapRealVector(virtualSize,virtualSize,value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){virtualSize=iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){virtualSize=iter.next();epsilon=iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){epsilon=iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){virtualSize=iter.next();epsilon=iter.next();}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183newOpenMapRealVector(entries,virtualSize,epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183newOpenMapRealVectorIterator(entries,virtualSize,epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183newOpenMapRealVector(entries,virtualSize,epsilon);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183newOpenMapRealVectorIterator(entries,virtualSize,epsilon);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183iter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183Iteratoriter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();entry.setValue(v.getValue());}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getValue()!=null){returnnewOpenMapRealV
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getValue()==null){returnnewOpenMapRealV
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getValue()!=null){continue;}
