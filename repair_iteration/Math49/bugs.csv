bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] checkVectorDimensions(v.getDimension()); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	
2	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] [BUGGY] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	add	
3	[BUG] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	
4	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	add	
5	[BUG] [BUGGY] Iterator iter = res.entries.iterator(); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = res.entries.iterator(); [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	
6	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] [BUGGY] Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	add	
7	[BUG] [BUGGY] while (iter.hasNext()) { [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); [BUGGY] while (iter.hasNext()) { [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	
8	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); [BUGGY] [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	add	
9	[BUG] [BUGGY] iter.advance(); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { [BUGGY] iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	
10	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { [BUGGY] [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	add	
11	[BUG] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [BUGGY] } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	
12	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	add	
13	[BUG] [BUGGY] public OpenMapRealVector(int dimension, double epsilon) { [FE] MathRuntimeException$6 [CONTEXT] [BUGGY] public OpenMapRealVector(int dimension, double epsilon) { [BUGGY] virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	
14	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] [BUGGY] [BUGGY] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	add	
15	[BUG] [BUGGY] virtualSize = dimension; [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { [BUGGY] virtualSize = dimension; [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	
16	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { [BUGGY] [BUGGY] virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	add	
17	[BUG] [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	
18	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; [BUGGY] [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	add	
19	[BUG] [BUGGY] this.epsilon = epsilon; [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] this.epsilon = epsilon; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	
20	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] [BUGGY] this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	add	
21	[BUG] [BUGGY] } [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; [BUGGY] } [BUGGY]  [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	78	78	1	replace	
22	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; [BUGGY] [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	78	78	1	add	
23	[BUG] [BUGGY] } else if (entries.containsKey(index)) { [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); [BUGGY] } else if (entries.containsKey(index)) { [BUGGY] entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	
24	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); [BUGGY] [BUGGY] } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	add	
25	[BUG] [BUGGY] entries.remove(index); [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { [BUGGY] entries.remove(index); [BUGGY] } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	667	667	1	replace	
26	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { [BUGGY] [BUGGY] entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	667	667	1	add	
27	[BUG] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { [FE] MathRuntimeException$6 [CONTEXT] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	179	179	1	replace	
28	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] [BUGGY] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	179	179	1	add	
29	[BUG] [BUGGY] virtualSize = v.getDimension(); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] virtualSize = v.getDimension(); [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	180	180	1	replace	
30	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] [BUGGY] virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	180	180	1	add	
31	[BUG] [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); [BUGGY] epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	181	181	1	replace	
32	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); [BUGGY] [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	181	181	1	add	
33	[BUG] [BUGGY] epsilon = v.epsilon; [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); [BUGGY] epsilon = v.epsilon; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	182	182	1	replace	
34	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); [BUGGY] [BUGGY] epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	182	182	1	add	
35	[BUG] [BUGGY] } [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; [BUGGY] } [BUGGY]  [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	183	183	1	replace	
36	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; [BUGGY] [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	183	183	1	add	
37	[BUG] [BUGGY] checkIndex(index); [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { [BUGGY] checkIndex(index); [BUGGY] if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	663	663	1	replace	
38	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { [BUGGY] [BUGGY] checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	663	663	1	add	
39	[BUG] [BUGGY] if (!isDefaultValue(value)) { [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); [BUGGY] if (!isDefaultValue(value)) { [BUGGY] entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	
40	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); [BUGGY] [BUGGY] if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	add	
41	[BUG] [BUGGY] entries.put(index, value); [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { [BUGGY] entries.put(index, value); [BUGGY] } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	
42	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { [BUGGY] [BUGGY] entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	add	
43	[BUG] [BUGGY] } [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } [BUGGY] } [BUGGY]  [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	669	669	1	replace	
44	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } [BUGGY] [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int col dimension end expectedSize i index key n resize row virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	669	669	1	add	
45	[BUG] [BUGGY] return entries; [FE] MathRuntimeException$6 [CONTEXT] private OpenIntToDoubleHashMap getEntries() { [BUGGY] return entries; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntries [RETURN_TYPE] OpenIntToDoubleHashMap  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3779644730092272	208	208	1	replace	
46	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] private OpenIntToDoubleHashMap getEntries() { [BUGGY] [BUGGY] return entries; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntries [RETURN_TYPE] OpenIntToDoubleHashMap  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3779644730092272	208	208	1	add	
47	[BUG] [BUGGY] checkIndex(index); [FE] MathRuntimeException$6 [CONTEXT] public double getEntry(int index) { [BUGGY] checkIndex(index); [BUGGY] return entries.get(index); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3779644730092272	479	479	1	replace	
48	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public double getEntry(int index) { [BUGGY] [BUGGY] checkIndex(index); return entries.get(index); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3779644730092272	479	479	1	add	
49	[BUG] [BUGGY] return entries.get(index); [FE] MathRuntimeException$6 [CONTEXT] public double getEntry(int index) { checkIndex(index); [BUGGY] return entries.get(index); [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3779644730092272	480	480	1	replace	
50	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public double getEntry(int index) { checkIndex(index); [BUGGY] [BUGGY] return entries.get(index); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3779644730092272	480	480	1	add	
51	[BUG] [BUGGY] return FastMath.abs(value) < epsilon; [FE] MathRuntimeException$6 [CONTEXT] protected boolean isDefaultValue(double value) { [BUGGY] return FastMath.abs(value) < epsilon; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] isDefaultValue [RETURN_TYPE] boolean  double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3333333333333333	220	220	1	replace	
52	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] protected boolean isDefaultValue(double value) { [BUGGY] [BUGGY] return FastMath.abs(value) < epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] isDefaultValue [RETURN_TYPE] boolean  double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3333333333333333	220	220	1	add	
53	[BUG] [BUGGY] return virtualSize; [FE] MathRuntimeException$6 [CONTEXT] public int getDimension() { [BUGGY] return virtualSize; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getDimension [RETURN_TYPE] int  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3333333333333333	422	422	1	replace	
54	[BUG] [BUGGY] [FE] MathRuntimeException$6 [CONTEXT] public int getDimension() { [BUGGY] [BUGGY] return virtualSize; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getDimension [RETURN_TYPE] int  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.3333333333333333	422	422	1	add	
