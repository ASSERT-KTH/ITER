bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    MapRealVector  res  =  openMapRealVector(v);  [CE]  cannot  find  symbol  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    MapRealVector  res  =  openMapRealVector(v);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    MapRealVector  res  =  openMapRealVector(v);		non-compiled	[CE]  cannot  find  symbol	4	None	add
2	[BUG]  [BUGGY]    checkEntryDimensions(v.getDimension());  [CE]  cannot  find  symbol  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    checkEntryDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    checkEntryDimensions(v.getDimension());		non-compiled	[CE]  cannot  find  symbol	4	None	add
3	[BUG]  [BUGGY]    MapRealVector  res  =  openMapRealVector();  [CE]  cannot  find  symbol  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    MapRealVector  res  =  openMapRealVector();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    MapRealVector  res  =  openMapRealVector();		non-compiled	[CE]  cannot  find  symbol	4	None	add
4	[BUG]  [BUGGY]    MapRealVector  res  =  openMapRealVector(v.getValue());  [CE]  cannot  find  symbol  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    MapRealVector  res  =  openMapRealVector(v.getValue());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    MapRealVector  res  =  openMapRealVector(v.getValue());		non-compiled	[CE]  cannot  find  symbol	4	None	add
5	[BUG]  [BUGGY]    MapRealVector  res  =  openMapRealVector(v.getEntry());  [CE]  cannot  find  symbol  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    MapRealVector  res  =  openMapRealVector(v.getEntry());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    MapRealVector  res  =  openMapRealVector(v.getEntry());		non-compiled	[CE]  cannot  find  symbol	4	None	add
11	[BUG]  [BUGGY]    this.iter  =  entries.iterator();  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter  =  entries.iterator();  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter  =  entries.iterator();		non-compiled	[CE]  modifier  final  not  allowed  here	20	None	add
12	[BUG]  [BUGGY]    this.dimension  =  dimension;  entries.put(new  Integer(entrySize));  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.dimension  =  dimension;  entries.put(new  Integer(entrySize));  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.dimension  =  dimension;  entries.put(new  Integer(entrySize));		non-compiled	[CE]  modifier  final  not  allowed  here	20	None	add
13	[BUG]  [BUGGY]    this.dimension  =  dimension;  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.dimension  =  dimension;  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.dimension  =  dimension;		non-compiled	[CE]  modifier  final  not  allowed  here	20	None	add
14	[BUG]  [BUGGY]    this.dimension  =  dimension  -  1;  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.dimension  =  dimension  -  1;  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.dimension  =  dimension  -  1;		non-compiled	[CE]  modifier  final  not  allowed  here	20	None	add
15	[BUG]  [BUGGY]    this.dimension  =  dimension;  entries.put(new  Integer(entry));  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.dimension  =  dimension;  entries.put(new  Integer(entry));  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.dimension  =  dimension;  entries.put(new  Integer(entry));		non-compiled	[CE]  modifier  final  not  allowed  here	20	None	add
21	[BUG]  [BUGGY]    this.entry  =  createEntry(dimension,  epsilon);  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.entry  =  createEntry(dimension,  epsilon);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.entry  =  createEntry(dimension,  epsilon);		non-compiled	[CE]  modifier  final  not  allowed  here	18	None	add
22	[BUG]  [BUGGY]    this.entry  =  new  OpenIntToDoubleHashMap(dimension,  epsilon);  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.entry  =  new  OpenIntToDoubleHashMap(dimension,  epsilon);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.entry  =  new  OpenIntToDoubleHashMap(dimension,  epsilon);		non-compiled	[CE]  modifier  final  not  allowed  here	18	None	add
23	[BUG]  [BUGGY]    this.entry  =  new  IntToDoubleHashMap(dimension,  epsilon);  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.entry  =  new  IntToDoubleHashMap(dimension,  epsilon);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.entry  =  new  IntToDoubleHashMap(dimension,  epsilon);		non-compiled	[CE]  modifier  final  not  allowed  here	18	None	add
24	[BUG]  [BUGGY]    this.entry  =  new  OpenIntToDoubleHashMap();  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.entry  =  new  OpenIntToDoubleHashMap();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.entry  =  new  OpenIntToDoubleHashMap();		non-compiled	[CE]  modifier  final  not  allowed  here	18	None	add
25	[BUG]  [BUGGY]    this.entry  =  new  IntToDoubleHashMap();  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.entry  =  new  IntToDoubleHashMap();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.entry  =  new  IntToDoubleHashMap();		non-compiled	[CE]  modifier  final  not  allowed  here	18	None	add
31	[BUG]  [BUGGY]  iter.next();  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();	iter.advance();  	non-compiled	[CE]  modifier  final  not  allowed  here	9	None	replace
32	[BUG]  [BUGGY]  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();  res.setEntry(v.getValue(),  v.getValue());	iter.advance();  	non-compiled	[CE]  modifier  final  not  allowed  here	9	None	replace
33	[BUG]  [BUGGY]  iter.next();  res.setEntry(entry.getValue(),  v.getValue());  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(entry.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();  res.setEntry(entry.getValue(),  v.getValue());	iter.advance();  	non-compiled	[CE]  modifier  final  not  allowed  here	9	None	replace
34	[BUG]  [BUGGY]  iter.next();  res.setEntry(iter.getValue(),  v.getValue());  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(iter.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();  res.setEntry(iter.getValue(),  v.getValue());	iter.advance();  	non-compiled	[CE]  modifier  final  not  allowed  here	9	None	replace
35	[BUG]  [BUGGY]    [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	  	iter.advance();  	non-compiled	[CE]  modifier  final  not  allowed  here	9	None	replace
41	[BUG]  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0,  DEFAULT_ZERO_TOLERANCE);  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	entries  =  new  OpenIntToDoubleHashMap(0.0,  DEFAULT_ZERO_TOLERANCE);	entries  =  new  OpenIntToDoubleHashMap(0.0);  	non-compiled	[CE]  modifier  final  not  allowed  here	17	None	replace
43	[BUG]  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(1.0);  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(1.0);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	entries  =  new  OpenIntToDoubleHashMap(1.0);	entries  =  new  OpenIntToDoubleHashMap(0.0);  	non-compiled	[CE]  modifier  final  not  allowed  here	17	None	replace
44	[BUG]  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0,  epsilon);  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0,  epsilon);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	entries  =  new  OpenIntToDoubleHashMap(0.0,  epsilon);	entries  =  new  OpenIntToDoubleHashMap(0.0);  	non-compiled	[CE]  modifier  final  not  allowed  here	17	None	replace
51	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.next()));  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.next()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.next()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  modifier  final  not  allowed  here	11	None	replace
52	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  modifier  final  not  allowed  here	11	None	replace
53	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  +  v.getEntry(iter.key()));  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  +  v.getEntry(iter.key()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  +  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  modifier  final  not  allowed  here	11	None	replace
54	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.next()));  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.next()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.next()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  modifier  final  not  allowed  here	11	None	replace
55	[BUG]  [BUGGY]    [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	  	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  modifier  final  not  allowed  here	11	None	replace
62	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_ZERO_TOLERANCE;  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  =  DEFAULT_ZERO_TOLERANCE;	this.epsilon  =  epsilon;  	non-compiled	[CE]  modifier  final  not  allowed  here	19	None	replace
63	[BUG]  [BUGGY]  this.epsilon  -=  epsilon;  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  -=  epsilon;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  -=  epsilon;	this.epsilon  =  epsilon;  	non-compiled	[CE]  modifier  final  not  allowed  here	19	None	replace
64	[BUG]  [BUGGY]  this.epsilon  =  depsilon;  [CE]  modifier  final  not  allowed  here  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  =  depsilon;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  =  depsilon;	this.epsilon  =  epsilon;  	non-compiled	[CE]  modifier  final  not  allowed  here	19	None	replace
71	[BUG]  [BUGGY]  public  final  OpenMapRealVector(int  dimension,  double  epsilon)  {  [CE]  modifier  final  not  allowed  here  [CONTEXT]    [BUGGY]  public  final  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	public  final  OpenMapRealVector(int  dimension,  double  epsilon)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  modifier  final  not  allowed  here	13	None	replace
73	[BUG]  [BUGGY]  public  MapRealVector(int  dimension,  double  epsilon)  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]  public  MapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	public  MapRealVector(int  dimension,  double  epsilon)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
74	[BUG]  [BUGGY]  openMapRealVector(int  dimension,  double  epsilon)  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]  openMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	openMapRealVector(int  dimension,  double  epsilon)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
75	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	  	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  checkVectorDimensions(v.getDemension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getDemension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkVectorDimensions(v.getDemension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	1	None	replace
83	[BUG]  [BUGGY]  checkVectorDimensions(v.getMinimumDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getMinimumDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkVectorDimensions(v.getMinimumDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	1	None	replace
84	[BUG]  [BUGGY]  checkVectorDimensions(v.getDimension()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getDimension()  +  1);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkVectorDimensions(v.getDimension()  +  1);	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
85	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	  	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
91	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
92	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
93	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.size());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.size());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.size());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
94	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getInt());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getInt());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getInt());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
101	[BUG]  [BUGGY]    res.entries.put(v.getKey(),  v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entries.put(v.getKey(),  v.getValue());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entries.put(v.getKey(),  v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
102	[BUG]  [BUGGY]    res.entries.put(v,  new  OpenIntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entries.put(v,  new  OpenIntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entries.put(v,  new  OpenIntToDoubleHashMap());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
103	[BUG]  [BUGGY]    res.entrySet()  =  new  OpenMapRealVector(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entrySet()  =  new  OpenMapRealVector(v.getValue());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entrySet()  =  new  OpenMapRealVector(v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
104	[BUG]  [BUGGY]    res.entries.put(v.getValue(),  v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entries.put(v.getValue(),  v.getValue());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entries.put(v.getValue(),  v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
105	[BUG]  [BUGGY]    res.entries.put(v,  new  IntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entries.put(v,  new  IntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entries.put(v,  new  IntToDoubleHashMap());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
111	[BUG]  [BUGGY]    super();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super();  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
112	[BUG]  [BUGGY]    this(Dimension,  epsilon,  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    this(Dimension,  epsilon,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    this(Dimension,  epsilon,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
113	[BUG]  [BUGGY]    this(dimension,  epsilon,  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    this(dimension,  epsilon,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    this(dimension,  epsilon,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
114	[BUG]  [BUGGY]    this(Dimension,  epsilon,  true);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    this(Dimension,  epsilon,  true);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    this(Dimension,  epsilon,  true);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
115	[BUG]  [BUGGY]    this(Dimension,  epsilon,  false);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    this(Dimension,  epsilon,  false);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    this(Dimension,  epsilon,  false);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
121	[BUG]  [BUGGY]    res.setEntry(iter.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(iter.getValue(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(iter.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
122	[BUG]  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(entry.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
123	[BUG]  [BUGGY]    res.setEntry(iter.key(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(iter.key(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(iter.key(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
124	[BUG]  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getValue(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    while(iter.hasNext())  {  res.setEntry(entry.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
125	[BUG]  [BUGGY]    res.setEntry(iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(iter.next());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
131	[BUG]  [BUGGY]    res.setEntry(iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setEntry(iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    res.setEntry(iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
133	[BUG]  [BUGGY]    Iterator  iter  =  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator  iter  =  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    Iterator  iter  =  iter.next();  res.setEntry(v.getValue(),  v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
134	[BUG]  [BUGGY]    Iterator  iter  =  iter.next();  res.setEntry(v,  new  OpenMapRealVector(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator  iter  =  iter.next();  res.setEntry(v,  new  OpenMapRealVector(v.getValue()));  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    Iterator  iter  =  iter.next();  res.setEntry(v,  new  OpenMapRealVector(v.getValue()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
135	[BUG]  [BUGGY]    iter.next();  res.setEntry(v,  new  OpenMapRealVector(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    iter.next();  res.setEntry(v,  new  OpenMapRealVector(v.getValue()));  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    iter.next();  res.setEntry(v,  new  OpenMapRealVector(v.getValue()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
141	[BUG]  [BUGGY]  virtualSize  =  dimension  *  2;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  *  2;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  *  2;	virtualSize  =  dimension;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
142	[BUG]  [BUGGY]  virtualSize  =  dimension  *  DEFAULT_ZERO_TOLERANCE;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  *  DEFAULT_ZERO_TOLERANCE;	virtualSize  =  dimension;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
143	[BUG]  [BUGGY]  virtualSize  =  dimension  -  1;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  -  1;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  -  1;	virtualSize  =  dimension;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
151	[BUG]  [BUGGY]    super();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super();  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    super();		non-compiled	[CE]  illegal  start  of  type	14	None	add
152	[BUG]  [BUGGY]    super(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    super(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  type	14	None	add
153	[BUG]  [BUGGY]    super(DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super(DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    super(DEFAULT_ZERO_TOLERANCE,  epsilon);		non-compiled	[CE]  illegal  start  of  type	14	None	add
154	[BUG]  [BUGGY]    this(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE,  entries);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE,  entries);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    this(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE,  entries);		non-compiled	[CE]  illegal  start  of  type	14	None	add
155	[BUG]  [BUGGY]    this(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    this(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  type	14	None	add
161	[BUG]  [BUGGY]    res.setEntry(iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(iter.next());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
162	[BUG]  [BUGGY]    res.setEntry(v.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(v.getValue(),  iter.value());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(v.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
163	[BUG]  [BUGGY]    res.setEntry(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
164	[BUG]  [BUGGY]    res.setEntry(v,  iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(v,  iter.next());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(v,  iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
165	[BUG]  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(entry.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
172	[BUG]  [BUGGY]  while(iter!=  null  &&  iter.hasNext())  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter!=  null  &&  iter.hasNext())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter!=  null  &&  iter.hasNext())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
173	[BUG]  [BUGGY]  while(iter.hasNext()  &&  iter.getValue()  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.hasNext()  &&  iter.getValue()  >  0)  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.hasNext()  &&  iter.getValue()  >  0)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
174	[BUG]  [BUGGY]  while(iter.hasNext()  &&  iter.value()  >  v.getValue())  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.hasNext()  &&  iter.value()  >  v.getValue())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.hasNext()  &&  iter.value()  >  v.getValue())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
181	[BUG]  [BUGGY]  Iterator  iter  =  v.entries.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  v.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	Iterator  iter  =  v.entries.iterator();	Iterator  iter  =  res.entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
182	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	Iterator  iter  =  this.entries.iterator();	Iterator  iter  =  res.entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
183	[BUG]  [BUGGY]  Iterator  iter  =  res.entrySet().iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  res.entrySet().iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	Iterator  iter  =  res.entrySet().iterator();	Iterator  iter  =  res.entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
184	[BUG]  [BUGGY]  Iterator  iter  =  this.entrySets.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  this.entrySets.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	Iterator  iter  =  this.entrySets.iterator();	Iterator  iter  =  res.entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
191	[BUG]  [BUGGY]    checkEntryDimensions(v.getDemension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkEntryDimensions(v.getDemension());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkEntryDimensions(v.getDemension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
192	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMap(v);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMap(v);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
193	[BUG]  [BUGGY]    checkEntryDimensions(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkEntryDimensions(v.getDimension());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkEntryDimensions(v.getDimension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
194	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getInt());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMap(v.getInt());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMap(v.getInt());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
195	[BUG]  [BUGGY]    checkEntry(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkEntry(v.getValue());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkEntry(v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
1	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
2	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
3	[BUG]  [BUGGY]    res.setEntry(new  IntToDoubleHashMap(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  IntToDoubleHashMap(v.getValue()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(new  IntToDoubleHashMap(v.getValue()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
4	[BUG]  [BUGGY]    res.setRealSize(v.getSize());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setRealSize(v.getSize());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setRealSize(v.getSize());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
5	[BUG]  [BUGGY]    res.setEntry(new  IntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  IntToDoubleHashMap());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(new  IntToDoubleHashMap());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
22	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  1  *  v.getEntry(iter.key()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  1  *  v.getEntry(iter.key()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  /  1  *  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
23	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  2  *  v.getEntry(iter.key()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  2  *  v.getEntry(iter.key()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  /  2  *  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
24	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  *  v.getValue()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
41	[BUG]  [BUGGY]    super(DateTimeZone.getDefault(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super(DateTimeZone.getDefault(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    super(DateTimeZone.getDefault(),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  type	14	None	add
43	[BUG]  [BUGGY]    super(DateTimeUtils.currentTimeMillis(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super(DateTimeUtils.currentTimeMillis(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    super(DateTimeUtils.currentTimeMillis(),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  type	14	None	add
44	[BUG]  [BUGGY]    super(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    super(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    super(DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  type	14	None	add
62	[BUG]  [BUGGY]  virtualSize  =  dimension  *  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  dimension;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  *  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  *  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  dimension;	virtualSize  =  dimension;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
64	[BUG]  [BUGGY]  virtualSize  =  dimension  *  Math.max(imaginary,  epsilon);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  *  Math.max(imaginary,  epsilon);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  *  Math.max(imaginary,  epsilon);	virtualSize  =  dimension;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
82	[BUG]  [BUGGY]    checkIntToDoubleHashMap();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMap();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMap();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
83	[BUG]  [BUGGY]    checkIntToDoubleHashMapEntry();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMapEntry();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMapEntry();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
84	[BUG]  [BUGGY]    double  value  =  v.getValue();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    double  value  =  v.getValue();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    double  value  =  v.getValue();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
85	[BUG]  [BUGGY]    checkIntToDoubleHashMapEntry(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMapEntry(v);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMapEntry(v);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
101	[BUG]  [BUGGY]    Iterator  iter  =  iter.next();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator  iter  =  iter.next();  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    Iterator  iter  =  iter.next();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
104	[BUG]  [BUGGY]    res.put(v,  iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.put(v,  iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    res.put(v,  iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
105	[BUG]  [BUGGY]    Iterator  iter  =  iter.next();  res.setEntry(current);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator  iter  =  iter.next();  res.setEntry(current);  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    Iterator  iter  =  iter.next();  res.setEntry(current);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
122	[BUG]  [BUGGY]  iter.next();  res.addActionListener(new  OpenMapRealVector(v));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.addActionListener(new  OpenMapRealVector(v));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();  res.addActionListener(new  OpenMapRealVector(v));	iter.advance();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
123	[BUG]  [BUGGY]  iter.next();  res.addIterator(new  OpenMapRealVector(v));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.addIterator(new  OpenMapRealVector(v));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();  res.addIterator(new  OpenMapRealVector(v));	iter.advance();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
124	[BUG]  [BUGGY]  iter.next();  res.setEntry(new  OpenMapRealVector(v));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(new  OpenMapRealVector(v));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	iter.next();  res.setEntry(new  OpenMapRealVector(v));	iter.advance();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
142	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  IntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  IntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(new  IntToDoubleHashMap());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
143	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getIntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getIntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getIntToDoubleHashMap());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
161	[BUG]  [BUGGY]  this.epsilon  =  epsilon  *  DEFAULT_ZERO_TOLERANCE;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  =  epsilon  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  =  epsilon  *  DEFAULT_ZERO_TOLERANCE;	this.epsilon  =  epsilon;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
162	[BUG]  [BUGGY]  this.epsilon  =  epsilon  -  1;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  =  epsilon  -  1;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  =  epsilon  -  1;	this.epsilon  =  epsilon;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
163	[BUG]  [BUGGY]  this.epsilon  =  epsilon  /  DEFAULT_ZERO_TOLERANCE;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  =  epsilon  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  =  epsilon  /  DEFAULT_ZERO_TOLERANCE;	this.epsilon  =  epsilon;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
183	[BUG]  [BUGGY]  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
184	[BUG]  [BUGGY]  checkInvariantDimensions(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkInvariantDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkInvariantDimensions(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
204	[BUG]  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.1);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.1);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	entries  =  new  OpenIntToDoubleHashMap(0.1);	entries  =  new  OpenIntToDoubleHashMap(0.0);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
221	[BUG]  [BUGGY]    super(dimension);  this.epsilon  =  epsilon;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    super(dimension);  this.epsilon  =  epsilon;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    super(dimension);  this.epsilon  =  epsilon;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
222	[BUG]  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(new  Integer(dimension),  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(new  Integer(dimension),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.iter  =  new  OpenIntToDoubleHashMap(new  Integer(dimension),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
224	[BUG]  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(this.dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(this.dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.iter  =  new  OpenIntToDoubleHashMap(this.dimension,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
225	[BUG]  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(new  Integer(dimension),  new  Integer(epsilon));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(new  Integer(dimension),  new  Integer(epsilon));  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.iter  =  new  OpenIntToDoubleHashMap(new  Integer(dimension),  new  Integer(epsilon));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
244	[BUG]  [BUGGY]  Iterator  iter  =  this.entrys.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  this.entrys.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	Iterator  iter  =  this.entrys.iterator();	Iterator  iter  =  res.entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
261	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
262	[BUG]  [BUGGY]    res.setEntry(iter);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(iter);  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(iter);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
263	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
264	[BUG]  [BUGGY]    res.put(key,  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.put(key,  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.put(key,  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
265	[BUG]  [BUGGY]    iter.next();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    iter.next();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    iter.next();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
281	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.entrySet();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.entrySet();  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    OpenIntToDoubleHashMap  entries  =  res.entrySet();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
282	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  res  =  new  OpenIntToDoubleHashMap(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  res  =  new  OpenIntToDoubleHashMap(v.getDimension());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    OpenIntToDoubleHashMap  res  =  new  OpenIntToDoubleHashMap(v.getDimension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
283	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  res  =  createEntry(new  IntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  res  =  createEntry(new  IntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    OpenIntToDoubleHashMap  res  =  createEntry(new  IntToDoubleHashMap());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
284	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  res  =  openIntToDoubleHashMap(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  res  =  openIntToDoubleHashMap(v);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    OpenIntToDoubleHashMap  res  =  openIntToDoubleHashMap(v);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
285	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  res  =  getEntry(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  res  =  getEntry(v);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    OpenIntToDoubleHashMap  res  =  getEntry(v);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
302	[BUG]  [BUGGY]  public  OpenMapRealVector(int  dimension,  DEFAULT_ZERO_TOLERANCE,  epsilon)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  public  OpenMapRealVector(int  dimension,  DEFAULT_ZERO_TOLERANCE,  epsilon)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	public  OpenMapRealVector(int  dimension,  DEFAULT_ZERO_TOLERANCE,  epsilon)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  <identifier>  expected	13	None	replace
303	[BUG]  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon,  DEFAULT_ZERO_TOLERANCE)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon,  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	public  OpenMapRealVector(int  dimension,  double  epsilon,  DEFAULT_ZERO_TOLERANCE)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  <identifier>  expected	13	None	replace
304	[BUG]  [BUGGY]  public  final  OpenMapRealVector(int  dimension,  epsilon)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  public  final  OpenMapRealVector(int  dimension,  epsilon)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	public  final  OpenMapRealVector(int  dimension,  epsilon)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  <identifier>  expected	13	None	replace
322	[BUG]  [BUGGY]  while(iter.isEmpty())  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.isEmpty())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.isEmpty())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
323	[BUG]  [BUGGY]  while(iter.next())  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.next())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.next())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
324	[BUG]  [BUGGY]  while(iter.hasNext()!=  null)  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.hasNext()!=  null)  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.hasNext()!=  null)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
341	[BUG]  [BUGGY]    this.iter  =  entries.entrySet().iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter  =  entries.entrySet().iterator();  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter  =  entries.entrySet().iterator();		non-compiled	[CE]  <identifier>  expected	20	None	add
342	[BUG]  [BUGGY]    this.iter.setEntry(entry);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter.setEntry(entry);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter.setEntry(entry);		non-compiled	[CE]  <identifier>  expected	20	None	add
343	[BUG]  [BUGGY]    this.iter.putAll(entrys);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter.putAll(entrys);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter.putAll(entrys);		non-compiled	[CE]  <identifier>  expected	20	None	add
344	[BUG]  [BUGGY]    this.iter.hasNext();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter.hasNext();  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter.hasNext();		non-compiled	[CE]  <identifier>  expected	20	None	add
345	[BUG]  [BUGGY]    this.iter.putAll(entries);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter.putAll(entries);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter.putAll(entries);		non-compiled	[CE]  <identifier>  expected	20	None	add
362	[BUG]  [BUGGY]    super(DigitToDoubleHashMap.create(),  DEFAULT_ZERO_TOLERANCE);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(DigitToDoubleHashMap.create(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(DigitToDoubleHashMap.create(),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  <identifier>  expected	16	None	add
363	[BUG]  [BUGGY]    super(dimension);  this.epsilon  =  epsilon;  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(dimension);  this.epsilon  =  epsilon;  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(dimension);  this.epsilon  =  epsilon;		non-compiled	[CE]  <identifier>  expected	16	None	add
364	[BUG]  [BUGGY]    super(Dimension);  this.epsilon  =  epsilon;  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(Dimension);  this.epsilon  =  epsilon;  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(Dimension);  this.epsilon  =  epsilon;		non-compiled	[CE]  <identifier>  expected	16	None	add
365	[BUG]  [BUGGY]    super(Dimension,  epsilon);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(Dimension,  epsilon);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(Dimension,  epsilon);		non-compiled	[CE]  <identifier>  expected	16	None	add
381	[BUG]  [BUGGY]    double  epsilon  =  v.getEpsilon();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    double  epsilon  =  v.getEpsilon();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    double  epsilon  =  v.getEpsilon();		non-compiled	[CE]  <identifier>  expected	4	None	add
382	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getInt());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    checkIntToDoubleHashMap(v.getInt());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    checkIntToDoubleHashMap(v.getInt());		non-compiled	[CE]  <identifier>  expected	4	None	add
383	[BUG]  [BUGGY]    checkIntToDoubleHashMapEntry(v.getEntry());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    checkIntToDoubleHashMapEntry(v.getEntry());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    checkIntToDoubleHashMapEntry(v.getEntry());		non-compiled	[CE]  <identifier>  expected	4	None	add
384	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    checkIntToDoubleHashMap(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    checkIntToDoubleHashMap(v.getDimension());		non-compiled	[CE]  <identifier>  expected	4	None	add
385	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getEntry());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    checkIntToDoubleHashMap(v.getEntry());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    checkIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  <identifier>  expected	4	None	add
1	[BUG]  [BUGGY]    entries.put(new  Integer(dimension));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    entries.put(new  Integer(dimension));  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    entries.put(new  Integer(dimension));		non-compiled	[CE]  <identifier>  expected	20	None	add
2	[BUG]  [BUGGY]    this.iter  =  entries.iterator().next();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iter  =  entries.iterator().next();  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iter  =  entries.iterator().next();		non-compiled	[CE]  <identifier>  expected	20	None	add
3	[BUG]  [BUGGY]    this.iterator  =  entries.iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    this.iterator  =  entries.iterator();  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    this.iterator  =  entries.iterator();		non-compiled	[CE]  <identifier>  expected	20	None	add
4	[BUG]  [BUGGY]    entries.put(new  Integer(imaginarySize));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]    entries.put(new  Integer(imaginarySize));  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	    entries.put(new  Integer(imaginarySize));		non-compiled	[CE]  <identifier>  expected	20	None	add
33	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInclusion(v.getValue()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInclusion(v.getValue()));  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInclusion(v.getValue()));	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInsets(v.getEntry()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInsets(v.getEntry()));  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInsets(v.getEntry()));	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  <identifier>  expected	3	None	replace
62	[BUG]  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(dimension,  epsilon);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(dimension,  epsilon);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.iter  =  new  OpenIntToDoubleHashMap(dimension,  epsilon);		non-compiled	[CE]  <identifier>  expected	18	None	add
63	[BUG]  [BUGGY]    epsilon  =  Math.max(dimension,  epsilon);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    epsilon  =  Math.max(dimension,  epsilon);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    epsilon  =  Math.max(dimension,  epsilon);		non-compiled	[CE]  <identifier>  expected	18	None	add
64	[BUG]  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.iter  =  new  OpenIntToDoubleHashMap();		non-compiled	[CE]  <identifier>  expected	18	None	add
65	[BUG]  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(dimension,  Double.MAX_VALUE);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]    this.iter  =  new  OpenIntToDoubleHashMap(dimension,  Double.MAX_VALUE);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	    this.iter  =  new  OpenIntToDoubleHashMap(dimension,  Double.MAX_VALUE);		non-compiled	[CE]  <identifier>  expected	18	None	add
91	[BUG]  [BUGGY]    res.setIterator(iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setIterator(iter.next());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setIterator(iter.next());		non-compiled	[CE]  <identifier>  expected	12	None	add
94	[BUG]  [BUGGY]    res.setIterator(new  OpenIntToDoubleHashMap());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setIterator(new  OpenIntToDoubleHashMap());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setIterator(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  <identifier>  expected	12	None	add
95	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));		non-compiled	[CE]  <identifier>  expected	12	None	add
122	[BUG]  [BUGGY]    v.setDimension(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    v.setDimension(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    v.setDimension(v.getDimension());		non-compiled	[CE]  <identifier>  expected	4	None	add
123	[BUG]  [BUGGY]    v.setDimensions(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    v.setDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    v.setDimensions(v.getDimension());		non-compiled	[CE]  <identifier>  expected	4	None	add
124	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getDimensions());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    checkIntToDoubleHashMap(v.getDimensions());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    checkIntToDoubleHashMap(v.getDimensions());		non-compiled	[CE]  <identifier>  expected	4	None	add
125	[BUG]  [BUGGY]    v.setIndex(v.getIndex());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    v.setIndex(v.getIndex());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    v.setIndex(v.getIndex());		non-compiled	[CE]  <identifier>  expected	4	None	add
152	[BUG]  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  iter.addChildToBack  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  iter.addChildToBack  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  iter.addChildToBack	iter.advance();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
153	[BUG]  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  iter.addChildToFront(entry.get  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  iter.addChildToFront(entry.get  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  iter.addChildToFront(entry.get	iter.advance();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
154	[BUG]  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  iter.addChildToBack  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  iter.addChildToBack  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  iter.addChildToBack	iter.advance();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
183	[BUG]  [BUGGY]  final  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [CE]  ';'  expected  [CONTEXT]    [BUGGY]  final  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	final  public  OpenMapRealVector(int  dimension,  double  epsilon)  {	public  OpenMapRealVector(int  dimension,  double  epsilon)  {  	non-compiled	[CE]  ';'  expected	13	None	replace
212	[BUG]  [BUGGY]  checkDimensions(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkDimensions(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	1	None	replace
213	[BUG]  [BUGGY]  checkState(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkState(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkState(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	1	None	replace
214	[BUG]  [BUGGY]  checkDeserialization(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkDeserialization(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	checkDeserialization(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	1	None	replace
243	[BUG]  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(2.0);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(2.0);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	entries  =  new  OpenIntToDoubleHashMap(2.0);	entries  =  new  OpenIntToDoubleHashMap(0.0);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
244	[BUG]  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0,  0.0);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0,  0.0);  [BUGGY]  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	entries  =  new  OpenIntToDoubleHashMap(0.0,  0.0);	entries  =  new  OpenIntToDoubleHashMap(0.0);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
272	[BUG]  [BUGGY]    this(Dimension.ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    this(Dimension.ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    this(Dimension.ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  <identifier>  expected	16	None	add
273	[BUG]  [BUGGY]    super(Dimension.MODE_EXPECTED,  epsilon);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(Dimension.MODE_EXPECTED,  epsilon);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(Dimension.MODE_EXPECTED,  epsilon);		non-compiled	[CE]  <identifier>  expected	16	None	add
274	[BUG]  [BUGGY]    super(Dimension.MODE_EXPECTED,  Dimension.MILLIS_PER_SECOND);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(Dimension.MODE_EXPECTED,  Dimension.MILLIS_PER_SECOND);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(Dimension.MODE_EXPECTED,  Dimension.MILLIS_PER_SECOND);		non-compiled	[CE]  <identifier>  expected	16	None	add
275	[BUG]  [BUGGY]    super(Dimension.MODE_EXPECTED,  Dimension.MILLIS_PER_MINUTE);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]    super(Dimension.MODE_EXPECTED,  Dimension.MILLIS_PER_MINUTE);  [BUGGY]  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	    super(Dimension.MODE_EXPECTED,  Dimension.MILLIS_PER_MINUTE);		non-compiled	[CE]  <identifier>  expected	16	None	add
304	[BUG]  [BUGGY]  this.epsilon  =  epsilon  +  1;  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  [BUGGY]  this.epsilon  =  epsilon  +  1;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	this.epsilon  =  epsilon  +  1;	this.epsilon  =  epsilon;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
362	[BUG]  [BUGGY]    checkSize(v.getSize());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkSize(v.getSize());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkSize(v.getSize());		non-compiled	[CE]  <identifier>  expected	2	None	add
363	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getKey());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMap(v.getKey());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMap(v.getKey());		non-compiled	[CE]  <identifier>  expected	2	None	add
364	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getEntry());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMap(v.getEntry());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  <identifier>  expected	2	None	add
365	[BUG]  [BUGGY]    checkIntToDoubleHashMap(v.getOpenInt());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    checkIntToDoubleHashMap(v.getOpenInt());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	    checkIntToDoubleHashMap(v.getOpenInt());		non-compiled	[CE]  <identifier>  expected	2	None	add
392	[BUG]  [BUGGY]  while(iter.hasNext()  &&!v.isPrimitive())  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.hasNext()  &&!v.isPrimitive())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.hasNext()  &&!v.isPrimitive())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
393	[BUG]  [BUGGY]  while(iter.hasNext()  &&!v.isEmpty())  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.hasNext()  &&!v.isEmpty())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.hasNext()  &&!v.isEmpty())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
394	[BUG]  [BUGGY]  while(iter.hasNext()  &&  iter.next()  ==  null)  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]  while(iter.hasNext()  &&  iter.next()  ==  null)  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	while(iter.hasNext()  &&  iter.next()  ==  null)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
423	[BUG]  [BUGGY]  virtualSize  =  dimension  *  epsilon;  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  *  epsilon;  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  *  epsilon;	virtualSize  =  dimension;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
424	[BUG]  [BUGGY]  virtualSize  =  dimension  *  Math.sqrt(DEFAULT_ZERO_TOLERANCE);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  [BUGGY]  virtualSize  =  dimension  *  Math.sqrt(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	virtualSize  =  dimension  *  Math.sqrt(DEFAULT_ZERO_TOLERANCE);	virtualSize  =  dimension;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
451	[BUG]  [BUGGY]    res.setIterator(iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setIterator(iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    res.setIterator(iter.next());		non-compiled	[CE]  <identifier>  expected	10	None	add
452	[BUG]  [BUGGY]    res.setNext(iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setNext(iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    res.setNext(iter.next());		non-compiled	[CE]  <identifier>  expected	10	None	add
453	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  Integer(v.value()),  new  Integer(v.size()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    iter.next();  res.setEntry(new  Integer(v.value()),  new  Integer(v.size()));  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    iter.next();  res.setEntry(new  Integer(v.value()),  new  Integer(v.size()));		non-compiled	[CE]  <identifier>  expected	10	None	add
454	[BUG]  [BUGGY]    iter.next();  res.entrySet  =  new  OpenIntToDoubleHashMap(v.getValue());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    iter.next();  res.entrySet  =  new  OpenIntToDoubleHashMap(v.getValue());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    iter.next();  res.entrySet  =  new  OpenIntToDoubleHashMap(v.getValue());		non-compiled	[CE]  <identifier>  expected	10	None	add
455	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getEntryCount()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getEntryCount()));  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getEntryCount()));		non-compiled	[CE]  <identifier>  expected	10	None	add
482	[BUG]  [BUGGY]    res.entrySet  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entrySet  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entrySet  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  <identifier>  expected	6	None	add
483	[BUG]  [BUGGY]    res.entries.put(v,  new  OpenIntToDoubleHashMap(v.getEntryCount()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entries.put(v,  new  OpenIntToDoubleHashMap(v.getEntryCount()));  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entries.put(v,  new  OpenIntToDoubleHashMap(v.getEntryCount()));		non-compiled	[CE]  <identifier>  expected	6	None	add
484	[BUG]  [BUGGY]    res.entrySet  =  new  OpenIntToDoubleHashMap();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entrySet  =  new  OpenIntToDoubleHashMap();  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entrySet  =  new  OpenIntToDoubleHashMap();		non-compiled	[CE]  <identifier>  expected	6	None	add
485	[BUG]  [BUGGY]    res.entries.put(new  OpenIntToDoubleHashMap(v.getEntry()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    res.entries.put(new  OpenIntToDoubleHashMap(v.getEntry()));  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	    res.entries.put(new  OpenIntToDoubleHashMap(v.getEntry()));		non-compiled	[CE]  <identifier>  expected	6	None	add
511	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.key()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.key()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	11	None	replace
512	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.value()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.value()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.value()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	11	None	replace
513	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  the  size  of  v.getEntry(iter.key()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  the  size  of  v.getEntry(iter.key()));  [BUGGY]  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	res.setEntry(iter.key(),  iter.value()  *  the  size  of  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	11	None	replace
541	[BUG]  [BUGGY]    Iterator  <  OpenMapRealVector>  iter  =  v.iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    Iterator  <  OpenMapRealVector>  iter  =  v.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    Iterator  <  OpenMapRealVector>  iter  =  v.iterator();		non-compiled	[CE]  <identifier>  expected	8	None	add
542	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v.getEntry()));		non-compiled	[CE]  <identifier>  expected	8	None	add
543	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));		non-compiled	[CE]  <identifier>  expected	8	None	add
544	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  <identifier>  expected	8	None	add
545	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v));		non-compiled	[CE]  <identifier>  expected	8	None	add
572	[BUG]  [BUGGY]    this.entry  =  createEntry(DateTimeZone.getDefault(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.entry  =  createEntry(DateTimeZone.getDefault(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    this.entry  =  createEntry(DateTimeZone.getDefault(),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  type	14	None	add
573	[BUG]  [BUGGY]    this.entry  =  createEntry(new  Integer(dimension),  new  Integer(epsilon));  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.entry  =  createEntry(new  Integer(dimension),  new  Integer(epsilon));  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    this.entry  =  createEntry(new  Integer(dimension),  new  Integer(epsilon));		non-compiled	[CE]  illegal  start  of  type	14	None	add
574	[BUG]  [BUGGY]    this.entry  =  createEntry(dimension,  epsilon);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.entry  =  createEntry(dimension,  epsilon);  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    this.entry  =  createEntry(dimension,  epsilon);		non-compiled	[CE]  illegal  start  of  type	14	None	add
575	[BUG]  [BUGGY]    this.entry  =  createEntry(new  Dimension(dimension,  epsilon));  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    this.entry  =  createEntry(new  Dimension(dimension,  epsilon));  [BUGGY]  public  OpenMapRealVector(int  dimension,  double  epsilon)  {  virtualSize  =  dimension;  entries  =  new  OpenIntToDoubleHashMap(0.0);  this.epsilon  =  epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector(int,double)  int  dimension  double  epsilon  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  Iterator  iter  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	    this.entry  =  createEntry(new  Dimension(dimension,  epsilon));		non-compiled	[CE]  illegal  start  of  type	14	None	add
