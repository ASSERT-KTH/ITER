bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] checkVectorDimensions(v.getDimension()); [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	replace	
2	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] [BUGGY] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	368	368	1	add	
3	[BUG] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	
4	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	add	
5	[BUG] [BUGGY] Iterator iter = res.entries.iterator(); [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = res.entries.iterator(); [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	replace	
6	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] [BUGGY] Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	370	370	1	add	
7	[BUG] [BUGGY] while (iter.hasNext()) { [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); [BUGGY] while (iter.hasNext()) { [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	replace	
8	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); [BUGGY] [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	371	371	1	add	
9	[BUG] [BUGGY] iter.advance(); [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { [BUGGY] iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	replace	
10	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { [BUGGY] [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	372	372	1	add	
11	[BUG] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [BUGGY] } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	replace	
12	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = res.entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	373	373	1	add	
13	[BUG] [BUGGY] public OpenMapRealVector(int dimension, double epsilon) { [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] [BUGGY] public OpenMapRealVector(int dimension, double epsilon) { [BUGGY] virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	replace	
14	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] [BUGGY] [BUGGY] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	74	74	1	add	
15	[BUG] [BUGGY] virtualSize = dimension; [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { [BUGGY] virtualSize = dimension; [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	replace	
16	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { [BUGGY] [BUGGY] virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	75	75	1	add	
17	[BUG] [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	replace	
18	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; [BUGGY] [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	76	76	1	add	
19	[BUG] [BUGGY] this.epsilon = epsilon; [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] this.epsilon = epsilon; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	replace	
20	[BUG] [BUGGY] [FE] MathRuntimeException$6 testConcurrentModification [CONTEXT] public OpenMapRealVector(int dimension, double epsilon) { virtualSize = dimension; entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] [BUGGY] this.epsilon = epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(int,double)  int dimension double epsilon [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	77	77	1	add	
