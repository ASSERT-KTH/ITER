bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(entries.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]  }  else  if(entries.containsKey(value))  {  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(value))  {	}  else  if  (entries.containsKey(index))  {  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(index))  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]  }  else  if(!entries.containsKey(index))  {  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(index))  {	}  else  if  (entries.containsKey(index))  {  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  }  else  if(entries.containsKey(key))  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]  }  else  if(entries.containsKey(key))  {  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(key))  {	}  else  if  (entries.containsKey(index))  {  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]  }  else  if(!entries.containsKey(value))  {  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(value))  {	}  else  if  (entries.containsKey(index))  {  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	  	}  else  if  (entries.containsKey(index))  {  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]    entries.put(index,  new  Entry(value));  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    entries.put(index,  new  Entry(value));  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    entries.put(index,  new  Entry(value));		non-compiled	[CE]  illegal  start  of  expression	24	None	add
7	[BUG]  [BUGGY]    entries.put(index,  value);  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    entries.put(index,  value);  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    entries.put(index,  value);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
8	[BUG]  [BUGGY]    this.entries.put(index,  new  Entry(value));  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    this.entries.put(index,  new  Entry(value));  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    this.entries.put(index,  new  Entry(value));		non-compiled	[CE]  illegal  start  of  expression	24	None	add
9	[BUG]  [BUGGY]    entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    entry.setValue(value);  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    entry.setValue(value);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
10	[BUG]  [BUGGY]    iter.remove();  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    iter.remove();  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    iter.remove();		non-compiled	[CE]  illegal  start  of  expression	24	None	add
11	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
12	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
13	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
14	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value);  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value);  }  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
15	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
16	[BUG]  [BUGGY]    entries.put(index,  new  Double(value));  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$6  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]    entries.put(index,  new  Double(value));  [BUGGY]  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	    entries.put(index,  new  Double(value));		non-compiled	[CE]  illegal  start  of  expression	24	None	add
