bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  2);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index  +  2);	  Entry    entry    =(Entry)this.entries.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	2	None	replace
2	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index,  value  +  1);	  Entry    entry    =(Entry)this.entries.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	2	None	replace
3	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	27	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entrySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.entrySet().iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  this.entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	27	None	replace
5	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entry.getValue();	  Entry    entry    =(Entry)this.entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	17	None	replace
6	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entry.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entry.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entry.getKey();	  Entry    entry    =(Entry)this.entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	17	None	replace
7	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entry.clone();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entry.clone();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entry.clone();	  Entry    entry    =(Entry)this.entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	17	None	replace
8	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entry.getValue();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	42	None	replace
9	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryList.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryList.getValue();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	42	None	replace
10	[BUG]  [BUGGY]  Entry  <?>  current  =  this.entry.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <?>  current  =  this.entry.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <?>  current  =  this.entry.getKey();	  Entry    <?>    current    =    entry.getKey();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	25	None	replace
11	[BUG]  [BUGGY]  entry  =(OpenMapEntry)this.entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)this.entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)this.entry.getValue();	  entry    =(OpenMapEntry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	45	None	replace
12	[BUG]  [BUGGY]  entry  =(OpenMapEntry)entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)entry.getValue();	  entry    =(OpenMapEntry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	45	None	replace
13	[BUG]  [BUGGY]  entry  =(OpenMapEntry)this.entries.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)this.entries.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)this.entries.getValue();	  entry    =(OpenMapEntry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	45	None	replace
14	[BUG]  [BUGGY]  entry.put(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry.put(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry.put(index,  DEFAULT_ZERO_TOLERANCE);	  entries.put(value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	7	None	replace
15	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  -  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index,  value  -  1);	  Entry    entry    =(Entry)this.entries.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
16	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index,  DEFAULT_ZERO_TOLERANCE);	  Entry    entry    =(Entry)this.entries.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
17	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  [CE]  ';'  expected  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)current.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)current.getValue();	  Entry    entry    =(Entry)iter.getValue();    	non-compiled	[CE]  ';'  expected	38	None	replace
18	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1);  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryList.get(index  -  1);	  Entry    entry    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  ';'  expected	46	None	replace
19	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  +  1);  [CE]  ';'  expected  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  +  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryList.get(index  +  1);	  Entry    entry    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  ';'  expected	46	None	replace
20	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value);  [CE]  ';'  expected  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryList.get(index,  value);	  Entry    entry    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  ';'  expected	46	None	replace
21	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  +  2);  [CE]  ';'  expected  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  +  2);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index  +  2);	  Entry    current    =(Entry)this.entryMap.get(index    +    1);    	non-compiled	[CE]  ';'  expected	5	None	replace
22	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  value  +  1);  [CE]  ';'  expected  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  value  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index,  value  +  1);	  Entry    current    =(Entry)this.entryMap.get(index    +    1);    	non-compiled	[CE]  ';'  expected	5	None	replace
23	[BUG]  [BUGGY]  entry.put(index,  new  Double(value));  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry.put(index,  new  Double(value));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry.put(index,  new  Double(value));	  entries.put(index,    new    Double(value),    this);    	non-compiled	[CE]  ';'  expected	22	None	replace
24	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value  /  1));  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Entry(value  /  1));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Entry(value  /  1));	  entries.put(index,    new    Entry(value    -    1));    	non-compiled	[CE]  ';'  expected	44	None	replace
25	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value  -  2));  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Entry(value  -  2));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Entry(value  -  2));	  entries.put(index,    new    Entry(value    -    1));    	non-compiled	[CE]  ';'  expected	44	None	replace
26	[BUG]  [BUGGY]  Entry  <?>  current  =  this.entries.getValue();  [CE]  ';'  expected  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <?>  current  =  this.entries.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <?>  current  =  this.entries.getValue();	  Entry    <?>    current    =    entries.getValue();    	non-compiled	[CE]  ';'  expected	39	None	replace
27	[BUG]  [BUGGY]  Entry  <?>  current  =  entries.getValue(index);  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <?>  current  =  entries.getValue(index);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <?>  current  =  entries.getValue(index);	  Entry    <?>    current    =    entries.getValue();    	non-compiled	[CE]  ';'  expected	39	None	replace
28	[BUG]  [BUGGY]  Entry  <?>  current  =  this.entrySet.getValue();  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <?>  current  =  this.entrySet.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <?>  current  =  this.entrySet.getValue();	  Entry    <?>    current    =    entries.getValue();    	non-compiled	[CE]  ';'  expected	39	None	replace
29	[BUG]  [BUGGY]  Entry  <?>  current  =  entry.getKey()  +  1;  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <?>  current  =  entry.getKey()  +  1;  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <?>  current  =  entry.getKey()  +  1;	  Entry    <?>    current    =    entry.getValue()    +    1;    	non-compiled	[CE]  ';'  expected	26	None	replace
30	[BUG]  [BUGGY]  Entry  <?>  current  =  this.entry.getValue()  +  1;  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <?>  current  =  this.entry.getValue()  +  1;  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <?>  current  =  this.entry.getValue()  +  1;	  Entry    <?>    current    =    entry.getValue()    +    1;    	non-compiled	[CE]  ';'  expected	26	None	replace
31	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter1.next();  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)iter1.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)iter1.next();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  ';'  expected	16	None	replace
32	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter3.next();  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)iter3.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)iter3.next();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  ';'  expected	16	None	replace
33	[BUG]  [BUGGY]  Entry  entry  =(OpenMapEntry)entry.next();  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(OpenMapEntry)entry.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(OpenMapEntry)entry.next();	  Entry    entry    =(OpenMapEntry)iter.next();    	non-compiled	[CE]  ';'  expected	34	None	replace
34	[BUG]  [BUGGY]  Entry  entry  =(OpenMapEntry)iter2.next();  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(OpenMapEntry)iter2.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(OpenMapEntry)iter2.next();	  Entry    entry    =(OpenMapEntry)iter.next();    	non-compiled	[CE]  ';'  expected	34	None	replace
35	[BUG]  [BUGGY]  Entry  entry  =(OpenMapEntry)this.entryList.get(index);  [CE]  ';'  expected  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(OpenMapEntry)this.entryList.get(index);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(OpenMapEntry)this.entryList.get(index);	  Entry    entry    =(OpenMapEntry)iter.next();    	non-compiled	[CE]  ';'  expected	34	None	replace
36	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  1);  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)entries.get(index  -  1);	  Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  ';'  expected	18	None	replace
37	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  1);  [CE]  ';'  expected  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)entries.get(index  +  1);	  Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  ';'  expected	18	None	replace
38	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  -  2);  [CE]  ';'  expected  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  -  2);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index  -  2);	  Entry    current    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  -  1,  value);  [CE]  ';'  expected  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  -  1,  value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index  -  1,  value);	  Entry    current    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
40	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [CE]  ';'  expected  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  entries.entrySet().iterator();	  Iterator    <    Entry>    iter    =    entries.values().iterator();    	non-compiled	[CE]  ';'  expected	47	None	replace
41	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  entries.keySet().iterator();	  Iterator    <    Entry>    iter    =    entries.values().iterator();    	non-compiled	[CE]  ';'  expected	47	None	replace
42	[BUG]  [BUGGY]  entry  =(Entry)this.entry.next();  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)this.entry.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)this.entry.next();	  entry    =(Entry)entry.next();    	non-compiled	[CE]  ';'  expected	32	None	replace
43	[BUG]  [BUGGY]  entry  =(Entry)entry.getValue();  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)entry.getValue();	  entry    =(Entry)entry.next();    	non-compiled	[CE]  ';'  expected	32	None	replace
44	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.iterator();  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <  K,  V>  entry  =  this.entries.iterator();	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	20	None	replace
45	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.entrySet();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.entrySet();  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <  K,  V>  entry  =  entries.entrySet();	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	20	None	replace
46	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                          MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <  K,  V>  entry  =  entries.get(index);	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	20	None	replace
47	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value),  current);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Entry(value),  current);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Entry(value),  current);	  entries.put(index,    new    Entry(value),    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	11	None	replace
48	[BUG]  [BUGGY]  entry.put(index,  new  Entry(value));  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry.put(index,  new  Entry(value));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry.put(index,  new  Entry(value));	  entries.put(index,    new    Entry(value),    this);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	10	None	replace
49	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.get(index  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryList.get(index  -  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryList.get(index  -  1);	  Entry    current    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	14	None	replace
50	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.get(index  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryList.get(index  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryList.get(index  +  1);	  Entry    current    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	14	None	replace
51	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.get(index,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryList.get(index,  value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryList.get(index,  value);	  Entry    current    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	14	None	replace
52	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entry.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entry.getKey();	  Entry    current    =(Entry)this.entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	50	None	replace
53	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.clone();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entry.clone();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entry.clone();	  Entry    current    =(Entry)this.entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	50	None	replace
54	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  2);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  -  2);	  Entry    entry    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	29	None	replace
55	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1,  value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  -  1,  value);	  Entry    entry    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	29	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.keySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.keySet().iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  this.entries.keySet().iterator();	  Iterator    <    Entry>    iter    =    this.entries.values().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	40	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.entrySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.entrySet().iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  this.entries.entrySet().iterator();	  Iterator    <    Entry>    iter    =    this.entries.values().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	40	None	replace
58	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entryIterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entryIterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  this.current.entryIterator();	  Iterator    <    Entry>    iter    =    current.entryIterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	43	None	replace
59	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  -  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  value  -  1);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	31	None	replace
60	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  value  +  1);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	31	None	replace
61	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                          MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	31	None	replace
62	[BUG]  [BUGGY]  entries.put(index,  new  Double(value),  DEFAULT_ZERO_TOLERANCE  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Double(value),  DEFAULT_ZERO_TOLERANCE  +  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Double(value),  DEFAULT_ZERO_TOLERANCE  +  1);	  entries.put(index,    new    Double(value),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	21	None	replace
63	[BUG]  [BUGGY]  entry  =(OpenMapEntry)iter1.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)iter1.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)iter1.next();	  entry    =(OpenMapEntry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	36	None	replace
64	[BUG]  [BUGGY]  entry  =(OpenMapEntry)iter3.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)iter3.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)iter3.next();	  entry    =(OpenMapEntry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	36	None	replace
65	[BUG]  [BUGGY]  entry  =(Entry)iter1.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)iter1.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)iter1.next();	  entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	33	None	replace
66	[BUG]  [BUGGY]  entry  =(Entry)iter3.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)iter3.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)iter3.next();	  entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	33	None	replace
67	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  value  -  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index,  value  -  1);	  Entry    current    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	6	None	replace
68	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                          MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);	  Entry    current    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	6	None	replace
69	[BUG]  [BUGGY]  entry  =(Entry)this.entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)this.entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)this.entry.getValue();	  entry    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	41	None	replace
70	[BUG]  [BUGGY]  entry.put(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry.put(index,  value  -  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry.put(index,  value  -  1);	  entry.put(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	8	None	replace
71	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entries.iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entries.iterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  this.current.entries.iterator();	  Iterator    <    Entry>    iter    =    current.entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	28	None	replace
72	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  new  OpenIntToDoubleHashMap();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  new  OpenIntToDoubleHashMap();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  new  OpenIntToDoubleHashMap();	  Iterator    <    Entry>    iter    =(this.entries!=    null)?    this.entries.iterator()    :    null;    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	37	None	replace
73	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries  ==  null)?  this.entries.iterator()  :  null;  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries  ==  null)?  this.entries.iterator()  :  null;  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =(this.entries  ==  null)?  this.entries.iterator()  :  null;	  Iterator    <    Entry>    iter    =(this.entries!=    null)?    this.entries.iterator()    :    null;    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	37	None	replace
74	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  Collections.emptyIterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  Collections.emptyIterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  Collections.emptyIterator();	  Iterator    <    Entry>    iter    =(this.entries!=    null)?    this.entries.iterator()    :    null;    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	37	None	replace
75	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)entry.getValue();	  Entry    current    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	12	None	replace
76	[BUG]  [BUGGY]  entries.put(index,  new  Double(value),  this.value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Double(value),  this.value);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Double(value),  this.value);	  entries.put(index,    new    Double(value),    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	23	None	replace
77	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entries.get(index  -  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entries.get(index  -  1);	  Entry    current    =(Entry)this.entries.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	19	None	replace
78	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entries.get(index  +  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entries.get(index  +  1);	  Entry    current    =(Entry)this.entries.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	19	None	replace
79	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entries.get(index,  value);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entries.get(index,  value);	  Entry    current    =(Entry)this.entries.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	19	None	replace
80	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)entry.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)entry.getValue();	  Entry    entry    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	15	None	replace
81	[BUG]  [BUGGY]  Entry  current  =(Entry)iter1.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)iter1.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)iter1.next();	  Entry    current    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	13	None	replace
82	[BUG]  [BUGGY]  Entry  current  =(Entry)iter3.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)iter3.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)iter3.next();	  Entry    current    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	13	None	replace
83	[BUG]  [BUGGY]  entries.put(index,  new  Double(value  /  1));  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Double(value  /  1));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Double(value  /  1));	  entries.put(index,    new    Double(value    -    1));    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	49	None	replace
84	[BUG]  [BUGGY]  entries.put(index,  new  Double(value  -  2));  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Double(value  -  2));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Double(value  -  2));	  entries.put(index,    new    Double(value    -    1));    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	49	None	replace
85	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  2);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index  -  2);	  Entry    entry    =(Entry)this.entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
86	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  1  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  1  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index  -  1  +  1);	  Entry    entry    =(Entry)this.entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
87	[BUG]  [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE,  value  -  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  DEFAULT_ZERO_TOLERANCE,  value  -  1);	  entries.put(index,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	48	None	replace
88	[BUG]  [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE,  value  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE,  value  +  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  DEFAULT_ZERO_TOLERANCE,  value  +  1);	  entries.put(index,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	48	None	replace
89	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  2);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  +  2);	  Entry    entry    =(Entry)this.entryMap.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	30	None	replace
90	[BUG]  [BUGGY]  entry  =(OpenMapEntry)this.entry.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)this.entry.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)this.entry.next();	  entry    =(OpenMapEntry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	35	None	replace
91	[BUG]  [BUGGY]  entry  =(OpenMapEntry)entry.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)entry.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)entry.getKey();	  entry    =(OpenMapEntry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	35	None	replace
92	[BUG]  [BUGGY]  entry  =(OpenMapEntry)current.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)current.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)current.getValue();	  entry    =(OpenMapEntry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	45	None	replace
93	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE  +  1);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE  +  1);	  entries.put(index,    new    Entry(value),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	9	None	replace
94	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  *  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  *  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entries.get(index  *  1);	  Entry    entry    =(Entry)this.entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
95	[BUG]  [BUGGY]  entry  =(Entry)entry.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)entry.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)entry.getKey();	  entry    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	32	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  Collections.EMPTY_LIST;  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  Collections.EMPTY_LIST;  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  Collections.EMPTY_LIST;	  Iterator    <    Entry>    iter    =(this.entries!=    null)?    this.entries.iterator()    :    null;    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	37	None	replace
97	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  this.value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  this.value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  this.value);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	31	None	replace
98	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  *  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  *  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)this.entryMap.get(index  *  1);	  Entry    current    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	4	None	replace
99	[BUG]  [BUGGY]  entries.put(index,  new  Double(value)+  1),  DEFAULT_ZERO_TOLERANCE);  [CE]  not  a  statement  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Double(value)+  1),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Double(value)+  1),  DEFAULT_ZERO_TOLERANCE);	  entries.put(index,    new    Double(value),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  not  a  statement	21	None	replace
100	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.values().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.values().iterator();  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  <  K,  V>  entry  =  entries.values().iterator();	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	20	None	replace
101	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1  +  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1  +  value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  -  1  +  value);	  Entry    entry    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	29	None	replace
102	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)iter.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)iter.getKey();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	42	None	replace
103	[BUG]  [BUGGY]  entry  =(Entry)current.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)current.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)current.getValue();	  entry    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	41	None	replace
104	[BUG]  [BUGGY]  entry  =(Entry)iter.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)iter.getKey();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)iter.getKey();	  entry    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	41	None	replace
105	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter2.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)iter2.getValue();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)iter2.getValue();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	16	None	replace
106	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  currentMap.entryIterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  currentMap.entryIterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  currentMap.entryIterator();	  Iterator    <    Entry>    iter    =    current.entryIterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	43	None	replace
107	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entriesIterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  current.entriesIterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  current.entriesIterator();	  Iterator    <    Entry>    iter    =    current.entryIterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	43	None	replace
108	[BUG]  [BUGGY]  Entry  entry  =(OpenMapEntry)current.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(OpenMapEntry)current.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(OpenMapEntry)current.next();	  Entry    entry    =(OpenMapEntry)iter.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	34	None	replace
109	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)entries.get(index);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)entries.get(index);	  Entry    current    =(Entry)this.entryList.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	14	None	replace
110	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Iterator    <    Entry>    iter    =(this.entries!=    null)?    this.entries.iterator()    :    null;    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	37	None	replace
111	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)entries.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)entries.next();	  Entry    current    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	12	None	replace
112	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.remove();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  current  =(Entry)iter.remove();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  current  =(Entry)iter.remove();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	42	None	replace
113	[BUG]  [BUGGY]  entries.put(index,  new  Double(value  -  1),  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Double(value  -  1),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Double(value  -  1),  DEFAULT_ZERO_TOLERANCE);	  entries.put(index,    new    Double(value),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	21	None	replace
114	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value  -  1),  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  new  Entry(value  -  1),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  new  Entry(value  -  1),  DEFAULT_ZERO_TOLERANCE);	  entries.put(index,    new    Entry(value),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	9	None	replace
115	[BUG]  [BUGGY]  entry  =(OpenMapEntry)iterator.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)iterator.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)iterator.next();	  entry    =(OpenMapEntry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	36	None	replace
116	[BUG]  [BUGGY]  entry  =(Entry)iterator.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(Entry)iterator.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(Entry)iterator.next();	  entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	33	None	replace
117	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entry.entryIterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Iterator  <  Entry>  iter  =  entry.entryIterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Iterator  <  Entry>  iter  =  entry.entryIterator();	  Iterator    <    Entry>    iter    =    current.entryIterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	43	None	replace
118	[BUG]  [BUGGY]  entry  =(OpenMapEntry)entry.clone();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)entry.clone();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)entry.clone();	  entry    =(OpenMapEntry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	35	None	replace
119	[BUG]  [BUGGY]  entry  =(OpenMapEntry)iter.getIterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)iter.getIterator();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)iter.getIterator();	  entry    =(OpenMapEntry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	45	None	replace
120	[BUG]  [BUGGY]  entry  =(OpenMapEntry)iter.clone();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entry  =(OpenMapEntry)iter.clone();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entry  =(OpenMapEntry)iter.clone();	  entry    =(OpenMapEntry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	45	None	replace
121	[BUG]  [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE,  new  Double(value));  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE,  new  Double(value));  [BUGGY]      }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	entries.put(index,  DEFAULT_ZERO_TOLERANCE,  new  Double(value));	  entries.put(index,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	48	None	replace
122	[BUG]  [BUGGY]  Entry  entry  =(Entry)iterator.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {      [BUGGY]  Entry  entry  =(Entry)iterator.next();  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	665	665	1	replace	Entry  entry  =(Entry)iterator.next();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	16	None	replace
