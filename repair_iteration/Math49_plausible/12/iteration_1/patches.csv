bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(entries.containsKey(value)||  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(entries.containsKey(value)||  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(value)||  isDefaultValue(value))  {	  }    else    if(entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  }  else  if(entries.containsKey(value)||  entries.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(entries.containsKey(value)||  entries.containsKey(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(value)||  entries.containsKey(value))  {	  }    else    if(entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)iter.next();  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)iter.next();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index);  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)this.entryMap.get(index);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)this.entries.get(index);  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)this.entries.get(index);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.get(index);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)this.entryList.get(index);  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)this.entryList.get(index);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  iter  =  entries.iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  iter  =  entries.iterator();	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  iter  =  entries.iterator();	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  entries  =  this.entries.iterator();	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(key))  {  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsKey(key))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(key))  {	  }    else    if(!entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(value)&&  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsKey(value)&&  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(value)&&  isDefaultValue(value))  {	  }    else    if(!entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(value)||  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsKey(value)||  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(value)||  isDefaultValue(value))  {	  }    else    if(!entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  this.entries.put(index,  new  Entry(value),  current);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entries.put(index,  new  Entry(value),  current);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entries.put(index,  new  Entry(value),  current);	      this.entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  this.entries.put(index,  new  Entry(key));  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entries.put(index,  new  Entry(key));  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entries.put(index,  new  Entry(key));	      this.entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  this.entries.put(index,  new  Entry(value),  true);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entries.put(index,  new  Entry(value),  true);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entries.put(index,  new  Entry(value),  true);	      this.entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  }  else  if(index  <  0  ||!entries.containsKey(index))  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(index  <  0  ||!entries.containsKey(index))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(index  <  0  ||!entries.containsKey(index))  {	  }    else    if(!entries.containsKey(index))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(index)||  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsKey(index)||  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(index)||  isDefaultValue(value))  {	  }    else    if(!entries.containsKey(index))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  DEFAULT_ZERO_TOLERANCE);	      entries.put(index,    value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  entries.put(index,  value  -  1);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  value  -  1);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  value  -  1);	      entries.put(index,    value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  entries  =  current.entrySet().iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  entries  =  current.entrySet().iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  <  K,  V>  entry  =  entries.iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  <  K,  V>  entry  =  entries.iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.next();  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  entry  =(Entry)entry.next();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  entry  =(Entry)entry.next();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.getValue();  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  entry  =(Entry)entry.getValue();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  entry  =(Entry)entry.getValue();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  entries.put(index,  new  Double(value),  this);  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Double(value),  this);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Double(value),  this);	      entries.put(index,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  entries.put(index,  new  Double(value),  value);  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Double(value),  value);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Double(value),  value);	      entries.put(index,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  entries.put(index,  new  Double(value),  true);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Double(value),  true);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Double(value),  true);	      entries.put(index,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)current.getValue();  entry.setValue(current.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)current.getValue();  entry.setValue(current.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getValue());  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE);	      entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value),  this);  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Entry(value),  this);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Entry(value),  this);	      entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value),  value);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Entry(value),  value);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Entry(value),  value);	      entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  entry.setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entry.setValue(value  -  1);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entry.setValue(value  -  1);	      entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  this.entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entry.setValue(value);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entry.setValue(value);	      entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  entry  =(Entry)current.getValue();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  entry  =(Entry)current.getValue();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  }  else  if(entries.containsKey(key)||  entries.containsKey(value))  {  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(entries.containsKey(key)||  entries.containsKey(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(key)||  entries.containsKey(value))  {	  }    else    if(entries.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  }  else  if(entries.containsKey(key)||  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(entries.containsKey(key)||  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(key)||  isDefaultValue(value))  {	  }    else    if(entries.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  entry.setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entry.setValue(value  +  1);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entry.setValue(value  +  1);	      entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  entries.put(index,  new  Double(value),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Double(value),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Double(value),  DEFAULT_ZERO_TOLERANCE);	      entries.put(index,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.set  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.set  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.set	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setVal  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setVal  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setVal	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
48	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  Entry  <?>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  <?>  entry  =  entries.iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  <?>  entry  =  entries.iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  }  else  if(entries.containsKey(value)&&  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(entries.containsKey(value)&&  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(value)&&  isDefaultValue(value))  {	  }    else    if(entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  this.entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entries.put(index,  new  Entry(value),  DEFAULT_ZERO_TOLERANCE);	      this.entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  this.entries.put(index,  new  Entry(DEFAULT_ZERO_TOLERANCE));  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entries.put(index,  new  Entry(DEFAULT_ZERO_TOLERANCE));  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entries.put(index,  new  Entry(DEFAULT_ZERO_TOLERANCE));	      this.entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  }  else  if(entries.containsKey(key)&&  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(entries.containsKey(key)&&  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(entries.containsKey(key)&&  isDefaultValue(value))  {	  }    else    if(entries.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(index)&&  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsKey(index)&&  isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(index)&&  isDefaultValue(value))  {	  }    else    if(!entries.containsKey(index))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  }  else  if(!entries.containsKey(value)&&!isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsKey(value)&&!isDefaultValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsKey(value)&&!isDefaultValue(value))  {	  }    else    if(!entries.containsKey(value))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)entries.get(index);  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)entries.get(index);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  openMaps.iterator();  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Iterator  <  Entry>  iter  =  openMaps.iterator();  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Iterator  <  Entry>  iter  =  openMaps.iterator();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value);  }  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value);  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(value);  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  entries.put(index,  new  Entry(value  -  1));  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Entry(value  -  1));  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Entry(value  -  1));	      entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  iter.setValue(value);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  iter.setValue(value);  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	iter.setValue(value);	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  this.entries.put(index,  new  Entry(value  +  1));  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  this.entries.put(index,  new  Entry(value  +  1));  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	this.entries.put(index,  new  Entry(value  +  1));	      this.entries.put(index,    new    Entry(value));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
69	[BUG]  [BUGGY]  entries.put(index,  new  Double(value  -  1));  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  entries.put(index,  new  Double(value  -  1));  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	entries.put(index,  new  Double(value  -  1));	      entries.put(index,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
71	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  entry  =(Entry)iter.next();  entry.setValue(current.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  entry  =(Entry)iter.next();  entry.setValue(current.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
72	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.next();  entry.setValue(entry.getValue());  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  entry  =(Entry)iter.next();  entry.setValue(entry.getValue());  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  entry  =(Entry)iter.next();  entry.setValue(entry.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  value)  {  return;  }  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(entry.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current);  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	Entry  current  =(Entry)iter.next();  checkIndex(current);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  }  else  if(!entries.containsValue(value))  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  }  else  if(!entries.containsValue(value))  {  [BUGGY]    entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	}  else  if(!entries.containsValue(value))  {	  }    else    if(!entries.containsKey(index))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  entry.setValue(index);  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    entry.setValue(index);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
81	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }  [BUGGY]    }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.5773502691896258	666	666	1	replace	if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  return;  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
