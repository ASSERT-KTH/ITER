bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MathRuntimeException$6  [FE]    MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	add	    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);		compilable	  [FE]  MathRuntimeException$6  	4	1	add
2	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [FE]  MathRuntimeException$6  [FE]    MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);		compilable	  [FE]  MathRuntimeException$6  	4	1	add
3	[BUG]  [BUGGY]  [FE]  MathRuntimeException$6  [FE]      MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	add	    int  dimension  =  v.getDimension();		compilable	  [FE]  MathRuntimeException$6  	4	1	add
4	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  [FE]  MathRuntimeException$6  [FE]      MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    int  dimension  =  v.getDimension();		compilable	  [FE]  MathRuntimeException$6  	4	1	add
5	[BUG]  [BUGGY]    Iterator  <  RealVector>  iter  =  v.getEntrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  iter  =  v.getEntrySet().iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  RealVector>  iter  =  v.getEntrySet().iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	add
6	[BUG]  [BUGGY]    Iterator  <  RealVector>  iter  =  v.getEntryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  iter  =  v.getEntryIterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  RealVector>  iter  =  v.getEntryIterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	add
7	[BUG]  [BUGGY]    Iterator  <  RealVector>  res  =  this.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  res  =  this.entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  RealVector>  res  =  this.entries.iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	add	OpenMapRealVector  res  =  new  OpenMapRealVector(v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	compilable	  [FE]  AssertionError  	3	2	replace
9	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [FE]  AssertionError  [FE]    MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	compilable	  [FE]  AssertionError  	3	2	replace
10	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,RealVector)  [FE]      MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,RealVector)	3	None	replace
11	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(null);  [CE]  reference  to  OpenMapRealVector  is  ambiguous,  both  constructor  OpenMapRealVector(Double[])  in  OpenMapRealVector  and  constructor  OpenMapRealVector(OpenMapRealVector)  in  OpenMapRealVector  match  [FE]        MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(null);  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(null);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  reference  to  OpenMapRealVector  is  ambiguous,  both  constructor  OpenMapRealVector(Double[])  in  OpenMapRealVector  and  constructor  OpenMapRealVector(OpenMapRealVector)  in  OpenMapRealVector  match	3	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector();  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	add	OpenMapRealVector  res  =  new  OpenMapRealVector();	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	compilable	  [FE]  AssertionError  	3	2	replace
13	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector();  [FE]  AssertionError  [FE]          MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector();  [BUGGY]  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	OpenMapRealVector  res  =  new  OpenMapRealVector();	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	compilable	  [FE]  AssertionError  	3	2	replace
14	[BUG]  [BUGGY]    RealVector  res  =  new  RealVector(this);  [CE]  RealVector  is  abstract;  cannot  be  instantiated  [FE]    MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    RealVector  res  =  new  RealVector(this);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    RealVector  res  =  new  RealVector(this);		non-compiled	[CE]  RealVector  is  abstract;  cannot  be  instantiated	4	None	add
15	[BUG]  [BUGGY]    Iterator  <  RealVector>  iter  =  v.getEntries().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]      MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  iter  =  v.getEntries().iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  RealVector>  iter  =  v.getEntries().iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	add
16	[BUG]  [BUGGY]    Iterator  iter  =  this.entries.iterator();  [CE]  variable  iter  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]    MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  iter  =  this.entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  iter  =  this.entries.iterator();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  ebeMultiply(RealVector)	4	None	add
17	[BUG]  [BUGGY]    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.getEntrySet().iterator();  [CE]  >  expected  [FE]      MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.getEntrySet().iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.getEntrySet().iterator();		non-compiled	[CE]  >  expected	4	None	add
18	[BUG]  [BUGGY]    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.entrySet().iterator();  [CE]  >  expected  [FE]        MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.entrySet().iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.entrySet().iterator();		non-compiled	[CE]  >  expected	4	None	add
19	[BUG]  [BUGGY]    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.getEntryIterator();  [CE]  >  expected  [FE]          MathRuntimeException$6  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.getEntryIterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  res.entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	369	369	1	replace	    Iterator  <  Map.Entry  <  String,  RealVector>  iter  =  v.getEntryIterator();		non-compiled	[CE]  >  expected	4	None	add
