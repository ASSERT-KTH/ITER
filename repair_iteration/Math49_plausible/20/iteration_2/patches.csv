bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(value  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  =  0)  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  0)  {	  if(value    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
2	[BUG]  [BUGGY]  if(value  >  0)  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >  0)  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  0)  {	  if(value    ==    0)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
3	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  +  2);	  Entry    entry    =(Entry)this.entries.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	2	None	replace
4	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  -  2);	  Entry    entry    =(Entry)this.entryList.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	4	None	replace
5	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1  +  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  -  1  +  1);	  Entry    entry    =(Entry)this.entryList.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	4	None	replace
6	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  +  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  +  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  +  2);	  Entry    entry    =(Entry)this.entryList.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	5	None	replace
7	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value  +  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index,  value  +  1);	  Entry    entry    =(Entry)this.entryList.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	5	None	replace
8	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entry.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entry.getValue();	  Entry    entry    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	33	None	replace
9	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)current.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)current.getValue();	  Entry    entry    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	33	None	replace
10	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  value  -  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index,  value  -  1);	  Entry    entry    =(Entry)this.entryList.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	6	None	replace
11	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  this.value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                          MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  this.value);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index,  this.value);	  Entry    entry    =(Entry)this.entryList.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	6	None	replace
12	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entries.get(index  -  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entries.get(index  -  1);	  Entry    current    =(Entry)this.entries.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	9	None	replace
13	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entries.get(index  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entries.get(index  +  1);	  Entry    current    =(Entry)this.entries.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	9	None	replace
14	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.get(index,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entries.get(index,  value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entries.get(index,  value);	  Entry    current    =(Entry)this.entries.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	9	None	replace
15	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  -  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entryMap.get(index  -  1);	  Entry    current    =(Entry)this.entryMap.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	10	None	replace
16	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index  +  1);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entryMap.get(index  +  1);	  Entry    current    =(Entry)this.entryMap.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	10	None	replace
17	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entryMap.get(index,  value);  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entryMap.get(index,  value);	  Entry    current    =(Entry)this.entryMap.get(index);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	10	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entries.iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entries.iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  this.current.entries.iterator();	  Iterator    <    Entry>    iter    =    current.entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	36	None	replace
19	[BUG]  [BUGGY]  if  (value  <  0  ||!isGlobal(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if  (value  <  0  ||!isGlobal(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value  <  0  ||!isGlobal(value))  {	  if    (value    <    0    ||!isLocal(value))    {    	non-compiled	[CE]  ';'  expected	8	None	replace
20	[BUG]  [BUGGY]  if  (value  <  0  ||!isLocal(index))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if  (value  <  0  ||!isLocal(index))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value  <  0  ||!isLocal(index))  {	  if    (value    <    0    ||!isLocal(value))    {    	non-compiled	[CE]  ';'  expected	8	None	replace
21	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {	  if(value    >=    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	37	None	replace
22	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entry.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entry.next();	  Entry    current    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	18	None	replace
23	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)entry.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)entry.getValue();	  Entry    current    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	18	None	replace
24	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||  isDefaultValue(value))  {  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||  isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||  isDefaultValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
25	[BUG]  [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	43	None	replace
26	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
27	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
28	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [CE]  ';'  expected  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
29	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)entries.get(index);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)entries.get(index);	  Entry    current    =(Entry)iter.remove();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	40	None	replace
30	[BUG]  [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE  &&!isDefaultValue(value))  {	  if(value    >    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	44	None	replace
31	[BUG]  [BUGGY]  if(value  >  0  &&!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >  0  &&!isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  0  &&!isDefaultValue(value))  {	  if(value    >    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	44	None	replace
32	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	23	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entryHashMap().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  current.entryHashMap().iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  current.entryHashMap().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	23	None	replace
34	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {	  if(value    >=    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	39	None	replace
35	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  entries.entrySet().iterator();	  Iterator    <    Entry>    iter    =    entries.values().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	24	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  entries.keySet().iterator();	  Iterator    <    Entry>    iter    =    entries.values().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	24	None	replace
37	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entries.get(index  -  2);	  Entry    entry    =(Entry)entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	20	None	replace
38	[BUG]  [BUGGY]  Entry  current  =(Entry)iter1.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)iter1.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter1.next();	  Entry    current    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	32	None	replace
39	[BUG]  [BUGGY]  Entry  current  =(Entry)iter3.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)iter3.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter3.next();	  Entry    current    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	32	None	replace
40	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  -  2);	  Entry    entry    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	15	None	replace
41	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  -  1,  value);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  -  1,  value);	  Entry    entry    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	15	None	replace
42	[BUG]  [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  DEFAULT_ZERO_TOLERANCE  ||!isDefaultValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	38	None	replace
43	[BUG]  [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	38	None	replace
44	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isDoubleValue(value))  {  [CE]  ';'  expected  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isDoubleValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isDoubleValue(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE    &&!isLongValue(value))    {    	non-compiled	[CE]  ';'  expected	27	None	replace
45	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  ||!isLongValue(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  ||!isLongValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  ||!isLongValue(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE    &&!isLongValue(value))    {    	non-compiled	[CE]  ';'  expected	27	None	replace
46	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isEmpty(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isEmpty(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isEmpty(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE    &&!isLongValue(value))    {    	non-compiled	[CE]  ';'  expected	27	None	replace
47	[BUG]  [BUGGY]  if  (!isDefaultValue(index)&&!isEmpty(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if  (!isDefaultValue(index)&&!isEmpty(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (!isDefaultValue(index)&&!isEmpty(value))  {	  if    (!isDefaultValue(index)||!isEmpty(value))    {    	non-compiled	[CE]  ';'  expected	12	None	replace
48	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)this.entry.getValue();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	31	None	replace
49	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {	  if    (value!=    DEFAULT_ZERO_TOLERANCE    &&!isLocal(value))    {    	non-compiled	[CE]  ';'  expected	28	None	replace
50	[BUG]  [BUGGY]  if  (value!=  DEFAULT_ZERO_TOLERANCE  ||!isLocal(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if  (value!=  DEFAULT_ZERO_TOLERANCE  ||!isLocal(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value!=  DEFAULT_ZERO_TOLERANCE  ||!isLocal(value))  {	  if    (value!=    DEFAULT_ZERO_TOLERANCE    &&!isLocal(value))    {    	non-compiled	[CE]  ';'  expected	28	None	replace
51	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  null;  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  null;  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  null;	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	22	None	replace
52	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  -  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  value  -  1);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	17	None	replace
53	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                      MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  value  +  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  value  +  1);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	17	None	replace
54	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  1,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  1,  value);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  +  1,  value);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	17	None	replace
55	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  +  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  +  2);	  Entry    entry    =(Entry)this.entryMap.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	16	None	replace
56	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter1.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)iter1.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter1.next();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	30	None	replace
57	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter3.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)iter3.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter3.next();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	30	None	replace
58	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isEmptyValue(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isEmptyValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isEmptyValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    &&!isEmptyValue(value))    {    	non-compiled	[CE]  ';'  expected	26	None	replace
59	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    &&!isEmptyValue(value))    {    	non-compiled	[CE]  ';'  expected	26	None	replace
60	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    &&!isEmptyValue(value))    {    	non-compiled	[CE]  ';'  expected	26	None	replace
61	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entries.get(index  +  2);	  Entry    entry    =(Entry)entries.get(index    +    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	21	None	replace
62	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  2);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  2);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  -  2);	  Entry    entry    =(Entry)this.entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
63	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  1  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  -  1  +  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  -  1  +  1);	  Entry    entry    =(Entry)this.entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
64	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entry.next();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entry.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entry.next();	  Entry    entry    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	29	None	replace
65	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)entry.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entry.getValue();	  Entry    entry    =(Entry)entry.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	29	None	replace
66	[BUG]  [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE)  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE)  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
67	[BUG]  [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE)  {  [CE]  not  a  statement  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  DEFAULT_ZERO_TOLERANCE)  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
68	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||  value  >  DEFAULT_ZERO_TOLERANCE)  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  -  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  -  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index,  value  -  1);	  Entry    entry    =(Entry)this.entries.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
70	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  +  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  value  +  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index,  value  +  1);	  Entry    entry    =(Entry)this.entries.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
71	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  1,  value);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  +  1,  value);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  +  1,  value);	  Entry    entry    =(Entry)this.entries.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
72	[BUG]  [BUGGY]  if  (value  <  0  ||!isDefaultValue(index)||!isEmpty(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if  (value  <  0  ||!isDefaultValue(index)||!isEmpty(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value  <  0  ||!isDefaultValue(index)||!isEmpty(value))  {	  if    (!isDefaultValue(index)||!isEmpty(value))    {    	non-compiled	[CE]  ';'  expected	12	None	replace
73	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.values().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.values().iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  this.entries.values().iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	22	None	replace
74	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  *  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)entries.get(index  *  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)entries.get(index  *  1);	  Entry    entry    =(Entry)entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	20	None	replace
75	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  *  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  *  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  *  1);	  Entry    entry    =(Entry)this.entryList.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	4	None	replace
76	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)iter.getKey();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter.getKey();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	31	None	replace
77	[BUG]  [BUGGY]  if(value  >  epsilon  &&!isDefaultValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >  epsilon  &&!isDefaultValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  epsilon  &&!isDefaultValue(value))  {	  if(value    >    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  ';'  expected	44	None	replace
78	[BUG]  [BUGGY]  Entry  current  =(Entry)iter2.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)iter2.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter2.getValue();	  Entry    current    =(Entry)iter2.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	32	None	replace
79	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isLocalValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
80	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index,  DEFAULT_ZERO_TOLERANCE);	  Entry    entry    =(Entry)this.entries.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	3	None	replace
81	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  *  1);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index  *  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entries.get(index  *  1);	  Entry    entry    =(Entry)this.entries.get(index    -    1);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	1	None	replace
82	[BUG]  [BUGGY]  entry  =(Entry)iter.getValue();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  entry  =(Entry)iter.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	entry  =(Entry)iter.getValue();	  entry    =(Entry)iter.next();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	19	None	replace
83	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1,  value);  [CE]  not  a  statement  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index  -  1,  value);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index  -  1,  value);	  Entry    entry    =(Entry)this.entryList.get(index,    value);    	non-compiled	[CE]  not  a  statement	6	None	replace
84	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter2.getValue();  [CE]  not  a  statement  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)iter2.getValue();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter2.getValue();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  not  a  statement	30	None	replace
85	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  *  1);  [CE]  not  a  statement  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index  *  1);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index  *  1);	  Entry    entry    =(Entry)this.entryMap.get(index    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
86	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.getKey();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)iter.getKey();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter.getKey();	  Entry    entry    =(Entry)iter.getValue();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	33	None	replace
87	[BUG]  [BUGGY]  if  (value  <  0  ||!isDefaultValue(value)&&!isEmpty(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if  (value  <  0  ||!isDefaultValue(value)&&!isEmpty(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if  (value  <  0  ||!isDefaultValue(value)&&!isEmpty(value))  {	  if    (!isDefaultValue(value)&&!isEmpty(value))    {    	non-compiled	[CE]  ';'  expected	11	None	replace
88	[BUG]  [BUGGY]  if(value!=  0)  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value!=  0)  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value!=  0)  {	  if(value    ==    0)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
89	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isGlobalValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isGlobalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  ||!isGlobalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
90	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [CE]  ';'  expected  [FE]                  MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
91	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isGlobalValue(value))  {  [CE]  ';'  expected  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isGlobalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE  ||!isGlobalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
92	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    ||!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
93	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [CE]  ';'  expected  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  DEFAULT_ZERO_TOLERANCE  ||!isLocalValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    ||!isLocalValue(value))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
94	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {	  if(value    <    =    DEFAULT_ZERO_TOLERANCE    &&!isDefaultValue(value))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  if(value  <  0  ||!isDouble(value))  {  [CE]  ';'  expected  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  <  0  ||!isDouble(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  <  0  ||!isDouble(value))  {	  if    (value    <    0    ||!isLocal(value))    {    	non-compiled	[CE]  ';'  expected	8	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entries().iterator();  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Iterator  <  Entry>  iter  =  current.entries().iterator();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Iterator  <  Entry>  iter  =  current.entries().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	23	None	replace
97	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  package  org.apache.commons.math3.exception  does  not  exist  [FE]                        MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryList.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryList.get(index,  DEFAULT_ZERO_TOLERANCE);	  Entry    entry    =(Entry)this.entryList.get(index,    value);    	non-compiled	[CE]  package  org.apache.commons.math3.exception  does  not  exist	6	None	replace
98	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [CE]  not  a  statement  [FE]            MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLongValue(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE    &&!isLongValue(value))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
99	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [CE]  not  a  statement  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  >  DEFAULT_ZERO_TOLERANCE  &&!isEmptyValue(value))  {	  if(value    ==    DEFAULT_ZERO_TOLERANCE    &&!isEmptyValue(value))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
100	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.clone();  [CE]  not  a  statement  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)iter.clone();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iter.clone();	  Entry    entry    =(Entry)iter.remove();    	non-compiled	[CE]  not  a  statement	42	None	replace
101	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  not  a  statement  [FE]                    MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)this.entryMap.get(index,  DEFAULT_ZERO_TOLERANCE);	  Entry    entry    =(Entry)this.entryMap.get(index,    value);    	non-compiled	[CE]  not  a  statement	17	None	replace
102	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  [CE]  not  a  statement  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)entries.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)entries.next();	  Entry    current    =(Entry)entry.next();    	non-compiled	[CE]  not  a  statement	18	None	replace
103	[BUG]  [BUGGY]  Entry  current  =(Entry)iterator.next();  [CE]  not  a  statement  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)iterator.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iterator.next();	  Entry    current    =(Entry)iter2.next();    	non-compiled	[CE]  not  a  statement	32	None	replace
104	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.getNext();  [CE]  not  a  statement  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  current  =(Entry)iter.getNext();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  current  =(Entry)iter.getNext();	  Entry    current    =(Entry)iter.getValue();    	non-compiled	[CE]  not  a  statement	31	None	replace
105	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {  [CE]  not  a  statement  [FE]              MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {  [BUGGY]      entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  &&!isLocal(value))  {	  if    (value!=    DEFAULT_ZERO_TOLERANCE    &&!isLocal(value))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
106	[BUG]  [BUGGY]  Entry  entry  =(Entry)iterator.next();  [CE]  not  a  statement  [FE]                MathRuntimeException$6      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);      [BUGGY]  Entry  entry  =(Entry)iterator.next();  [BUGGY]      if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  col  dimension  end  expectedSize  i  index  key  n  resize  row  virtualSize  	projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.4472135954999579	664	664	1	replace	Entry  entry  =(Entry)iterator.next();	  Entry    entry    =(Entry)iter2.next();    	non-compiled	[CE]  not  a  statement	30	None	replace
