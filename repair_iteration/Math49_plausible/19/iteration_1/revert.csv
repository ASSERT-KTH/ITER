projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index>=0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=openMapEntries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=openMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>=entries.size()){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<0||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,newDouble(value));}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMapEntries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMapSparseIterator.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():null;
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=current.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entryMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOf(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),current);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)entry.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entries.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index>=0);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entry.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=current.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=current.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=current.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,value-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0.0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index+1);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>=0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)iter.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index+1);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter2.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter2.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(DEFAULT_ZERO_TOLERANCE));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value-1));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{thrownewRuntimeException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}else{entries.remove(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.remove();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.remove();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index>=0){checkIndex(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/DEFAULT_ZERO_TOLERANCE));
