projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index>=0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=openMapEntries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=openMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>=entries.size()){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<0||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,newDouble(value));}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMapEntries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMapSparseIterator.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():null;
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=current.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entryMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOf(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),current);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)entry.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entries.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index>=0);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entry.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=current.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=current.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=current.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,value-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0.0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index+1);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>=0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)iter.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index+1);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter2.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter2.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(DEFAULT_ZERO_TOLERANCE));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value-1));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index);}else{thrownewRuntimeException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}else{entries.remove(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.remove();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.remove();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index>=0){checkIndex(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/DEFAULT_ZERO_TOLERANCE));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entryMap.put(index,newDouble(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index,newDouble(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663read();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<0||index>DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>=DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState(index<0||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index,newDouble(value),DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index+1);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index+1);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index-2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/DEFAULT_ZERO_TOLERANCE),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/100.0));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/100));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/1));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value*1));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckInt(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entries.put(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entry<?>entry=entries.iterator().next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entry<K,V>entry=entries.iterator().next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index,value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkLocal(value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE&&value>DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE||value>MAX_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=INVALID_DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=entries.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=entries.keySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entryMap.put(index,newEntry(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,1);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663ensureCapacity(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663ensureCapacity(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663ensureCapacity(value<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index,value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entries.remove(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.current.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entry.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index,newDouble(value));}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index,DEFAULT_ZERO_TOLERANCE,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663ensureAccess(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkAccess(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(DEFAULT_ZERO_TOLERANCE),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(DEFAULT_ZERO_TOLERANCE+1));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=entries.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=entries.keySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>=0){checkIndex(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>=0){checkIndex(index,index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entry.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)entry.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entryMap.put(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663validateIndex(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,value/1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entry.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.getKey();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkInt(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkInt(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries==null)?this.entries.iterator():null;
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():newOpenIntToDoubleHashMap();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():Collections.emptyIterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter1.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter4.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663validateIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0.0){checkInt(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index-2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index-1+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entries.get(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entries.get(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entries.get(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index,value-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index,index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<0);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState(index<0||index>=entries.size());
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.current.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index,value-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index,this.value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<1||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<0||index==DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0||isDefaultValue(value)){checkIndex(index);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index,newDouble(value));}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(value,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkSize(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index+1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index+3);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter1.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter3.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.randomAccess=newOpenIntToDoubleHashMap(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.randomAccess=newOpenIntToDoubleHashMap(this.randomAccess,index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.randomAccess=newOpenIntToDoubleHashMap();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkAccess(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0){checkAccess(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entries.entrySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.entries.keySet().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value).doubleValue());
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value-1));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkLong(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index,value-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index,value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index,index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index+1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState(value<0||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOf(current);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOfSupported(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663doubleindex=indexOf(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOf(entry);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkLong(index-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entry.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entry.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index+1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index,value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index+2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(key),DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),DEFAULT_ZERO_TOLERANCE,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckAccess.checkAccess(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entryIterator.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index==0);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index!=0);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index>=1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Ileratoriter=this.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entry.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index-2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index-1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>entries.size()){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<0||index>=entries.size());
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index==entries.size()){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexCheck.checkIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexcheckIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entryHashMaps.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index-2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkLong(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index,DEFAULT_ZERO_TOLERANCE,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.current.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(key),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIntegercheckInt(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entry=(OpenIntToDoubleHashMap)entries.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entry=(OpenIntToDoubleHashMap)iter.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entry=(OpenIntToDoubleHashMap)this.entries.get(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index+1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entryList.put(index,newDouble(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index*2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index-2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entries.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),this.current);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663value<0||isDefaultValue(value)){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663value<0||isDefaultValue(value)){checkIndex(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663value<0){checkIndex(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663value<0||isDefaultValue(value)){checkIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexcheckIndex(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexcheckIndex(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkIndex(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index,value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkAccess(index);}else{entries.remove(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index,value);}else{entries.remove(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)current.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOf(value,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openIntToDoubleHashMap.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.getKey();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.openMapEntryIterator.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value!=DEFAULT_ZERO_TOLERANCE){checkAccess(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value),DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newDouble(value/DEFAULT_ZERO_TOLERANCE));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkDimension(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkInt(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkInt(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkDimension(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index>=0){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<=0){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index-1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intvalue=getIntValue(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intvalue=checkInt(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(value-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index*1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter2.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index>=0||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckState.checkState(index<=0||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index-1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index*1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(value/1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value-2));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries!=null)?this.entries.values().iterator():null;
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index+1,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index,1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index,0);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index+1);}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter2.getValue();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/2));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/1000));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entryMaps.values().iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,newDouble(value),DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index==DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index!=DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)iter.getKey();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=this.current.entries.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkIndex(index+1,newDouble(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value),DEFAULT_ZERO_TOLERANCE+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index*1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index-1+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663value>0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index+1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,value-2);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0||index>=entries.size()){checkIndex(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>=entries.size()){checkIndex(index+1);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,DEFAULT_ZERO_TOLERANCE+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkAccess(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)entries.get(index,value+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index+1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(this.value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663validate(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkAccess(index,value/DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663value>0.0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,newDouble(value),newDouble(value));}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663safeAccess.setValue(index);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663safeGet(index)>0){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663safeAccess.setValue(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value-1),value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value/2.0));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIntToDoubleHashMap.this.setEntry(index,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)this.entryMap.get(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663ensureCapacity(value)<=DEFAULT_ZERO_TOLERANCE){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,DEFAULT_ZERO_TOLERANCE-1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0||index>randomAccess){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0){checkInt(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0){checkInt(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}else{entries.put(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkSize(index*1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(DEFAULT_ZERO_TOLERANCE),current);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iterator.next();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkAccess(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(value);}else{thrownewIllegalStateException("");}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkInt(index-1,value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663entry=(Entry)this.entryMap.get(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkSize(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkSize(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkSize(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)iter.clone();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index+1,newDouble(value));}else{entries.put(index,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkIndex(index+1,newDouble(value));}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entries.put(index,newEntry(value-1),DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entryList.add(index,newEntry(value));
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entrycurrent=(Entry)iter.getIterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkAccess(index);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<0){checkAccess(index);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkAccess(index,value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Entryentry=(Entry)this.entryMap.get(index,DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663ensureCapacity(value<=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index>=0){checkIndex(index,DEFAULT_ZERO_TOLERANCE);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():DEFAULT_ZERO_TOLERANCE;
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0){checkIndex(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663intindex=indexOfSilon(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663this.entryList.add(index,newOpenIntToDoubleHashMap());
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=0.0){checkInt(value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value>0.0){checkInt(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index,value);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndex.checkIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexChecks.checkState(value<=DEFAULT_ZERO_TOLERANCE);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexChecks.checkIndex(value);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index,DEFAULT_ZERO_TOLERANCE);}else{entries.put(index,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663checkDouble(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663Iteratoriter=this.entryMap.iterator();
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663CheckIndexCheck.checkIndex(index+1);
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(index<0){checkIndex(index+1,value);}
projects/Math49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java663if(value<=index||value>DEFAULT_ZERO_TOLERANCE){checkInt(value);}
