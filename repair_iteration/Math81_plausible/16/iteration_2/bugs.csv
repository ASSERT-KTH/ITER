bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i4  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >=  0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >=  0)  {	  if(i4    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  if(i4  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  =  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  =  0.0)  {	  if(i4    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  if(i4  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  0.0)  {	  if(i4    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  if(i4  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >  0.0)  {	  if(i4    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  For(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  For(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	For(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  >  expected	2	None	replace
7	[BUG]  [BUGGY]  if(i4  <  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  >  expected	2	None	replace
8	[BUG]  [BUGGY]  b2  =  Math.max(work[i4]  *  work[i4  -  2]);  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(work[i4]  *  work[i4  -  2]);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(work[i4]  *  work[i4  -  2]);	      b2    =    Math.max(work[i4]    /    work[i4    -    2]);    	non-compiled	[CE]  >  expected	15	None	replace
9	[BUG]  [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  2]  +  1);  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  2]  +  1);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(work[i4]  /  work[i4  -  2]  +  1);	      b2    =    Math.max(work[i4]    /    work[i4    -    2]);    	non-compiled	[CE]  >  expected	15	None	replace
10	[BUG]  [BUGGY]  b2  =  Math.max(b2,  i4);  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(b2,  i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(b2,  i4);	      b2    =    Math.min(b2,    i4);    	non-compiled	[CE]  >  expected	14	None	replace
11	[BUG]  [BUGGY]  b2  =  Math.min(b2,  i4  -  2);  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.min(b2,  i4  -  2);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.min(b2,  i4  -  2);	      b2    =    Math.min(b2,    i4);    	non-compiled	[CE]  >  expected	14	None	replace
12	[BUG]  [BUGGY]  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work.length;    i4++)    {    break;    }    	non-compiled	[CE]  >  expected	5	None	replace
13	[BUG]  [BUGGY]  For(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  For(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	For(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work.length;    i4++)    {    break;    }    	non-compiled	[CE]  >  expected	5	None	replace
14	[BUG]  [BUGGY]  for(int  i4  =  0;  i4  <  work.length;  i4  -=  2)  {  break;  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  0;  i4  <  work.length;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  0;  i4  <  work.length;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work.length;    i4++)    {    break;    }    	non-compiled	[CE]  >  expected	5	None	replace
15	[BUG]  [BUGGY]  if(b1  ==  0.0  ||  b2  ==  1.0)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(b1  ==  0.0  ||  b2  ==  1.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(b1  ==  0.0  ||  b2  ==  1.0)  {	  if(b2    ==    0.0    ||    b2    ==    1.0)    {    	non-compiled	[CE]  >  expected	17	None	replace
16	[BUG]  [BUGGY]  if(i4  ==  0.0  ||  i4  ==  1.0)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  ==  0.0  ||  i4  ==  1.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  ==  0.0  ||  i4  ==  1.0)  {	  if(b2    ==    0.0    ||    b2    ==    1.0)    {    	non-compiled	[CE]  >  expected	17	None	replace
17	[BUG]  [BUGGY]  if(b1  ==  0.0  &&  b2  ==  1.0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(b1  ==  0.0  &&  b2  ==  1.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(b1  ==  0.0  &&  b2  ==  1.0)  {	  if(b2    ==    0.0    ||    b2    ==    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  rackPosition(i4);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  rackPosition(i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	rackPosition(i4);	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  rackPosition(i4  -  1);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  rackPosition(i4  -  1);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	rackPosition(i4  -  1);	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  allowNegatives(i4);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  allowNegatives(i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	allowNegatives(i4);	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  rackPosition(i4  -  2);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  rackPosition(i4  -  2);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	rackPosition(i4  -  2);	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  b2  =  work[i4]  *  work[i4  -  1];  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  work[i4]  *  work[i4  -  1];  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  work[i4]  *  work[i4  -  1];	      b2    =    work[i4]    /    work[i4    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  For(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  For(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	For(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  for(int  i4  =  np;  i4!=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4!=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4!=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  ArrayDecompositionImpl  b2  =  computeDecompositionImpl(i4,  deflated);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  ArrayDecompositionImpl  b2  =  computeDecompositionImpl(i4,  deflated);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	ArrayDecompositionImpl  b2  =  computeDecompositionImpl(i4,  deflated);	      ArrayDecompositionImpl    b2    =    computeDecompositionImpl(i4);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  ArrayDecompositionImpl  b2  =  computeDecompositionImpl(i4,  i4);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  ArrayDecompositionImpl  b2  =  computeDecompositionImpl(i4,  i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	ArrayDecompositionImpl  b2  =  computeDecompositionImpl(i4,  i4);	      ArrayDecompositionImpl    b2    =    computeDecompositionImpl(i4);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  if(b1  ==  0.0  ||  b2  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(b1  ==  0.0  ||  b2  ==  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(b1  ==  0.0  ||  b2  ==  0.0)  {	  if(b1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  b2  =  work[i4]  *  work[i4  -  2];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  work[i4]  *  work[i4  -  2];  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  work[i4]  *  work[i4  -  2];	      b2    =    work[i4]    /    work[i4    -    2];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  For(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  For(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	For(int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  if(i4  <  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  b2  =  work[i4]  *  work[i4  -  3];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  work[i4]  *  work[i4  -  3];  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  work[i4]  *  work[i4  -  3];	      b2    =    work[i4]    /    work[i4    -    3];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  b2  =  Math.max(work[i4]  *  work[i4  -  1]);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(work[i4]  *  work[i4  -  1]);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(work[i4]  *  work[i4  -  1]);	      b2    =    Math.max(work[i4]    /    work[i4    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  1],  deflated);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  1],  deflated);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(work[i4]  /  work[i4  -  1],  deflated);	      b2    =    Math.max(work[i4]    /    work[i4    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  if(i4  <  0  ||  i4  >  work[i4  -  1])  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  0  ||  i4  >  work[i4  -  1])  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  0  ||  i4  >  work[i4  -  1])  {	  if(i4    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  if(i4  <  0  ||  i4  >  work[i4  -  2])  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  0  ||  i4  >  work[i4  -  2])  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  0  ||  i4  >  work[i4  -  2])  {	  if(i4    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  if(i4  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  =  0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  =  0)  {	  if(i4    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  1]  +  2);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  1]  +  2);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(work[i4]  /  work[i4  -  1]  +  2);	      b2    =    Math.max(work[i4]    /    work[i4    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  if(work[i4]  <  0)  {  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(work[i4]  <  0)  {  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(work[i4]  <  0)  {  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work.length;    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  if(i4  <  work.length)  {  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  work.length)  {  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  work.length)  {  for(int  i4  =  0;  i4  <  work.length;  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work.length;    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  if(i4  <  work[i4  -  1])  {  if(i4  ==  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  work[i4  -  1])  {  if(i4  ==  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  work[i4  -  1])  {  if(i4  ==  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ");  }	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ");	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	allowNegatives(i4)  {  throw  new  IllegalArgumentException( " ".);  }	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  allowNegatives(i4)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	allowNegatives(i4)  {  throw  new  IllegalArgumentException( ". ");  }	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  b2  =  work[i4]  /  work[i4  -  4];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  work[i4]  /  work[i4  -  4];  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  work[i4]  /  work[i4  -  4];	      b2    =    work[i4]    /    work[i4    -    3];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  b2  =  Math.min(b2,  i4  -  1);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.min(b2,  i4  -  1);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.min(b2,  i4  -  1);	      b2    =    Math.min(b2,    i4);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  b2  =  Math.min(b2,  i4,  i4);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.min(b2,  i4,  i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.min(b2,  i4,  i4);	      b2    =    Math.min(b2,    i4);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  for(int  i4  =  start;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  start;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  start;  i4  <  4  *  start  +  2  +  pingPong;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  if(i4  >=  0.0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >=  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >=  0.0)  {	  if(i4    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  0)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  0)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  0)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  0)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  [Delete]  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	[Delete]	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  aughtException( " ");  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	aughtException( " ");	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE(i4,  i4);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  aughtExceptionHandler.throwAsIAE(i4,  i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	aughtExceptionHandler.throwAsIAE(i4,  i4);	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( " ");  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  aughtExceptionHandler.throwAsIAE( " ");  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	aughtExceptionHandler.throwAsIAE( " ");	      if(i4    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >  0)  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  cearcă  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  cearcă  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	cearcă  {  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  pingPong;  i4  >  4)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    >    4)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  if(i4  <  0.0  ||  i4  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  0.0  ||  i4  >  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  0.0  ||  i4  >  0.0)  {	  if(i4    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  b2  =  work[i4]  /  work[i4  -  2]  +  1;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  work[i4]  /  work[i4  -  2]  +  1;  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  work[i4]  /  work[i4  -  2]  +  1;	      b2    =    work[i4]    /    work[i4    -    2];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  if(i4  >  0  ||  work[i4  -  1]  <  a2  ||  work[i4  -  2])  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >  0  ||  work[i4  -  1]  <  a2  ||  work[i4  -  2])  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >  0  ||  work[i4  -  1]  <  a2  ||  work[i4  -  2])  {	  if(i4    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  if(b2  <  0.0  ||  b2  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(b2  <  0.0  ||  b2  >  1.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(b2  <  0.0  ||  b2  >  1.0)  {	  if(b2    ==    0.0    ||    b2    ==    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  if(b2  <  1.0  ||  b2  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(b2  <  1.0  ||  b2  >  1.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(b2  <  1.0  ||  b2  >  1.0)  {	  if(b2    ==    0.0    ||    b2    ==    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  deflated;  i4  -=  2)  {  break;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  for(int  i4  =  np;  i4  <  4  *  start  +  2  +  deflated;  i4  -=  2)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	for(int  i4  =  np;  i4  <  4  *  start  +  2  +  deflated;  i4  -=  2)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    np;    i4    <    4    *    start    +    2    +    pingPong;    i4    -=    2)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
71	[BUG]  [BUGGY]  b2  =  Math.min(work[i4]  /  work[i4  -  1]);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.min(work[i4]  /  work[i4  -  1]);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.min(work[i4]  /  work[i4  -  1]);	      b2    =    Math.max(work[i4]    /    work[i4    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
72	[BUG]  [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  1]  +  1);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.max(work[i4]  /  work[i4  -  1]  +  1);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.max(work[i4]  /  work[i4  -  1]  +  1);	      b2    =    Math.max(work[i4]    /    work[i4    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
73	[BUG]  [BUGGY]  if(b1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(b1  <  0.0)  {  [BUGGY]    break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(b1  <  0.0)  {	  if(b1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  b2  =  work[i4]  /  work[i4  -  1]  +  1;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  work[i4]  /  work[i4  -  1]  +  1;  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  work[i4]  /  work[i4  -  1]  +  1;	      b2    =    work[i4]    /    work[i4    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  b2  =  Math.min(b1,  i4);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  b2  =  Math.min(b1,  i4);  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	b2  =  Math.min(b1,  i4);	      b2    =    Math.min(b2,    i4);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  if(i4  <  work[i4  -  1])  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  <  work[i4  -  1])  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  <  work[i4  -  1])  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  if(i4  >  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (work[nn  -  9]>work[nn  -  11])  {  return;  }  b2  =  work[nn  -  9]  /  work[nn  -  11];  np  =  nn  -  13;  }  a2  =  a2  +  b2;  for  (int  i4  =  np;  i4  >=  4  *  start  +  2  +  pingPong;  i4  -=  4)  {    [BUGGY]  if(i4  >  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }  [BUGGY]    if(b2  ==  0.0)  {  break;  }  b1  =  b2;  if  (work[i4]>work[i4  -  2])  {  return;  }  b2  =  b2  *  (work[i4]  /  work[i4  -  2]);  a2  =  a2  +  b2;  if  (100  *  Math.max(b2,  b1)  <  a2  ||  cnst1  <  a2)  {  break;  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  computeShiftIncrement  [RETURN_TYPE]  void  final  int  start  final  int  end  final  int  deflated  [VARIABLES]  boolean  double[]  b  bp  imagEigenvalues  invI  main  range  realEigenvalues  secondary  squaredSecondary  vData  vK  work  ArrayRealVector[]  eigenvectors  RealMatrix  b  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  a2  absDCurrent  absDPrevious  absoluteTolerance  alpha  b  b1  b2  beta  c  cnst1  cnst2  cnst3  d  dCurrent  dMin  dMin1  dMin2  dN  dN1  dN2  delta  determinant  di  diagMax  diagMin  e12  eCurrent  eMax  eMin  ePrevious  ei  eiM1  eps  g  gam  gap1  gap2  invIJ  lambda  largestRoot  left  lower  lowerSpectra  margin  max  middle  mij  minPivot  mji  offDiagMax  offDiagMin  oldB1  oneFourth  p  previousEMin  q  q0  q1  q1q2Me22  q2  qMax  r  radius  range  ratio  relativeTolerance  right  s  sigma  sigmaLow  splitTolerance  sqrtMq  sumOffDiag  t  tNorm  tau  theta  threeFourth  tmp  upper  upperSpectra  z0  z1  z2  int  begin  columns  count  deflated  deflatedEnd  end  fourI  i  i0  i4  index  j  j4  j4p2  k  l  lowerStart  m  maxIter  n  n0  nColB  nn  np  oneFourthCount  pingPong  rows  split  start  step  tType  threeFourthCount  upperStart  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.5773502691896258	1504	1504	1	replace	if(i4  >  0)  {  for(int  i4  =  0;  i4  <  work[i4  -  1];  i4++)  {  break;  }	      if(i4    ==    0)    {    for(int    i4    =    0;    i4    <    work[i4    -    1];    i4++)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
