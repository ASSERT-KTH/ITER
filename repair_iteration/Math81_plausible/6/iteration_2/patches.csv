bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[1];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	33	None	replace
2	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[0];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[0];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[0];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	33	None	replace
3	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[4];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[4];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	33	None	replace
4	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	27	None	replace
5	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[0];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[0];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[0];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	27	None	replace
6	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[4];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[4];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[4];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	27	None	replace
7	[BUG]  [BUGGY]  squaredSecondary.length  =  secondary.length;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  secondary.length;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  secondary.length;	  squaredSecondary.length    =    splitTolerance.length;    	non-compiled	[CE]  ';'  expected	15	None	replace
8	[BUG]  [BUGGY]  squaredSecondary.length  =  splitTolerance.length  -  1;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  splitTolerance.length  -  1;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  splitTolerance.length  -  1;	  squaredSecondary.length    =    splitTolerance.length;    	non-compiled	[CE]  ';'  expected	15	None	replace
9	[BUG]  [BUGGY]  squaredSecondary.length  =  this.splitTolerance.length;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  this.splitTolerance.length;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  this.splitTolerance.length;	  squaredSecondary.length    =    splitTolerance.length;    	non-compiled	[CE]  ';'  expected	15	None	replace
10	[BUG]  [BUGGY]  squaredSecondary.length  =  splitTolerance.length  +  1;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  splitTolerance.length  +  1;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  splitTolerance.length  +  1;	  squaredSecondary.length    =    splitTolerance.length;    	non-compiled	[CE]  ';'  expected	15	None	replace
11	[BUG]  [BUGGY]  squaredSecondary  =  new  double[splitTolerance.length  -  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary  =  new  double[splitTolerance.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary  =  new  double[splitTolerance.length  -  2];	  squaredSecondary    =    new    double[splitTolerance.length    -    1];    	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  +  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  +  2];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	28	None	replace
13	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  +  3];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  +  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  +  3];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	28	None	replace
14	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  +  3];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  +  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  +  3];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.length    +    1];    	non-compiled	[CE]  ';'  expected	17	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  secondary.length  -  3;  ++i)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  0;  i  <  secondary.length  -  3;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  0;  i  <  secondary.length  -  3;  ++i)  {	  for(int    i    =    0;    i    <    secondary.length    -    2;    ++i)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
16	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  -  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  -  2];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	48	None	replace
17	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  /  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  /  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  /  2];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	48	None	replace
18	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  2  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  2  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  2  +  1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	48	None	replace
19	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.size()  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.size()  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.size()  1];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.size()    +    1];    	non-compiled	[CE]  ';'  expected	21	None	replace
20	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	8	None	replace
21	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[0];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[0];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[0];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[4];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[4];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	8	None	replace
23	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[double.length  -  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[double.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[double.length  -  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	44	None	replace
24	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[double.length  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[double.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[double.length  +  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	44	None	replace
25	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  /  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  /  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  /  2];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	19	None	replace
26	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  -  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  -  2];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	19	None	replace
27	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  *  2  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  *  2  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  *  2  +  1];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	19	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  primary.length;  ++i)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  2;  i  <  primary.length;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  2;  i  <  primary.length;  ++i)  {	  for(int    i    =    1;    i    <    primary.length;    ++i)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
29	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  -  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  -  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    -    1];    	non-compiled	[CE]  ';'  expected	23	None	replace
30	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  /  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  /  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  /  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	24	None	replace
31	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  2  +  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  2  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  2  +  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	24	None	replace
32	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  +  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  +  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	34	None	replace
33	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  +  3];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  +  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  +  3];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	34	None	replace
34	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  -  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  -  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[secondary.length    -    1];    	non-compiled	[CE]  ';'  expected	43	None	replace
35	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  -  3];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  -  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  -  3];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[secondary.length    -    1];    	non-compiled	[CE]  ';'  expected	43	None	replace
36	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  +  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[squaredSecondary.length];    	non-compiled	[CE]  ';'  expected	38	None	replace
37	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  *  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  *  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[squaredSecondary.length];    	non-compiled	[CE]  ';'  expected	38	None	replace
38	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  +  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[squaredSecondary.length  +  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[squaredSecondary.length];    	non-compiled	[CE]  ';'  expected	38	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  secondary.length;  ++i)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  2;  i  <  secondary.length;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  2;  i  <  secondary.length;  ++i)  {	  for(int    i    =    1;    i    <    secondary.length;    ++i)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  secondary.length  -  1;  ++i)  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  1;  i  <  secondary.length  -  1;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  1;  i  <  secondary.length  -  1;  ++i)  {	  for(int    i    =    1;    i    <    secondary.length;    ++i)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
41	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  +  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  +  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    +    1];    	non-compiled	[CE]  ';'  expected	22	None	replace
42	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  +  3];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  +  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  +  3];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    +    1];    	non-compiled	[CE]  ';'  expected	22	None	replace
43	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[double.length  -  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[double.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[double.length  -  1];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	37	None	replace
44	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[double.length  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[double.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[double.length  +  1];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	37	None	replace
45	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[1]);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[1]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[1]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[0]);    	non-compiled	[CE]  ';'  expected	10	None	replace
46	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[2]);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[2]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[2]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[0]);    	non-compiled	[CE]  ';'  expected	10	None	replace
47	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[2]);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[2]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[2]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    double[0]);    	non-compiled	[CE]  ';'  expected	45	None	replace
48	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[1]);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[1]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[1]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    double[0]);    	non-compiled	[CE]  ';'  expected	45	None	replace
49	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[4]);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[4]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[4]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    double[0]);    	non-compiled	[CE]  ';'  expected	45	None	replace
50	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.size()  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.size()  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.size()  +  1];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[secondary.size()    ];    	non-compiled	[CE]  ';'  expected	39	None	replace
51	[BUG]  [BUGGY]  squaredSecondary.length  =  Math.min(splitTolerance,  secondary.length  -  1);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  Math.min(splitTolerance,  secondary.length  -  1);  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  Math.min(splitTolerance,  secondary.length  -  1);	  squaredSecondary.length    =    Math.min(splitTolerance,    secondary.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
52	[BUG]  [BUGGY]  squaredSecondary.length  =  Math.min(splitTolerance,  splitTolerance.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  Math.min(splitTolerance,  splitTolerance.length);  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  Math.min(splitTolerance,  splitTolerance.length);	  squaredSecondary.length    =    Math.min(splitTolerance,    secondary.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
53	[BUG]  [BUGGY]  squaredSecondary.length  =  Math.min(splitTolerance,  secondary.length  +  1);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  Math.min(splitTolerance,  secondary.length  +  1);  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  Math.min(splitTolerance,  secondary.length  +  1);	  squaredSecondary.length    =    Math.min(splitTolerance,    secondary.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  primary.length  -  1;  ++i)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  0;  i  <  primary.length  -  1;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  0;  i  <  primary.length  -  1;  ++i)  {	  for(int    i    =    0;    i    <    secondary.length    -    1;    ++i)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
55	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  +  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  +  2];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	31	None	replace
56	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  +  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  +  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  +  3];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	31	None	replace
57	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(imagEigenvalues);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(imagEigenvalues);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(imagEigenvalues);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(realEigenvalues);    	non-compiled	[CE]  ';'  expected	9	None	replace
58	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  secondary);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  secondary);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  secondary);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(realEigenvalues);    	non-compiled	[CE]  ';'  expected	9	None	replace
59	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  squaredTolerance);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  squaredTolerance);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  squaredTolerance);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(realEigenvalues);    	non-compiled	[CE]  ';'  expected	9	None	replace
60	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  -  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  -  2];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[secondary.length    -    1];    	non-compiled	[CE]  ';'  expected	32	None	replace
61	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  -  3];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  -  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  -  3];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[secondary.length    -    1];    	non-compiled	[CE]  ';'  expected	32	None	replace
62	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  +  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  +  2];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	6	None	replace
63	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  +  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  +  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  +  3];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	6	None	replace
64	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[squaredSecondary.size()  ]);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[squaredSecondary.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[squaredSecondary.size()  ]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[realEigenvalues.size()    ]);    	non-compiled	[CE]  ';'  expected	47	None	replace
65	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[quadSecondary.size()  ]);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[quadSecondary.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[quadSecondary.size()  ]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[realEigenvalues.size()    ]);    	non-compiled	[CE]  ';'  expected	47	None	replace
66	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[realEigenvalues.size()  +  1]);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[realEigenvalues.size()  +  1]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[realEigenvalues.size()  +  1]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[realEigenvalues.size()    ]);    	non-compiled	[CE]  ';'  expected	47	None	replace
67	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  +  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  +  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[realEigenvalues.length];    	non-compiled	[CE]  ';'  expected	25	None	replace
68	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  *  2];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  *  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[realEigenvalues.length];    	non-compiled	[CE]  ';'  expected	25	None	replace
69	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  +  2];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  +  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[realEigenvalues.length];    	non-compiled	[CE]  ';'  expected	25	None	replace
70	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  -  1];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[realEigenvalues.length  -  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[realEigenvalues.length];    	non-compiled	[CE]  ';'  expected	25	None	replace
71	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  -  2];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  -  2];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	49	None	replace
72	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  /  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  /  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  /  2];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	49	None	replace
73	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  2  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  2  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  2  +  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	49	None	replace
74	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	35	None	replace
75	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[0];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[0];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[0];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	35	None	replace
76	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[4];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[4];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[4];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	35	None	replace
77	[BUG]  [BUGGY]  squaredSecondary[i]  =  new  double[splitTolerance.length];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary[i]  =  new  double[splitTolerance.length];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary[i]  =  new  double[splitTolerance.length];	  squaredSecondary[i]    =    new    double[secondary.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
78	[BUG]  [BUGGY]  squaredSecondary[i]  =  new  double[secondary.length  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary[i]  =  new  double[secondary.length  +  1];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary[i]  =  new  double[secondary.length  +  1];	  squaredSecondary[i]    =    new    double[secondary.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
79	[BUG]  [BUGGY]  squaredSecondary[i]  =  new  double[secondary.length  -  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary[i]  =  new  double[secondary.length  -  1];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary[i]  =  new  double[secondary.length  -  1];	  squaredSecondary[i]    =    new    double[secondary.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
80	[BUG]  [BUGGY]  squaredSecondary[i]  =  new  double[secondary.length  *  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary[i]  =  new  double[secondary.length  *  2];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary[i]  =  new  double[secondary.length  *  2];	  squaredSecondary[i]    =    new    double[secondary.length];    	non-compiled	[CE]  ';'  expected	13	None	replace
81	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[double.length  -  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[double.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[double.length  -  1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	40	None	replace
82	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[double.length  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[double.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[double.length  +  1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	40	None	replace
83	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  +  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  +  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	5	None	replace
84	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  -  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  -  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	5	None	replace
85	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  *  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[splitTolerance.length  *  2];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	5	None	replace
86	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  -  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  -  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	36	None	replace
87	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  +  1];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  +  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	36	None	replace
88	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  -  2];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  -  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	36	None	replace
89	[BUG]  [BUGGY]  squaredSecondary  =  new  double[secondary.length  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary  =  new  double[secondary.length  +  1];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary  =  new  double[secondary.length  +  1];	  squaredSecondary    =    new    double[secondary.length];    	non-compiled	[CE]  ';'  expected	14	None	replace
90	[BUG]  [BUGGY]  squaredSecondary  =  new  double[secondary.length  -  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary  =  new  double[secondary.length  -  1];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary  =  new  double[secondary.length  -  1];	  squaredSecondary    =    new    double[secondary.length];    	non-compiled	[CE]  ';'  expected	14	None	replace
91	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  +  1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	26	None	replace
92	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  -  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  -  1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	26	None	replace
93	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  *  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  *  2];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	26	None	replace
94	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  +  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[splitTolerance.length  +  2];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[splitTolerance.length];    	non-compiled	[CE]  ';'  expected	26	None	replace
95	[BUG]  [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  +  1];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  +  1];	  ArrayRealVector[]    eigenvectors    =    new    ArrayRealVector[secondary.length];    	non-compiled	[CE]  ';'  expected	41	None	replace
96	[BUG]  [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  -  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  -  1];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  -  1];	  ArrayRealVector[]    eigenvectors    =    new    ArrayRealVector[secondary.length];    	non-compiled	[CE]  ';'  expected	41	None	replace
97	[BUG]  [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[2];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[2];	  ArrayRealVector[]    eigenvectors    =    new    ArrayRealVector[secondary.length];    	non-compiled	[CE]  ';'  expected	41	None	replace
98	[BUG]  [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[splitTolerance.length];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[splitTolerance.length];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[splitTolerance.length];	  ArrayRealVector[]    eigenvectors    =    new    ArrayRealVector[secondary.length];    	non-compiled	[CE]  ';'  expected	41	None	replace
99	[BUG]  [BUGGY]  squaredSecondary  =  new  double[splitTolerance.length  +  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary  =  new  double[splitTolerance.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary  =  new  double[splitTolerance.length  +  2];	  squaredSecondary    =    new    double[splitTolerance.length    +    1];    	non-compiled	[CE]  ';'  expected	1	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  secondary.length  +  2;  ++i)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  0;  i  <  secondary.length  +  2;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  0;  i  <  secondary.length  +  2;  ++i)  {	  for(int    i    =    0;    i    <    secondary.length    +    1;    ++i)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  secondary.length  +  3;  ++i)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  0;  i  <  secondary.length  +  3;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  0;  i  <  secondary.length  +  3;  ++i)  {	  for(int    i    =    0;    i    <    secondary.length    +    1;    ++i)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
102	[BUG]  [BUGGY]  squaredSecondary.length  =  1;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  1;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  1;	  squaredSecondary.length    =    0;    	non-compiled	[CE]  ';'  expected	16	None	replace
103	[BUG]  [BUGGY]  squaredSecondary.length  =  2;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  2;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  2;	  squaredSecondary.length    =    0;    	non-compiled	[CE]  ';'  expected	16	None	replace
104	[BUG]  [BUGGY]  squaredSecondary.length  =  0L;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  0L;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  0L;	  squaredSecondary.length    =    0;    	non-compiled	[CE]  ';'  expected	16	None	replace
105	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[4]);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[4]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[4]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[0]);    	non-compiled	[CE]  ';'  expected	10	None	replace
106	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[main.size()  ];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[main.size()  ];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[main.size()  ];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[secondary.size()    ];    	non-compiled	[CE]  ';'  expected	39	None	replace
107	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[realEigenvalues.length]);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[realEigenvalues.length]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  double[realEigenvalues.length]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    double[0]);    	non-compiled	[CE]  ';'  expected	45	None	replace
108	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  3];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  3];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	24	None	replace
109	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  4];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  4];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[splitTolerance.length  *  4];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	24	None	replace
110	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[quardSecondary.size()  ]);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[quardSecondary.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[quardSecondary.size()  ]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[realEigenvalues.size()    ]);    	non-compiled	[CE]  ';'  expected	47	None	replace
111	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[2+realEigenvalues.size()  ]);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[2+realEigenvalues.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(new  ArrayRealVector[2+realEigenvalues.size()  ]);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(new    ArrayRealVector[realEigenvalues.size()    ]);    	non-compiled	[CE]  ';'  expected	47	None	replace
112	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  1];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	28	None	replace
113	[BUG]  [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  *  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  *  2];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[secondary.length  *  2];	  ArrayRealVector[]    eigenvectors    =    new    ArrayRealVector[secondary.length];    	non-compiled	[CE]  ';'  expected	41	None	replace
114	[BUG]  [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[double.length];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[double.length];  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  eigenvectors  =  new  ArrayRealVector[double.length];	  ArrayRealVector[]    eigenvectors    =    new    ArrayRealVector[secondary.length];    	non-compiled	[CE]  ';'  expected	41	None	replace
115	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  *  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  *  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[splitTolerance.length  *  3];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	19	None	replace
116	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  *  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[secondary.length  *  2];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[splitTolerance.length    *    2];    	non-compiled	[CE]  ';'  expected	19	None	replace
117	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  3];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  3];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	48	None	replace
118	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  4];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  4];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[secondary.length  *  4];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	48	None	replace
119	[BUG]  [BUGGY]  squaredSecondary.length  =  Math.min(squaredSecondary.length,  splitTolerance.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  Math.min(squaredSecondary.length,  splitTolerance.length);  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  Math.min(squaredSecondary.length,  splitTolerance.length);	  squaredSecondary.length    =    Math.min(splitTolerance,    secondary.length);    	non-compiled	[CE]  ';'  expected	42	None	replace
120	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  primary);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  primary);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  primary);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(realEigenvalues);    	non-compiled	[CE]  ';'  expected	9	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  secondary.length  -  4;  ++i)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  for(int  i  =  0;  i  <  secondary.length  -  4;  ++i)  {  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	for(int  i  =  0;  i  <  secondary.length  -  4;  ++i)  {	  for(int    i    =    0;    i    <    secondary.length    -    2;    ++i)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
122	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  3];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  3];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    *    2];    	non-compiled	[CE]  ';'  expected	49	None	replace
123	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  *  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	6	None	replace
124	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[imagEigenvalues.length];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[imagEigenvalues.length];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[imagEigenvalues.length];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[realEigenvalues.length];    	non-compiled	[CE]  ';'  expected	25	None	replace
125	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[3];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondaries  =  new  ArrayRealVector[3];	  ArrayRealVector[]    squaredSecondaries    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	33	None	replace
126	[BUG]  [BUGGY]  squaredSecondary.length  =  splitTolerance.length  -  2;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  squaredSecondary.length  =  splitTolerance.length  -  2;  [BUGGY]      final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	squaredSecondary.length  =  splitTolerance.length  -  2;	  squaredSecondary.length    =    splitTolerance.length;    	non-compiled	[CE]  ';'  expected	15	None	replace
127	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  *  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[double.length  *  2];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[double.length];    	non-compiled	[CE]  ';'  expected	36	None	replace
128	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[3];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[3];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	8	None	replace
129	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[3];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondarys  =  new  ArrayRealVector[3];	  ArrayRealVector[]    squaredSecondarys    =    new    ArrayRealVector[2];    	non-compiled	[CE]  ';'  expected	27	None	replace
130	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  squaredSecondary);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  squaredSecondary);  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  squaredSecondary.toArray(realEigenvalues,  squaredSecondary);	  ArrayRealVector[]    realEigenvalues    =    squaredSecondary.toArray(realEigenvalues);    	non-compiled	[CE]  ';'  expected	9	None	replace
131	[BUG]  [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  *  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  *  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  realEigenvalues  =  new  ArrayRealVector[secondary.length  *  1];	  ArrayRealVector[]    realEigenvalues    =    new    ArrayRealVector[secondary.length    +    1];    	non-compiled	[CE]  ';'  expected	34	None	replace
132	[BUG]  [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  /  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  EigenDecompositionImpl(final  double[]  main,  double[]  secondary,  final  double  splitTolerance)  throws  InvalidMatrixException  {  this.main=  main.clone();  this.secondary  =  secondary.clone();  transformer=  null;  squaredSecondary  =  new  double[secondary.length];      [BUGGY]  ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  /  1];  [BUGGY]      for  (int  i  =  0;  i  <  squaredSecondary.length;  ++i)  {  final  double  s  =  secondary[i];  squaredSecondary[i]  =  s  *  s;  }  this.splitTolerance  =  splitTolerance;  decompose();  }  [CLASS]  EigenDecompositionImpl  Solver  [METHOD]  <init>  [RETURN_TYPE]  EigenDecompositionImpl(double[],double[],double)  final  double[]  main  double[]  secondary  final  double  splitTolerance  [VARIABLES]  boolean  double[]  imagEigenvalues  main  realEigenvalues  secondary  squaredSecondary  work  ArrayRealVector[]  eigenvectors  RealMatrix  cachedD  cachedV  cachedVt  matrix  double  TOLERANCE  TOLERANCE_2  dMin  dMin1  dMin2  dN  dN1  dN2  eMin  g  lowerSpectra  minPivot  qMax  s  sigma  sigmaLow  splitTolerance  tau  upperSpectra  int  i  pingPong  tType  TriDiagonalTransformer  transformer  	projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	0.7071067811865475	199	199	1	replace	ArrayRealVector[]  squaredSecondary  =  new  ArrayRealVector[secondary.length  /  1];	  ArrayRealVector[]    squaredSecondary    =    new    ArrayRealVector[secondary.length    -    1];    	non-compiled	[CE]  ';'  expected	7	None	replace
