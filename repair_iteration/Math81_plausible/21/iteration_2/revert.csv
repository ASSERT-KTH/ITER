projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2]);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(b1,b2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(b2,b1);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1]);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(b1,a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.min(b2,b1);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(b2,b2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.min(b2,b2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+pingPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+p;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(cnst1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(cnst1>=a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b2*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b1*b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+p1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.min(b1,b2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2<cnst1){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b2<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+np;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*pingPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2>=cnst1){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b1>=a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2!=cnst1){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2]+1);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2])+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=cnst1*b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=a2*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(b2,a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-3]);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1])+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2<cnst3){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1]+2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.min(b1,a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2>=cnst3){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a1>=cnst2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+start;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+pingPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst4;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2+cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+pt;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)<a2||cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)<a2||cnst1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)<a2||cnst1<a2){break;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b2)||cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(a2,b1);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+deflated;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b2)&&cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)||cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=0;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*cnst4;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst4+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.min(b2,a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2]+3);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1]+1);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2]+4);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b2)<a2||cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b1)<a2||cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b1<a2||cnst1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b2==a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1]+3);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b2)<a2||cnst1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=cnst1*b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b3*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2==cnst1){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2!=cnst3){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=cnst1*b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2*cnst4;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=a2*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=cnst1*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2])/2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2])+3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+p4;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2*deflated;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+deflated;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+pPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=a2+cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2+cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1])/2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1])+2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+pt1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+pt3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2*1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b1==a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b1!=a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b1*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b2*a1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b1*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=cnst1*b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b1*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2*1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=a2+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2+2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b2)<a2||cnst1<a2){break;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*cnst1+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2*pingPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+start;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+p;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*a2+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=a2*b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*a2+2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst3+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst3+2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=cnst1*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=cnst3*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b2*cnst1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2==cnst3){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*start;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*np;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b2*pingPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a1==cnst2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2>=cnst2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=a2+b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=a2+b1.doubleValue();
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.max(a2,b2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-4]);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1]+4);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.min(b1,b2)&&cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=cnst4*b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=a2+b2.doubleValue();
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*b1+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+pingPong;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=cnst3*b1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a1>=cnst3){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)<a2||cnst3<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.min(b2,b1)<a2||cnst1<a2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2+p3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2+a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)<a2||cnst3<a2){break;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.min(b2,b1)<a2||cnst1<a2){break;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-2])/1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*a2+b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+b3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b2*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b1*b2+1;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=b1*b2+2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b2,b1)<a2||cnst3<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2*a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b1=b2*i4;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2>cnst3){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+a2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=b2+b2;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b1)<a2||cnst1<a2){break;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b2*(work[i4]/work[i4-1]/2);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2<b2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*a2+cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a1>cnst2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512a2=a2*cnst3;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2>cnst1){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(b1>a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512if(a2>=b1){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=Math.min(a2,b1);
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512b2=b1*cnst3+deflated;
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512booleancnst1=Math.max(b1,b1)<a2||cnst1<a2){break;}
projects/Math81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java1512cnst1=a2+b1.doubleValue();
