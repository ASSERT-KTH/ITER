projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnsToDrop.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columns.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)getGraph().clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnsToDrop.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=tableau.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)i.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnsToDrop.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicColumn(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnLabels.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaximumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i)+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columns.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnsToDrop.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columns.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnsToDrop.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnsToDrop.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnLabels.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)in.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(0,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.getGraph().clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,0d);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)table.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)table.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)getGraph().get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)getGraph().reset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaximumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getArtificialVar(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()-i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()+i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columns.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columns.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.graph.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()*DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)table.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()*DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,0,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnLabels.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnLabels.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i+1,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps(i,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()/i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()*i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()+i+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()/DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()*2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()*height;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()*4;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.table.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.getGraph();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(0,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()-i+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnLabels.getMaxUlps()-i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMinUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps()/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(i,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i+1,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columns.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnsToDrop.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columns.getEntry(0,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)getGraph().set(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,columnLabelsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,columnLabels[i]);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaximumUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaximumUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaximumUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMinimumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,maxUlps+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,i+1,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,i+1,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i,columnLabelsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnsToDrop.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,columnsToDrop,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,getArtificialVariableOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)+2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)+3;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,0d);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,0,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnLabels.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columns.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i)/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i)+2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i)+3;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)in.get();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)this.in.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnLabels.getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaximumUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaximumUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMinimumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,col);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMinUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i+1,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicColumn(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnsToDrop.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columns.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnLabels.getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(i,0d);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(i,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)this.table.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)table.getValue(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnLabels.getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=columnsToDrop.getMaxUlps(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getArtificialVar(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getArtificialVar(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.graph.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(i,columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicColumn(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)this.table.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)this.columnsToDrop.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(1)+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()/DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()*2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()*4;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()*height;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)this.columnsToDrop.next();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)getGraph().get(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)getGraph().get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.getGraph().get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps(i,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,0,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,0d,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(i,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columns.getEntry(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columns.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps()/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.get(i-1+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.get(i-2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getPhase(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaximumUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getmaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps(i-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=matrix.getMaxUlps(i,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)table.get(i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i)-3;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getmaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)table.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0d,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(0,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaximumUlps()+i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()*NEGATIVE_VAR_COLUMN_LABEL;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i+1,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)in.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnLabels.peek();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps()-i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps()+i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicColumn(i,column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columns.get(i-1+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)table.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)dataset.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(i,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i,getNumObjectiveFunctions());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)columnsToDrop.peek();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(0,i+1,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.getGraph().reset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()*i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(i+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.columnsToDrop.get(i-1+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)graph.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.peek();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicVar(i+1,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+3);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i+1,column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps(0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=i.getEntry(1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntryCount(0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.graph.remove(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,DEFAULT_ULPS,maxUlps);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=this.table.getEntry(i,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337Integer[]maxUlps=getMaxUlps(i*DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,i+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)getBasicRow(i,i+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=column.getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,i)-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(i,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=matrix.getEntry(i,i)+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctiongraph=(LinearObjectiveFunction)this.getGraph().remove(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=table.getMaxUlps()*DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(i,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaximumUlps()*DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=getMaxUlps()*DEFAULT_ULPS+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337IntegermaxUlps=getMaxUlps()*DEFAULT_ULPS+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(0,i+1,tablesToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnsToDrop.getEntry(0,i+1,table);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337intmaxUlps=column.getMaxUlps()-i;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,i)+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(0,i)-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337LinearObjectiveFunctionf=(LinearObjectiveFunction)this.columnLabels.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=table.getEntry(i,i+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java337finaldoubleentry=columnLabels.getEntry(i,i+1);
