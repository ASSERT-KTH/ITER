projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362if(columnsToDrop!=null){for(inti=columnsToDrop.size()-1;i>=0;i--){matrix[i-1][col++]=column.getEntry(i,j);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362if(columnsToDrop!=null){for(inti=columnsToDrop.size()-1;i>=0;i--){matrix[i-1][col++]=table.getEntry(i,j);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362if(columnsToDrop!=null){for(inti=columnsToDrop.size()-1;i>=0;i--){matrix[i-1][col++]=column.getEntry(i,i);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362if(columnsToDrop!=null){for(inti=columnsToDrop.size()-1;i>=0;i--){matrix[i-1][col++]=table.getEntry(i,i);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362if(columnsToDrop!=null){for(inti=columnsToDrop.size()-1;i>=0;i--){columnLabels[i-1][col++]=table.getEntry(i,i);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362columnLabels.remove((int)columnsToDrop.get(i));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362columnLabels.add((int)columnsToDrop.get(i));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362columnLabels.add((int)columnsToDrop.get(i-1));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362columnLabels.remove((int)columnsToDrop.get(i-1));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362LinearObjectiveFunctionmatrix=(LinearObjectiveFunction)columnsToDrop.get(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.get(i);matrix[i-1][col++]=f.getEntry(i,col);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362LinearObjectiveFunctionf=(LinearObjectiveFunction)columnsToDrop.get(i);matrix[i-1][col++]=f.getEntry(i,j);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362LinearObjectiveFunctionf=(LinearObjectiveFunction)this.tableau.clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362columnLabels.remove((char)columnsToDrop.get(i));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362col=Math.max(col,columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362col=Math.max(col,columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362LinearObjectiveFunctionf=getLinearObjectiveFunction(i);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java362col=(int)columnsToDrop.get(i);
