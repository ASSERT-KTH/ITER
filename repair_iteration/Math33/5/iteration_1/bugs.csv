bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  maxUlps  =  getMaxUlps();  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    int  maxUlps  =  getMaxUlps();  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    int  maxUlps  =  getMaxUlps();		non-compiled	[CE]  ')'  expected	10	None	add
2	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize(f);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize(f);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize(f);		non-compiled	[CE]  ')'  expected	10	None	add
3	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(i);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(i);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(i);		non-compiled	[CE]  ')'  expected	10	None	add
4	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize();  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize();  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize();		non-compiled	[CE]  ')'  expected	10	None	add
5	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize();  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize();  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize();		non-compiled	[CE]  ')'  expected	10	None	add
6	[BUG]  [BUGGY]  columnLabels.add( "NEGATIVE_VAR_COLUMN_LABEL ");  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]  columnLabels.add( "NEGATIVE_VAR_COLUMN_LABEL ");  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	columnLabels.add( "NEGATIVE_VAR_COLUMN_LABEL ");	columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  	non-compiled	[CE]  ')'  expected	9	None	replace
7	[BUG]  [BUGGY]  columnLabels.add( "Negative ");  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]  columnLabels.add( "Negative ");  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	columnLabels.add( "Negative ");	columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  	non-compiled	[CE]  ')'  expected	9	None	replace
8	[BUG]  [BUGGY]  columnLabels.add( "Negative "  +  i);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]  columnLabels.add( "Negative "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	columnLabels.add( "Negative "  +  i);	columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  	non-compiled	[CE]  ')'  expected	9	None	replace
9	[BUG]  [BUGGY]  columnLabels.add( "negative ");  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]  columnLabels.add( "negative ");  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	columnLabels.add( "negative ");	columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  columnLabels.add( "negative "  +  i);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]  columnLabels.add( "negative "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	columnLabels.add( "negative "  +  i);	columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  	non-compiled	[CE]  ')'  expected	9	None	replace
11	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.clone();  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.clone();  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.clone();		non-compiled	[CE]  ')'  expected	10	None	add
12	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.create(f);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.create(f);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.create(f);		non-compiled	[CE]  ')'  expected	10	None	add
13	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null);		non-compiled	[CE]  ')'  expected	10	None	add
14	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.get(this);  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.get(this);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)restrictToNonNegative.get(this);		non-compiled	[CE]  ')'  expected	10	None	add
15	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize(f);  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize(f);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize(f);		non-compiled	[CE]  ')'  expected	10	None	add
16	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(epsilon);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(epsilon);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(epsilon);		non-compiled	[CE]  ')'  expected	10	None	add
17	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.list.get(i);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.list.get(i);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.list.get(i);		non-compiled	[CE]  ')'  expected	10	None	add
18	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null);  [BUGGY]  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	    LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null);		non-compiled	[CE]  ')'  expected	10	None	add
19	[BUG]  [BUGGY]  columnLabels.add( "null ");  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  [BUGGY]  columnLabels.add( "null ");  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	162	162	1	replace	columnLabels.add( "null ");	columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  	non-compiled	[CE]  ')'  expected	9	None	replace
