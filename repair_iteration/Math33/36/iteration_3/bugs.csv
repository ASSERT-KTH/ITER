bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  columnLabels.add( "Ascii "  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Ascii "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Ascii "  +  i);	  columnLabels.add(   "ascii   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  columnLabels.add( "Null "  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Null "  +  i);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Null "  +  i);	  columnLabels.add(   "null   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  columnLabels.add( "A-Z "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "A-Z "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "A-Z "  +  i);	  columnLabels.add(   "A       "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  columnLabels.add( "switch. ",  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "switch. ",  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "switch. ",  i);	  columnLabels.add(   "switch   ",    i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  columnLabels.add( "Switch "  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Switch "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Switch "  +  i);	  columnLabels.add(   "switch   ",    i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  columnLabels.add( "Slack[ "  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Slack[ "  +  i);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Slack[ "  +  i);	  columnLabels.add(   "slack[   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  columnLabels.add( "Z "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Z "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Z "  +  i);	  columnLabels.add(   "a-z   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  columnLabels.add( "maxUlps   "  +  i,  getNumSlackVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "maxUlps   "  +  i,  getNumSlackVariables());  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "maxUlps   "  +  i,  getNumSlackVariables());	  columnLabels.add(   "maxUlps       "    +    i,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  columnLabels.add( "maxUlps   "  +  i,  0,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "maxUlps   "  +  i,  0,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "maxUlps   "  +  i,  0,  DEFAULT_ULPS);	  columnLabels.add(   "maxUlps       "    +    i,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  columnLabels.add( "Switch.   "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Switch.   "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Switch.   "  +  i);	  columnLabels.add(   "switch.   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  columnLabels.add( "switch ".  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "switch ".  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "switch ".  +  i);	  columnLabels.add(   "switch.   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  columnLabels.add( "maxulps: "  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "maxulps: "  +  i);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "maxulps: "  +  i);	  columnLabels.add(   "maxUlps:       "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS. "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS. "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS. "  +  i);	  columnLabels.add(   "yyyy-MM-dd'T'HH:mm:ss.SSS   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  columnLabels.add( "maxulps- "  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "maxulps- "  +  i);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "maxulps- "  +  i);	  columnLabels.add(   "maxUlps-   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS. ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS. ");  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS. ");	  columnLabels.add(   "yyyy-MM-dd'T'HH:mm:ss.SSS   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  columnLabels.add( "null. "  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "null. "  +  i);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "null. "  +  i);	  columnLabels.add(   "null   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  columnLabels.add( "null ",  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "null ",  i);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "null ",  i);	  columnLabels.add(   "null   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  columnLabels.add( "maxUlps   "  +  i,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "maxUlps   "  +  i,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "maxUlps   "  +  i,  NEGATIVE_VAR_COLUMN_LABEL);	  columnLabels.add(   "maxUlps       "    +    i,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  columnLabels.add( "rs "  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "rs "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "rs "  +  i);	  columnLabels.add(   "RHS   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  columnLabels.add( "switch   ",  i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "switch   ",  i  +  1);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "switch   ",  i  +  1);	  columnLabels.add(   "switch   ",    i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  columnLabels.add( "Yyyy-MM-dd'T'HH:mm:ss.SSS ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "Yyyy-MM-dd'T'HH:mm:ss.SSS ");  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "Yyyy-MM-dd'T'HH:mm:ss.SSS ");	  columnLabels.add(   "yyyy-MM-dd'T'HH:mm:ss.SSS   ");    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  columnLabels.add( "ws "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "ws "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "ws "  +  i);	  columnLabels.add(   "w   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  columnLabels.add( "a-Z "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "a-Z "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "a-Z "  +  i);	  columnLabels.add(   "a-z   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  columnLabels.add( ",yyyy-MM-dd'T'HH:mm:ss.SSS "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( ",yyyy-MM-dd'T'HH:mm:ss.SSS "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( ",yyyy-MM-dd'T'HH:mm:ss.SSS "  +  i);	  columnLabels.add(   "yyyy-MM-dd'T'HH:mm:ss.SSS   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  columnLabels.add( "ascii ",  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "ascii ",  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "ascii ",  i);	  columnLabels.add(   "ascii   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  columnLabels.add( "slack[ "  +  i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "slack[ "  +  i  +  1);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "slack[ "  +  i  +  1);	  columnLabels.add(   "slack[   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  columnLabels.add( "a   ",  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "a   ",  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "a   ",  i);	  columnLabels.add(   "switch   ",    i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS ",  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS ",  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS ",  i);	  columnLabels.add(   "yyyy-MM-dd'T'HH:mm:ss.SSS   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  columnLabels.add( "switch:   "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "switch:   "  +  i);  [BUGGY]      }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "switch:   "  +  i);	  columnLabels.add(   "switch.   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  columnLabels.add( "maxUlps:   "  +  i,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {      [BUGGY]  columnLabels.add( "maxUlps:   "  +  i,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "s     "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add(     "a     "  +  i);  }  columnLabels.add(     "RHS     ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "maxUlps:   "  +  i,  DEFAULT_ULPS);	  columnLabels.add(   "maxUlps:       "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
