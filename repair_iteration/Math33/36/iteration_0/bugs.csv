bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
71	[BUG] [BUGGY] columnLabels.add("s" + i); [FE] AssertionError [CONTEXT] columnLabels.add("W"); } columnLabels.add("Z"); for (int i = 0; i < getOriginalNumDecisionVariables(); i++) { columnLabels.add("x" + i); } if (!restrictToNonNegative) { columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL); } for (int i = 0; i < getNumSlackVariables(); i++) { [BUGGY] columnLabels.add("s" + i); [BUGGY] } for (int i = 0; i < getNumArtificialVariables(); i++) { columnLabels.add("a" + i); } columnLabels.add("RHS"); } [CLASS] SimplexTableau [METHOD] initializeColumnLabels [RETURN_TYPE] void  [VARIABLES] boolean restrictToNonNegative RealMatrix tableau double epsilon LinearObjectiveFunction f List columnLabels constraints String NEGATIVE_VAR_COLUMN_LABEL int DEFAULT_ULPS i maxUlps numArtificialVariables numDecisionVariables numSlackVariables long serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] columnLabels.add("W"); } columnLabels.add("Z"); for (int i = 0; i < getOriginalNumDecisionVariables(); i++) { columnLabels.add("x" + i); } if (!restrictToNonNegative) { columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL); } for (int i = 0; i < getNumSlackVariables(); i++) { [BUGGY] [BUGGY] columnLabels.add("s" + i); } for (int i = 0; i < getNumArtificialVariables(); i++) { columnLabels.add("a" + i); } columnLabels.add("RHS"); } [CLASS] SimplexTableau [METHOD] initializeColumnLabels [RETURN_TYPE] void  [VARIABLES] boolean restrictToNonNegative RealMatrix tableau double epsilon LinearObjectiveFunction f List columnLabels constraints String NEGATIVE_VAR_COLUMN_LABEL int DEFAULT_ULPS i maxUlps numArtificialVariables numDecisionVariables numSlackVariables long serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	add	
