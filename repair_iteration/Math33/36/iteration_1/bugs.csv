bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    columnLabels.add( "slack "  +  i);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    columnLabels.add( "slack "  +  i);  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    columnLabels.add( "slack "  +  i);		non-compiled	[CE]  illegal  start  of  expression	72	None	add
2	[BUG]  [BUGGY]    columnLabels.add( "s "  +  i);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    columnLabels.add( "s "  +  i);  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    columnLabels.add( "s "  +  i);		non-compiled	[CE]  illegal  start  of  expression	72	None	add
3	[BUG]  [BUGGY]    columnLabels.add( "maxUlps "  +  i);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    columnLabels.add( "maxUlps "  +  i);  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    columnLabels.add( "maxUlps "  +  i);		non-compiled	[CE]  illegal  start  of  expression	72	None	add
4	[BUG]  [BUGGY]  columnLabels.add( "a "  +  i);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]  columnLabels.add( "a "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "a "  +  i);	columnLabels.add( "s "  +  i);  	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
5	[BUG]  [BUGGY]  columnLabels.add( "x "  +  i);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]  columnLabels.add( "x "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "x "  +  i);	columnLabels.add( "s "  +  i);  	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
6	[BUG]  [BUGGY]  columnLabels.add( "stack "  +  i);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]  columnLabels.add( "stack "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "stack "  +  i);	columnLabels.add( "s "  +  i);  	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
7	[BUG]  [BUGGY]  columnLabels.add( "src "  +  i);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]  columnLabels.add( "src "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "src "  +  i);	columnLabels.add( "s "  +  i);  	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
8	[BUG]  [BUGGY]  columnLabels.add( "switch "  +  i);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]  columnLabels.add( "switch "  +  i);  [BUGGY]  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	columnLabels.add( "switch "  +  i);	columnLabels.add( "s "  +  i);  	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
9	[BUG]  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "s "  +  i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "s "  +  i);  }  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    if(!strictToNonNegative)  {  columnLabels.add( "s "  +  i);  }		non-compiled	[CE]  illegal  start  of  expression	72	None	add
10	[BUG]  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "slack "  +  i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "slack "  +  i);  }  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    if(!strictToNonNegative)  {  columnLabels.add( "slack "  +  i);  }		non-compiled	[CE]  illegal  start  of  expression	72	None	add
11	[BUG]  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "null "  +  i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "null "  +  i);  }  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    if(!strictToNonNegative)  {  columnLabels.add( "null "  +  i);  }		non-compiled	[CE]  illegal  start  of  expression	72	None	add
12	[BUG]  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "stack "  +  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  columnLabels.add( "W ");  }  columnLabels.add( "Z ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add( "x "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  [BUGGY]    if(!strictToNonNegative)  {  columnLabels.add( "stack "  +  i);  }  [BUGGY]  columnLabels.add( "s "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  columnLabels.add( "a "  +  i);  }  columnLabels.add( "RHS ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	165	165	1	replace	    if(!strictToNonNegative)  {  columnLabels.add( "stack "  +  i);  }		non-compiled	[CE]  illegal  start  of  expression	72	None	add
