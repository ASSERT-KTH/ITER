bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess    }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
2	[BUG]  [BUGGY]    matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]    matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  -1);  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess    }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	    matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  -1);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
3	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess    }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
4	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess    }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
5	[BUG]  [BUGGY]    matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]    matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  1);  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess    }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	    matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  1);		non-compiled	[CE]  illegal  start  of  expression	24	None	add
6	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);  [BUGGY]  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);  [BUGGY]  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);  [BUGGY]  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2773500981126146	226	227	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
