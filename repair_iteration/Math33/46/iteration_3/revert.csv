projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRhsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRhsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(negativeVarBasicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRhsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(basicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRhsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).doubleValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).longValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarColumn,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarColumn>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn>0?getBasicRow(positiveVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow!=null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf(".maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.size()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(columnIndex);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column.length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnCount();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.size()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsColumn();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum"+0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicNegative,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicPair,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRowsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRowsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRowsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(colon);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>=null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>=null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow!=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsOffset()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum.");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(normalizedVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(baseRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getColumnsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicNegative,getRhsOffset(),mostNegative);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnsOffset()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnsInset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column.length-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarColumn,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(positiveVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRowIndex(column).intValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(normalizedVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,normalizedVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getColumnsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRowsOffset()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(basicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn>=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn>>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn!=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn==0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum"+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf(".maximum"+0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column.length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(basicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(basicRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(baseRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.size()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.size()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarColumn==0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<0?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(basicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==0?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(basicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(basicRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(positiveVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow!=null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn!=null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=basicRow==null?0:getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=baseRow==null?0:getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(positiveVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,basicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,baseRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMinUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getmaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(columnIndex+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumns());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumn();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsColumn()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublepositiveVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnCount(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(positiveVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(positiveVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getColumnCount());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getColumnIndex());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(columnIndex,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.indexOf(".maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columns.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(basicRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.indexOf(".maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.indexOf("maximum",0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getLeftOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn<0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).doubleValue()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",DEFAULT_ULPS+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",DEFAULT_ULPS-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(positiveVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicColumn,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRowsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getLeftOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(basicRow,getBasicOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicBasicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnsOffset()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnOffset()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnCount()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(columnIndex);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(column+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(column.length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarColumn,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarColumn,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=basicRow==null?0:getEntry(basicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=baseRow==null?0:getEntry(basicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnCount(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnsOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(positiveVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=colLabels.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn==null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublepositiveVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnCount()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(positiveVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(positiveVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(positiveVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getBasicRowsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(basicRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,columnIndex+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(basicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset(),negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow<0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarColumn<0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(columnIndex-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column.length-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column.length+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column.length-2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnRow,columnLabels.length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnRow+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow,columnLabels.length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow,basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum".doubleValue());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum".length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.size()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columns.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.size()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(negativeVarBasicRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getColumnCount());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getRhsOffset()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getColumnSize());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(positiveVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(negativeVarRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(columnRow+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(baseRow,column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnRow-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarBasicRow==null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnOffset(),negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnsOffset(),negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublepositiveVarBasicRow=negativeVarColumn>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),negativeVarBasicColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),negativeVarColumn+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(positiveVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(normalizedVarRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow==null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow!=null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(normalizedVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarBasicRow,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(positiveVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column+1-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.indexOf("maximum"+0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getNegativeVarRowsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow==0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarBasicRow==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow,column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column-1+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column-2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn!=null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarRow,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarBasicRow,getRowsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicNegative,getRhsOffset(),negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getMinUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getColumnLength());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column-1+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column-1-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).floatValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(positiveVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(basicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnsOffset()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegermaxUlps=columnLabels.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(column-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(column)+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getLeftOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),normalized);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(positiveVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getLeftOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>=null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column)-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumn(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.indexOf("maximum",DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicColumn,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicNegative,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicNegative,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getColumnsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>=null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue()/1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column+2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getLeftOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),lowVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),baseVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow<null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow!=null?0:getEntry(positiveVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(positiveVarRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicBasicRow,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.indexOf("maximum",DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarColumn!=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublepositiveVarBasicRow=negativeVarColumn!=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>=0?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),0,negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column-2);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarBasicRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(baseRow,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(positiveVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow!=null?0:getEntry(positiveVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarBasicRow,getRhsOffset()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=positiveVarBasicRow==null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublepositiveVarBasicRow=negativeVarColumn==null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicPair,getRhsOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicPair,getRhsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getColumnsOffset()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getColumnIndex());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),basicRows);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getColumnOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=(this.columnLabels!=null?this.columnLabels.size():0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumn(),positiveVarColumn);
