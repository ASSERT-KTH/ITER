projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRhsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRhsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(negativeVarBasicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRhsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getColumnsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(basicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRhsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getLeftOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).doubleValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).longValue();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarColumn,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(basicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(basicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(columnRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,negativeVarBasicRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=positiveVarColumn>0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn>0?getBasicRow(positiveVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarColumn==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow!=null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarRow==null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf(".maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.indexOf("maximum");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarBasicRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.size()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=this.columnLabels.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columns.size();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=getMaxUlps()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicRow,getColumnOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(columnIndex);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumnRow(column);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column.length);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnCount();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.size()-2;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsColumn();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum"+0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicNegative,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicPair,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow>0?0:getEntry(negativeVarBasicRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerj=getRowsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getColumnOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(basicVarBasicRow,getRhsOffset(),positiveVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow!=null?0:getEntry(negativeVarRow,getColumn());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(positiveVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarRow,getColumnsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRowsOffset();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integerr=getRowsOffset()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow==0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(colon);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow<null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>=null?0:getEntry(negativeVarColumn,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow>=null?0:getEntry(negativeVarRow,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(column).intValue()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarBasicRow,getLeftOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399DoublenegativeVarBasicRow=negativeVarBasicRow!=0?getBasicRow(negativeVarColumn):null;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getRhsOffset()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integercolumn=getColumn(column,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getMaxUlps()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum",DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399intmaxUlps=columnLabels.indexOf("maximum.");
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(normalizedVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399IntegercolIndex=getColumnIndex(baseRow);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow==null?0:getEntry(negativeVarBasicRow,getColumnsOffset()));
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399Integer[]basicRows=getEntry(baseline,getRhsOffset(),negativeVarColumn);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java399doublemostNegative=negativeVarBasicRow<null?0:getEntry(negativeVarRow,getColumn());
