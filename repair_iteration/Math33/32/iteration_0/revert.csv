projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.tableau.setEntry(columnLabels[i-1][col++]);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366intmaxUlps=Math.max(columnLabels.size(),columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366intmaxUlps=Math.max(col,columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.tableau.setEntry(columnLabels[i-1][col++],col);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366intmaxUlps=Math.max(columnLabels.size(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.numArtificialVariables=0;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.numArtificialVariables=1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.numArtificialVariables=DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.numArtificialVariables=columnLabels;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366this.numArtificialVariables=0L;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();j++){columnLabels[j-1][col++]=matrix.getEntry(i,j);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();j++){columnLabels[j-1][col++]=matrix.getEntry(j,col);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();j++){matrix[j-1][col++]=table.getEntry(j,col);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();j++){columnLabels[j-1][col++]=matrix.getEntry(i,col);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();j++){columnLabels[j-1][col++]=table.getEntry(i,j);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();++j){columnLabels.remove((int)columnLabels.get(i));}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();++j){columnLabels.add((int)columnLabels.get(i));}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){matrix[i-1][col++]=column.getEntry(i,j);}else{this.tableau.addChangeListener(this);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){matrix[i-1][col++]=table.getEntry(i,j);}else{this.tableau.addChangeListener(this);}
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java366if(columnLabels!=null){for(intj=0;j<columnsToDrop.size();++j){columnLabels.add((int)columnLabels.get(j));}
