bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  col.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  col.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  col.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  for(int    i    =    col.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  for(int    i    =    col.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  for(int    i    =    columnLabels.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  for(int    i    =    columnLabels.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  colLabels.remove((  int)columnLabels.get(i  -  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  colLabels.remove((  int)columnLabels.get(i  -  1));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	colLabels.remove((  int)columnLabels.get(i  -  1));	  colLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  ColumnLabels  colLabels  =(ColumnLabels)columnLabels.get(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels  colLabels  =(ColumnLabels)columnLabels.get(i);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels  colLabels  =(ColumnLabels)columnLabels.get(i);	  colLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i!=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i!=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnsToDrop.size()  -  1;  i!=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  if(columnLabels!=    null)    {    for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.get((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.get((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  col.size();  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  col.size();  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  col.size();  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.get((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.get((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.get((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  col.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  col.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  col.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  For(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	For(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  For(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  For(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  ColumnLabels.remove(columnLabels.get(0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels.remove(columnLabels.get(0));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels.remove(columnLabels.get(0));	  ColumnLabels.remove(columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columns.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columns.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columns.add((  int)columnLabels.get(i));  }	  for(int    i    =    columnLabels.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(0));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(0));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(0));  }	  if(columnLabels!=    null)    {    for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  this.columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  this.columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  this.columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  for(int    i    =    this.columnLabels.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
24	[BUG]  [BUGGY]  int  i  =  columnLabels.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  columnLabels.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  columnLabels.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
25	[BUG]  [BUGGY]  Integer  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	Integer  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  colLabels.add((  int)columnLabels.get(i  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  colLabels.add((  int)columnLabels.get(i  -  1));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	colLabels.add((  int)columnLabels.get(i  -  1));	  colLabels.add((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  colLabels.add((  int)columnLabels.get(i  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  colLabels.add((  int)columnLabels.get(i  +  1));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	colLabels.add((  int)columnLabels.get(i  +  1));	  colLabels.add((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  columnsToDrop.size();  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  columnsToDrop.size();  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  0;  i  <  columnsToDrop.size();  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  this.columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  this.columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  this.columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  for(int    i    =    this.columnLabels.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  ColumnLabels.remove((  int)columnLabels.get(i  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels.remove((  int)columnLabels.get(i  -  1));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels.remove((  int)columnLabels.get(i  -  1));	  ColumnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  ColumnLabels.remove((  int)columnLabels.get(i),  this.tableau);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels.remove((  int)columnLabels.get(i),  this.tableau);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels.remove((  int)columnLabels.get(i),  this.tableau);	  ColumnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
33	[BUG]  [BUGGY]  int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  this.columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
34	[BUG]  [BUGGY]  int  i  =  columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  columnLabels.size();  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  if(columnLabels!=    null)    {    for(int    i    =    columns.size()    -    1;    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  this.columnLabels.remove((  int)columnLabels.get(i  -  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.columnLabels.remove((  int)columnLabels.get(i  -  1));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	this.columnLabels.remove((  int)columnLabels.get(i  -  1));	  this.columnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
37	[BUG]  [BUGGY]  this.columnLabels.remove((  int)columnLabels.get(0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.columnLabels.remove((  int)columnLabels.get(0));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	this.columnLabels.remove((  int)columnLabels.get(0));	  this.columnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  this.columnLabels.add((  int)columnLabels.get(i));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.columnLabels.add((  int)columnLabels.get(i));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	this.columnLabels.add((  int)columnLabels.get(i));	  this.columnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  col.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  col.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  col.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  for(int    i    =    col.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  Integer  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	Integer  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  For(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  this.columnLabels.remove((  int)columnsToDrop.get(i));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.columnLabels.remove((  int)columnsToDrop.get(i));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	this.columnLabels.remove((  int)columnsToDrop.get(i));	  this.columnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(1));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(1));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(1));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  colLabels.remove((  int)columnsToDrop.get(i));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  colLabels.remove((  int)columnsToDrop.get(i));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	colLabels.remove((  int)columnsToDrop.get(i));	  colLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  colLabels.remove((  int)columnToDrop.get(i));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  colLabels.remove((  int)columnToDrop.get(i));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	colLabels.remove((  int)columnToDrop.get(i));	  colLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  colLabels.add((  int)columnLabels.get(i),  this.maxUlps);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  colLabels.add((  int)columnLabels.get(i),  this.maxUlps);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	colLabels.add((  int)columnLabels.get(i),  this.maxUlps);	  colLabels.add((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  ColumnLabels.remove(columnsToDrop.get(i));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels.remove(columnsToDrop.get(i));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels.remove(columnsToDrop.get(i));	  ColumnLabels.remove(columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
47	[BUG]  [BUGGY]  ColumnLabels  columnLabels  =  columnLabels.get(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels  columnLabels  =  columnLabels.get(i);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels  columnLabels  =  columnLabels.get(i);	  if(columnLabels!=    null)    {    for(int    i    =    columnLabels.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
48	[BUG]  [BUGGY]  if(columnLabels!=  null)  {  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  if(columnLabels!=  null)  {  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	if(columnLabels!=  null)  {  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  if(columnLabels!=    null)    {    for(int    i    =    columnLabels.size()    -    1;    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  if(columnLabels!=  null)  {  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  if(columnLabels!=  null)  {  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	if(columnLabels!=  null)  {  for(int  i  =  columns.size();  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  if(columnLabels!=    null)    {    for(int    i    =    columns.size()    -    1;    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
50	[BUG]  [BUGGY]  ColumnLabels.remove((  int)columnsToDrop.get(i));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels.remove((  int)columnsToDrop.get(i));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels.remove((  int)columnsToDrop.get(i));	  ColumnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columns.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  for(int    i    =    columnLabels.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  this.columnLabels.remove((  int)columnLabels.get(i  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.columnLabels.remove((  int)columnLabels.get(i  +  1));  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	this.columnLabels.remove((  int)columnLabels.get(i  +  1));	  this.columnLabels.remove((    int)columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  float  i  =  columnsToDrop.size();  i  >=  0;  i--)  {  columnLabels.add((  float)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  float  i  =  columnsToDrop.size();  i  >=  0;  i--)  {  columnLabels.add((  float)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	float  i  =  columnsToDrop.size();  i  >=  0;  i--)  {  columnLabels.add((  float)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(0));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(0));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  columnsToDrop.size()  -  2;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  columnsToDrop.size()  -  2;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  columnsToDrop.size()  -  2;  i  >=  0;  i--)  {  columnLabels.add((  int)columnLabels.get(i));  }	  For(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.add((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  ColumnLabels.remove(columnLabels.get(i),  this.tableau);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  ColumnLabels.remove(columnLabels.get(i),  this.tableau);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	ColumnLabels.remove(columnLabels.get(i),  this.tableau);	  ColumnLabels.remove(columnLabels.get(i));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	for(int  i  =  rowsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  for(int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.24253562503633297	367	367	1	replace	int  i  =  columnLabels.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((  int)columnLabels.get(i));  }	  int    i    =    columnsToDrop.size();    i    >=    0;    i--)    {    columnLabels.remove((    int)columnLabels.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
