bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.EQ)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.EQ)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  0);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  3);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  3);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    3);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LE    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQUIP)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQUIP)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  -1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQUIP)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LE    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  height++,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  height++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  height++,  0);	  matrix.setEntry(0,    getSlackVariableOffset()    +    width++,    0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
12	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
13	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVar()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVar()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVar()  +  slackVar++,  1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
14	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQUIP)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQUIP)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQUIP)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LE    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  2);	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
16	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  1);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
17	[BUG]  [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    0);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.EQ)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    0);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.EQ)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ)  {	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
21	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.EQ)  {	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
22	[BUG]  [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  width++,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  width++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getColumnVariableOffset()  +  width++,  0);	  matrix.setEntry(row,    getColumnVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getColumnVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  0);	  matrix.setEntry(row,    getColumnVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
25	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  0);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
26	[BUG]  [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  0);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
27	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVar()  +  slackVar++,  1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  -1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
31	[BUG]  [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
33	[BUG]  [BUGGY]  matrix.setEntry(0,  getLowerVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getLowerVariableOffset()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getLowerVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
34	[BUG]  [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getRowVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  width++,  -1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  width++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getRowVariableOffset()  +  width++,  -1);	  matrix.setEntry(row,    getRowVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
36	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  0);	  matrix.setEntry(row,    getSlackVariableOffset()    +    width++,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  -1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
39	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  -1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
40	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  -1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  0);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerCoefficientSum()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getLowerCoefficientSum()  +  slackVar++,  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getLowerCoefficientSum()  +  slackVar++,  1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getLowVariableOffset()  +  slackVar++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getLowVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getRowVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
44	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getRowVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  slackVar++,  0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  slackVar++,  0);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
46	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(0,    getSlackVariableOffset()    +    width++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
47	[BUG]  [BUGGY]  matrix.setEntry(1,  getInvertedCoefficientSum()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(1,  getInvertedCoefficientSum()  +  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(1,  getInvertedCoefficientSum()  +  slackVar++,  0);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  -1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  -1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    width++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  -1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getRowVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
50	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  2);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack    }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  2);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
51	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (!restrictToNonNegative)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2672612419124244	224	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  0);//  slack  }  else  if(constraint.getRelationship()  ==  Relationship.LE	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);//    slack    }    else    if(constraint.getRelationship()    ==    Relationship.LE    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
