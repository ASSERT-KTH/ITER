bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getColumnVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(getArtificialVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(getArtificialVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(getArtificialVariableOffset()  +  slackVar++,  1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  matrix.setEntry(0,  getArtificialVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getArtificialVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getArtificialVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);	      matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVar()  +  slackVar++,  1);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  2);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  2);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVar()  +  slackVar++,  2);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVar()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getSlackVar()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getSlackVar()  +  slackVar++,  -1);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  3);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  3);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVar()  +  slackVar++,  3);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  1);	      matrix.setEntry(row,    getSlideVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  2);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  2);	      matrix.setEntry(row,    getSlideVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlideVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getSlideVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getSlideVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getSlideVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlideVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(row,    getSlideVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(0,  getRowVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getRowVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getRowVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getRowVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  matrix.setEntry(0,  getNegativeVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getNegativeVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getNegativeVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  matrix.setEntry(0,  getNegativeVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getNegativeVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getNegativeVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);	      matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getNegativeVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getStandardVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVar()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVar()  +  slackVar++,  0);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getStandardVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getArtificialVariableOffset()    +    artificialVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);	      matrix.setEntry(row,    getSlackVar()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  0);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  0);	      matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar++,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar++,  1);	  matrix.setEntry(0,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  artificialVar++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  artificialVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(1,  getArtificialVariableOffset()  +  artificialVar++,  1);	  matrix.setEntry(1,    getArtificialVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  -1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  -1);  [BUGGY]    matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(1,  getArtificialVariableOffset()  +  slackVar++,  -1);	      matrix.setEntry(row,    getArtificialVariableOffset()    +    slackVar++,    -1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  artificialVar++,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {    [BUGGY]  matrix.setEntry(row,  getNegativeVariableOffset()  +  artificialVar++,  1);  [BUGGY]    matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  }  return  matrix;  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	232	232	1	replace	matrix.setEntry(row,  getNegativeVariableOffset()  +  artificialVar++,  1);	  matrix.setEntry(row,    getArtificialVariableOffset()    +    artificialVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
