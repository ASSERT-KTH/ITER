bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
7	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1++,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1++,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1++,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
8	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
11	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getRowRealMatrix();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getRowRealMatrix();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.getRowRealMatrix();	  Array2DRowRealMatrix    matrix    =    constraints.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
12	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
13	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
14	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
15	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  i++,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  i++,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  i++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
19	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
20	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
21	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    height    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
22	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    height    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  4  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  4  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  4  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    height    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
24	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    height    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getColumnReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getColumnReal();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraint.getColumnReal();	  Array2DRowRealMatrix    matrix    =    constraint.getRowReal();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
26	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getRowReal();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getRowReal();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.getRowReal();	  Array2DRowRealMatrix    matrix    =    constraint.getRowReal();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
27	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
28	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
29	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
30	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
31	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
32	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
33	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
34	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
35	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
36	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  SlackVar  slackVar  =  constraint.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  SlackVar  slackVar  =  constraint.getValue();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	SlackVar  slackVar  =  constraint.getValue();	  slackVar    =    constraint.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
39	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    *    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
40	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  /  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    *    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
41	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getNegativeCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
42	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
43	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  slackVar,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  slackVar,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  /  slackVar,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.get(row);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.get(row);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraint.get(row);	  Array2DRowRealMatrix    matrix    =    constraints.get(row);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
47	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVarOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    width    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
48	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getGraph();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getGraph();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraints.getGraph();	  Array2DRowRealMatrix    graph    =    constraint.getGraph();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
51	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedWidth(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedWidth(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedWidth(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
54	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
55	[BUG]  [BUGGY]  int  width  =  constraint.getWidth()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  width  =  constraint.getWidth()  +  1;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  width  =  constraint.getWidth()  +  1;	  int    width    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
56	[BUG]  [BUGGY]  int  width  =  constraint.getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  width  =  constraint.getWidth()  -  1;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  width  =  constraint.getWidth()  -  1;	  int    width    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
57	[BUG]  [BUGGY]  int  width  =  constraint.getHeight();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  width  =  constraint.getHeight();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  width  =  constraint.getHeight();	  int    width    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
58	[BUG]  [BUGGY]  int  width  =  constraint.getWidth()  -  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  width  =  constraint.getWidth()  -  2;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  width  =  constraint.getWidth()  -  2;	  int    width    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
59	[BUG]  [BUGGY]  double  height  =  constraint.getWidth();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  height  =  constraint.getWidth();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getWidth();	  int    height    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
60	[BUG]  [BUGGY]  int  height  =  constraint.getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getWidth()  -  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getWidth()  -  1;	  int    height    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
61	[BUG]  [BUGGY]  int  height  =  constraint.getWidth()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getWidth()  +  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getWidth()  +  1;	  int    height    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
62	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnReal();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnReal();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnReal();	  Array2DRowRealMatrix    graph    =    constraint.getRowReal();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
63	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataReal();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getDataReal();	  Array2DRowRealMatrix    graph    =    constraint.getRowReal();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowReal();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraints.getRowReal();	  Array2DRowRealMatrix    graph    =    constraint.getRowReal();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar  +  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar  +  1);	  Array2DRowRealMatrix    matrix    =    constraints.get(i,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
66	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar,  height);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar,  height);	  Array2DRowRealMatrix    matrix    =    constraints.get(i,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
67	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  row);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  row);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  row);	  Array2DRowRealMatrix    matrix    =    constraints.get(i,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
68	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  height);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  height);	  Array2DRowRealMatrix    matrix    =    constraints.get(i,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
69	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar++,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar++,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar++,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
70	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  constraint.getValue(),  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  constraint.getValue(),  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  constraint.getValue(),  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
71	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
72	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
73	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
74	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1  *  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2    *    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2    *    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  4  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  4  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  4  *  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2    *    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3  *  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2    *    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
78	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    artificialVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
79	[BUG]  [BUGGY]  math.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  math.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	math.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    artificialVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
80	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
81	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
82	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
83	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
84	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(i  +  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  constraint  =  constraints.get(i  +  1);	  Array2DRowRealMatrix    constraint    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
87	[BUG]  [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(0);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  constraint  =  constraints.get(0);	  Array2DRowRealMatrix    constraint    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
88	[BUG]  [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(i  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(i  +  2);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  constraint  =  constraints.get(i  +  2);	  Array2DRowRealMatrix    constraint    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
89	[BUG]  [BUGGY]  double  height  =  constraint.getHeight();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  height  =  constraint.getHeight();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getHeight();	  double    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  double  height  =  constraint.getLowerCase();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  height  =  constraint.getLowerCase();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getLowerCase();	  double    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
91	[BUG]  [BUGGY]  double  height  =  constraint.getSize();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  height  =  constraint.getSize();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getSize();	  double    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
92	[BUG]  [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum()  +  1;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum()  +  1;	  InvertedCoefficientSum    slackVar    =    constraint.getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
93	[BUG]  [BUGGY]  InvertedCoefficientSum  slackVar  =  constraints.getInvertedCoefficientSum();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  InvertedCoefficientSum  slackVar  =  constraints.getInvertedCoefficientSum();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	InvertedCoefficientSum  slackVar  =  constraints.getInvertedCoefficientSum();	  InvertedCoefficientSum    slackVar    =    constraint.getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
94	[BUG]  [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getNegativeCoefficientSum();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getNegativeCoefficientSum();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	InvertedCoefficientSum  slackVar  =  constraint.getNegativeCoefficientSum();	  InvertedCoefficientSum    slackVar    =    constraint.getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
95	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
96	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
97	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
98	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
99	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
100	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  1  +  slackVar  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  1  +  slackVar  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  1  +  slackVar  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    1    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
101	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    1    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
102	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  width  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  width  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  width  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    1    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
103	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
104	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
105	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
106	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
107	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
108	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
109	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
110	[BUG]  [BUGGY]  int  height  =  constraint.getSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getSize()  +  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getSize()  +  1;	  int    height    =    constraint.getSize();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
111	[BUG]  [BUGGY]  int  height  =  constraint.getSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getSize()  -  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getSize()  -  1;	  int    height    =    constraint.getSize();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
112	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    height,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
113	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  width,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  width,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  width,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    height,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
114	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVarOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
115	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVar()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVar()  +  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVar()  +  1;	  slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
116	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVar(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVar(0);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVar(0);	  slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
117	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVar()  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVar()  +  2;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVar()  +  2;	  slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
118	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
119	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
120	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
121	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
124	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
125	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
126	[BUG]  [BUGGY]  double  width  =  constraint.getWidth();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getWidth();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getWidth();	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
127	[BUG]  [BUGGY]  double  width  =  constraint.getSize();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getSize();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getSize();	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
128	[BUG]  [BUGGY]  double  width  =  constraint.getSum();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getSum();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getSum();	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
129	[BUG]  [BUGGY]  double  width  =  constraint.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getValue()  -  1;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getValue()  -  1;	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
130	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix();	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
131	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix();	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
132	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
133	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
134	[BUG]  [BUGGY]  matrix.setEntry(row,  getSize()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSize()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSize()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
135	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
137	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
138	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(1);	  Array2DRowRealMatrix    matrix    =    constraints.get(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
139	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
140	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  1);  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
141	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset(),    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
142	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getInvertedCoefficientSum());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
143	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getInvertedCoefficientSum());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
144	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
145	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
146	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series,  artificialVar);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series,  artificialVar);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(series,  artificialVar);	  Array2DRowRealMatrix    matrix    =    constraints.get(series);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
147	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series  +  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(series  +  1);	  Array2DRowRealMatrix    matrix    =    constraints.get(series);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
148	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  4,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
149	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  2,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
150	[BUG]  [BUGGY]  int  height  =  constraint.getHeight()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getHeight()  +  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getHeight()  +  1;	  int    height    =    constraint.getHeight();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
151	[BUG]  [BUGGY]  int  height  =  constraint.getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getHeight()  -  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getHeight()  -  1;	  int    height    =    constraint.getHeight();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
152	[BUG]  [BUGGY]  int  height  =  constraint.getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getHeight()  -  2;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getHeight()  -  2;	  int    height    =    constraint.getHeight();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  int  height  =  constraint.getHeight()  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getHeight()  +  2;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getHeight()  +  2;	  int    height    =    constraint.getHeight();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
154	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
155	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
156	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
157	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getWidth()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getWidth()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getWidth()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
158	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getEmptyValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getEmptyValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getEmptyValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
159	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getEpsilon()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getEpsilon()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getEpsilon()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
160	[BUG]  [BUGGY]  int  height  =  constraint.getLength()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getLength()  -  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getLength()  -  1;	  int    height    =    constraint.getLength();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
161	[BUG]  [BUGGY]  int  height  =  constraint.getLength()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getLength()  +  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getLength()  +  1;	  int    height    =    constraint.getLength();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
162	[BUG]  [BUGGY]  int  height  =  constraint.getLength()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getLength()  -  2;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getLength()  -  2;	  int    height    =    constraint.getLength();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
163	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
164	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
165	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
166	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
167	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
168	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
169	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
170	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getColumnRealMatrix();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getColumnRealMatrix();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraint.getColumnRealMatrix();	  Array2DRowRealMatrix    matrix    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
171	[BUG]  [BUGGY]  slackVar  =  constraint.getColumnValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getColumnValue();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getColumnValue();	  slackVar    =    constraint.getRowValue();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
172	[BUG]  [BUGGY]  slackVar  =  constraint.getRowValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getRowValue()  +  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getRowValue()  +  1;	  slackVar    =    constraint.getRowValue();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
173	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
174	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
175	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
176	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
177	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
178	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
179	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
180	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
181	[BUG]  [BUGGY]  int  height  =  constraints.getHeight();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraints.getHeight();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraints.getHeight();	  int    height    =    constraints.getValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
182	[BUG]  [BUGGY]  int  height  =  constraints.get(i);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraints.get(i);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraints.get(i);	  int    height    =    constraints.getValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
183	[BUG]  [BUGGY]  int  height  =  constraints.getLength();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraints.getLength();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraints.getLength();	  int    height    =    constraints.getValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
184	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  1;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVariableOffset()  +  1;	  slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
185	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVariable();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVariable();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVariable();	  slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
186	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  2;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVariableOffset()  +  2;	  slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
187	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  width,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  width,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  width,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    height,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
188	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  0,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    height,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
189	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  i++,  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  i++,  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  i++,  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
190	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
191	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
192	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
193	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
194	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
196	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  getNegativeCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
197	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  computeInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  computeInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  computeInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
198	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
200	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  0);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
201	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
202	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
203	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  0,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  0,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  0,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
204	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(invertedVar);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(invertedVar);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(invertedVar);	  Array2DRowRealMatrix    matrix    =    constraints.get(row);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
205	[BUG]  [BUGGY]  matrix.setEntry(columnLabels,  width  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(columnLabels,  width  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(columnLabels,  width  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
206	[BUG]  [BUGGY]  matrix.setEntry(row,  getSimpleVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSimpleVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSimpleVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
207	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix();	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
208	[BUG]  [BUGGY]  matrix.setEntry(columnLabels,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(columnLabels,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(columnLabels,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    width    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
209	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  computeInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  computeInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  computeInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    height,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
210	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getRowRealMatrix(row);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getRowRealMatrix(row);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraint.getRowRealMatrix(row);	  Array2DRowRealMatrix    matrix    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
211	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
212	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    height    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
213	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  slackVar;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  slackVar;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVariableOffset()  +  slackVar;	  slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
214	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  row;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVariableOffset()  +  row;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVariableOffset()  +  row;	  slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
215	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRow();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRow();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRow();	  Array2DRowRealMatrix    graph    =    constraint.getGraph();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getNegativeFunction();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getNegativeFunction();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getNegativeFunction();	  Array2DRowRealMatrix    graph    =    constraint.getGraph();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
217	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    *    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
218	[BUG]  [BUGGY]  double  height  =  constraint.getLowValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  height  =  constraint.getLowValue();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getLowValue();	  double    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
219	[BUG]  [BUGGY]  double  height  =  constraint.getSlackVar();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  height  =  constraint.getSlackVar();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getSlackVar();	  double    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
220	[BUG]  [BUGGY]  matrix.setEntry(row,  getNumSlackVariables()  +  slackVar,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getNumSlackVariables()  +  slackVar,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getNumSlackVariables()  +  slackVar,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
221	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
222	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
223	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
224	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getCoefficients());  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
225	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getEpsilon());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getEpsilon());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getEpsilon());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
226	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getCoefficients());  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
227	[BUG]  [BUGGY]  slackVar  =  constraint.getLowValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getLowValue();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getLowValue();	  slackVar    =    constraint.getRowValue();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
228	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
229	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
230	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  3);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  3);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i  +  3);	  Array2DRowRealMatrix    matrix    =    constraints.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
231	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
232	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
233	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
234	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
235	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
236	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
237	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
238	[BUG]  [BUGGY]  int  height  =  constraint.getWidth()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraint.getWidth()  -  2;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getWidth()  -  2;	  int    height    =    constraint.getWidth();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
239	[BUG]  [BUGGY]  matrix.setEntry(columnLabels,  width  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(columnLabels,  width  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(columnLabels,  width  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
240	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height  *  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2    *    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
241	[BUG]  [BUGGY]  double  width  =  constraint.getDecimalVariables();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getDecimalVariables();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getDecimalVariables();	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
242	[BUG]  [BUGGY]  double  width  =  constraint.getSumMatrix();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getSumMatrix();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getSumMatrix();	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
243	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
244	[BUG]  [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum(0);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum(0);	  InvertedCoefficientSum    slackVar    =    constraint.getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
245	[BUG]  [BUGGY]  slackVar  =  constraint.getValue()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getValue()  *  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getValue()  *  1;	  slackVar    =    constraint.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
246	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
247	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
248	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
249	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
250	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  height,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
251	[BUG]  [BUGGY]  matrix.setEntry(row,  getNegativeCoefficientSum()  -  1,  constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getNegativeCoefficientSum()  -  1,  constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getNegativeCoefficientSum()  -  1,  constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
252	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  *  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  *  2);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i  *  2);	  Array2DRowRealMatrix    matrix    =    constraints.get(i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
253	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
254	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
255	[BUG]  [BUGGY]  matrix.setEntry(row,  getSimpleVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSimpleVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSimpleVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
256	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
257	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
258	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
259	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getObjectiveFunction();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getObjectiveFunction();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.getObjectiveFunction();	  Array2DRowRealMatrix    matrix    =    constraints.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
260	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getInvertedCoefficientSum());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
261	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getInvertedCoefficientSum());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
262	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
263	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVar(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVar(i);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVar(i);	  slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
264	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  constraint.getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
265	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
266	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
267	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getData();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getData();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraints.getData();	  Array2DRowRealMatrix    graph    =    constraints.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
268	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
269	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    width    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
270	[BUG]  [BUGGY]  if(maxUlps  >  0)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  if(maxUlps  >  0)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  }  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	if(maxUlps  >  0)  {  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  }	  matrix.setEntry(row,    width    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
271	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    height    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
272	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
273	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
274	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()),  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()),  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()),  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    ArtificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
275	[BUG]  [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(row);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(row);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  constraint  =  constraints.get(row);	  Array2DRowRealMatrix    constraint    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
276	[BUG]  [BUGGY]  double  width  =  constraint.getDecimalValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  double  width  =  constraint.getDecimalValue();  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getDecimalValue();	  double    width    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
277	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  1,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  1,  constraint.getCoefficients());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  1,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    constraint.getCoefficients());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
278	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVar(row);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  slackVar  =  constraint.getSlackVar(row);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVar(row);	  slackVar    =    constraint.getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
279	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  /  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    ArtificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
280	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
281	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
282	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
283	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar++,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar++,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar++,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
284	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    height,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
285	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  constraint.getValue());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
286	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
287	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
288	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  1);  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
289	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getCoefficients()));  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
290	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series)+  1;  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(series)+  1;	  Array2DRowRealMatrix    matrix    =    constraints.get(series);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
291	[BUG]  [BUGGY]  matrix.setEntry(0,  row  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(0,  row  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(0,  row  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    width    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
292	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  row,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
293	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getOptionalCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getOptionalCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getOptionalCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
294	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
295	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  row,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  row,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  row,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
296	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  0  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  0  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  0  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset(),    1    +    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
297	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
298	[BUG]  [BUGGY]  int  height  =  constraints.size();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  int  height  =  constraints.size();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraints.size();	  int    height    =    constraints.getValue();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
299	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(row  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(row  +  2);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(row  +  2);	  Array2DRowRealMatrix    matrix    =    constraints.get(i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
300	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getData();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getData();  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getData();	  Array2DRowRealMatrix    graph    =    constraint.getRowReal();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
301	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
302	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
303	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(row  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(row  +  1);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(row  +  1);	  Array2DRowRealMatrix    matrix    =    constraints.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
304	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  1,  artificialVar);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  1,  artificialVar);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i  +  1,  artificialVar);	  Array2DRowRealMatrix    matrix    =    constraints.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
305	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
306	[BUG]  [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum()  +  artificialVar;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum()  +  artificialVar;  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum()  +  artificialVar;	  InvertedCoefficientSum    slackVar    =    constraint.getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
307	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
308	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
309	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar,  DEFAULT_ULPS);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar,  DEFAULT_ULPS);	  Array2DRowRealMatrix    matrix    =    constraints.get(i,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
310	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar++);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar++);  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar++);	  Array2DRowRealMatrix    matrix    =    constraints.get(i,    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
311	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getInvertedCoefficientSum());  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getInvertedCoefficientSum());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
312	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
313	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  row,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    row,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
