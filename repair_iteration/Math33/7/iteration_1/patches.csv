bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  width  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1);  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getCoefficients());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  height  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  2  *  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  int  height  =  constraint.getHeight();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  int  height  =  constraint.getHeight();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getHeight();	      int    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  double  height  =  constraint.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  double  height  =  constraint.getValue();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  height  =  constraint.getValue();	      int    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
22	[BUG]  [BUGGY]  int  height  =  constraint.getSize();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  int  height  =  constraint.getSize();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getSize();	      int    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  int  height  =  constraints.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  int  height  =  constraints.getValue();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraints.getValue();	      int    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix();	      Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getGraph();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getGraph();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getGraph();	      Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowReal();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowReal();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowReal();	      Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  slackVar  =  constraint.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  slackVar  =  constraint.getValue()  +  1;  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getValue()  +  1;	      slackVar    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  slackVar  =  constraint.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  slackVar  =  constraint.getValue()  -  1;  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getValue()  -  1;	      slackVar    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  slackVar  =  constraint.getValue()  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  slackVar  =  constraint.getValue()  +  2;  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getValue()  +  2;	      slackVar    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  1);  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i  +  1);	      Array2DRowRealMatrix    matrix    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
31	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(0);  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(0);	      Array2DRowRealMatrix    matrix    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i  +  2);  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i  +  2);	      Array2DRowRealMatrix    matrix    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getRowRealMatrix();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getRowRealMatrix();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraint.getRowRealMatrix();	      Array2DRowRealMatrix    matrix    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getDataRef();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.getDataRef();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.getDataRef();	      Array2DRowRealMatrix    matrix    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getRowReal();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraint.getRowReal();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraint.getRowReal();	      Array2DRowRealMatrix    matrix    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getCoefficients());  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getCoefficients()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  width  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  matrix.setEntry(row,  width  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  width  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  width  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVariableOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  slackVar  =  constraint.getSlackVariableOffset();  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVariableOffset();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getValue());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getValue());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar++,  constraint.getValue());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(i);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  constraint  =  constraints.get(i);  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  constraint  =  constraints.get(i);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(row);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(row);  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(row);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  int  width  =  constraint.getWidth();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  int  width  =  constraint.getWidth();  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  width  =  constraint.getWidth();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar);  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(i,  artificialVar);	      Array2DRowRealMatrix    matrix    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getInvertedCoefficientSum());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getInvertedCoefficientSum());  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getInvertedCoefficientSum());	  matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  1  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset(),  1  +  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset(),  1  +  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getDataRef();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getDataRef();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  graph  =  constraints.getDataRef();	      Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  int  height  =  constraint.getLength();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  int  height  =  constraint.getLength();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getLength();	      int    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  slackVar  =  constraint.getSlackVar();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  slackVar  =  constraint.getSlackVar();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getSlackVar();	      slackVar    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  slackVar  =  constraint.getRowValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  slackVar  =  constraint.getRowValue();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	slackVar  =  constraint.getRowValue();	      slackVar    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  height,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  ArtificialVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getDataRef()));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getCoefficients()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getCoefficients()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getNegativeCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
85	[BUG]  [BUGGY]  int  height  =  constraint.getWidth();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  int  height  =  constraint.getWidth();  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	int  height  =  constraint.getWidth();	      int    height    =    constraint.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  row,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    -    artificialVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
88	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  ArtificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getNegativeCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    getNegativeCoefficientSum(constraint.getValue()));    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));	      matrix.setEntry(row,    getSlackVariableOffset()    -    1,    constraint.getValue());    getInvertedCoefficientSum(constraint.getValue()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  matrix  =  constraints.get(series);  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	Array2DRowRealMatrix  matrix  =  constraints.get(series);	      Array2DRowRealMatrix    matrix    =    constraints.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
92	[BUG]  [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum();  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	InvertedCoefficientSum  slackVar  =  constraint.getInvertedCoefficientSum();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  double  width  =  constraint.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  double  width  =  constraint.getValue();  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	double  width  =  constraint.getValue();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
94	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]    getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  artificialVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
