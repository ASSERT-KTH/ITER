bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(constraint.getCoefficients()));	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  getInvertedCoefficientSum(constraint.getCoefficients()));	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	  	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));		non-compiled	[CE]  illegal  start  of  expression	14	None	add
7	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  constraint.getValue());  getInvertedCoefficientSum(constraint.getValue()));		non-compiled	[CE]  illegal  start  of  expression	14	None	add
8	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getDataRef()));		non-compiled	[CE]  illegal  start  of  expression	14	None	add
9	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  artificialVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getInvertedCoefficientSum(constraint.getValue()));		non-compiled	[CE]  illegal  start  of  expression	14	None	add
12	[BUG]  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getNegativeCoefficientSum(constraint.getValue()));  getNegativeCoefficientSum(constraint.getValue()));		non-compiled	[CE]  illegal  start  of  expression	14	None	add
13	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  constraints.get(i);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  constraints.get(i);  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    Array2DRowRealMatrix  matrix  =  constraints.get(i);		non-compiled	[CE]  illegal  start  of  expression	14	None	add
14	[BUG]  [BUGGY]    Array2DRowRealMatrix  graph  =  constraint.getDataRef();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    Array2DRowRealMatrix  graph  =  constraint.getDataRef();  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    Array2DRowRealMatrix  graph  =  constraint.getDataRef();		non-compiled	[CE]  illegal  start  of  expression	14	None	add
15	[BUG]  [BUGGY]    slackVar  =  constraint.getValue();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    slackVar  =  constraint.getValue();  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    slackVar  =  constraint.getValue();		non-compiled	[CE]  illegal  start  of  expression	14	None	add
16	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  constraint.getDataRef();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  constraint.getDataRef();  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    Array2DRowRealMatrix  matrix  =  constraint.getDataRef();		non-compiled	[CE]  illegal  start  of  expression	14	None	add
17	[BUG]  [BUGGY]    int  height  =  constraint.getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]    int  height  =  constraint.getValue();  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  1,      getInvertedCoefficientSum(constraint.getCoefficients()));  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	    int  height  =  constraint.getValue();		non-compiled	[CE]  illegal  start  of  expression	14	None	add
18	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  copyArray(constraint.getCoefficients().toArray(),  matrix.getDataRef()[row]);  if  (!restrictToNonNegative)  {  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	215	216	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  -  slackVar,  getInvertedCoefficientSum(constraint.getCoefficients()));	matrix.setEntry(row,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(constraint.getCoefficients()));  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
