projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaximumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getNumObjectiveFunctions(),columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getNumArtificialVariables(),columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumArtificialVariables();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumColumns();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumSlackVariables();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions()-1;i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaximumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctionf=table.getFunction(null);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getNumObjectiveFunctions();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions();i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=1;i<getNumObjectiveFunctions();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.reverse(columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Table<Integer,Integer>table=getTable();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctiongraph=getBasicTable();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntryFunctions();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getMaxUlps(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),columnsToDrop.size()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Table<Integer,Integer>table=getTable().getTables();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Table<Integer,Integer>table=this.getTable();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Table<Integer,Integer>table=getTable().cloneTree();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions();i<columnLabels.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions();i<columnsToDrop.size()-1;i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions().length;i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaximumUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaximumUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMinimumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnLabels,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnLabels,col);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnLabels,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumDecisionVariables();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumArtificialVariables();i<0;i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctiongraph=getGraph();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctiongraph=getBasicTable().getGraph();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctiongraph=getTable();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaxUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaxUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=columnLabels.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctionf=table.getFunction(null,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctionf=table.getFunction(this);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctionf=table.getFunction(columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctionf=table.getFunction(null,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions().length-1;i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumArtificialVariables()-1;i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaximumUlps()+1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaximumUlps()-1;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=columnLabels.getMaximumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getNumArtificialVariables(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getNumArtificialVariables(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getMaxUlps();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getColumns();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.reverse(columnLabels,columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.reverse(columnLabels,columnLabels);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.reverse(columnLabels,col);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),getMaxUlps()+1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getMaxUlps(),getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),getMaxUlps()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getMaxUlps(),getMaxUlps()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumColumns()-1;i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumColumns();i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getNumArtificialVariables();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumArtificialVariables();i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=1;i<getMaxUlps();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=1;i<getColumns();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getNumObjectiveFunctions(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getNumObjectiveFunctions(),columnsToDrop.size()-1);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getNumEntryFunctions();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntryFunctions();i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctionf=table.getFunction(null,null);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getNumObjectives();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getNumSlackVariables();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=table.getMaxUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctiongraph=getGraphicTable();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336LinearObjectiveFunctiongraph=getPhase();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(getMaxUlps(),getMinUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumVariables();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions();i<this.columnLabels.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectiveFunctions();i<table.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=0;i<getArtificialVariables();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getNumObjectiveFunctions(),columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnLabels,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnsToDrop);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Table<Integer,Integer>table=getTable().clone();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumColumns();i<=getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumObjectives();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.reverse(columnLabels,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.reverse(columnLabels,0);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaximumUlps()/DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=1;i<getNumSlackVariables();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=1;i<getNumObjectives();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.min(columnsToDrop.size(),getMaxUlps());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumSlackVariables()-1;i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336For(inti=getNumObjectiveFunctions();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=matrix.getMaximumUlps()/DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntryCount();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntrySize();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntries();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=getMaximumUlps()*DEFAULT_ULPS;
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntryFunctions();i<table.getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntryFunctions();i<columnLabels.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Collections.sort(columnLabels,DEFAULT_ULPS);
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(getNumArtificialVariables(),columnsToDrop.size());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(columnsToDrop.size(),getNumArtificialVariables());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=table.getMaximumUlps();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336intmaxUlps=Math.max(columnsToDrop.size(),getNumObjectiveFunctions());
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336Table<Integer,Integer>table=getTable().getTable();
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntryVariables();i<getArtificialVariableOffset();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getPhase();i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getSize();i<columnsToDrop.size();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=1;i<getNumEntryFunctions();i++){
projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java336for(inti=getNumEntrySlackVariables();i<getArtificialVariableOffset();i++){
