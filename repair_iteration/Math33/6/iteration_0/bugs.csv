bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] matrix.setEntry(zIndex, getSlackVariableOffset() - 1, getInvertedCoefficientSum(objectiveCoefficients)); [FE] AssertionError [CONTEXT] } int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1; matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1); RealVector objectiveCoefficients = maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients(); copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]); matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm()); if (!restrictToNonNegative) { [BUGGY] matrix.setEntry(zIndex, getSlackVariableOffset() - 1,    getInvertedCoefficientSum(objectiveCoefficients)); [BUGGY] getInvertedCoefficientSum(objectiveCoefficients)); }  int slackVar = 0; int artificialVar = 0; for (int i = 0; i < constraints.size(); i++) { LinearConstraint constraint = constraints.get(i); int row = getNumObjectiveFunctions() + i;  [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] RealMatrix  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau Array2DRowRealMatrix matrix double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f LinearConstraint constraint List columnLabels constraints String NEGATIVE_VAR_COLUMN_LABEL int DEFAULT_ULPS artificialVar height i maxUlps numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex long serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1; matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1); RealVector objectiveCoefficients = maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients(); copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]); matrix.setEntry(zIndex, width - 1, maximize ? f.getConstantTerm() : -1 * f.getConstantTerm()); if (!restrictToNonNegative) { [BUGGY] [BUGGY] matrix.setEntry(zIndex, getSlackVariableOffset() - 1,    getInvertedCoefficientSum(objectiveCoefficients)); getInvertedCoefficientSum(objectiveCoefficients)); }  int slackVar = 0; int artificialVar = 0; for (int i = 0; i < constraints.size(); i++) { LinearConstraint constraint = constraints.get(i); int row = getNumObjectiveFunctions() + i;  [CLASS] SimplexTableau [METHOD] createTableau [RETURN_TYPE] RealMatrix  final boolean maximize [VARIABLES] boolean maximize restrictToNonNegative RealMatrix tableau Array2DRowRealMatrix matrix double epsilon RealVector objectiveCoefficients LinearObjectiveFunction f LinearConstraint constraint List columnLabels constraints String NEGATIVE_VAR_COLUMN_LABEL int DEFAULT_ULPS artificialVar height i maxUlps numArtificialVariables numDecisionVariables numSlackVariables row slackVar width zIndex long serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	add	
