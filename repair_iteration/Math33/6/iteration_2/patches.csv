bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getInstantDecision();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
2	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getInstantDecision();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
3	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getReturnDecision();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getReturnDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getReturnDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getInstantDecision();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
5	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  slackVar);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  slackVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  slackVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
6	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
7	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getFunctionReal();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getFunctionReal();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getFunctionReal();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveFunction();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveFunction();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveFunction();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  /  2,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  /  2,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  /  2,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(slackVar,    getSlackVariableOffset()    /    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  *  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  *  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  *  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(slackVar,    getSlackVariableOffset()    /    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
11	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(slackVar,    getSlackVariableOffset()    /    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
12	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getReturnValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getReturnValue();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getReturnValue();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getReturnValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
13	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getReturnValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getReturnValue()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getReturnValue()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getReturnValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
14	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDevValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDevValue();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDevValue();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getReturnValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
15	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();	  RealVector    objectiveCoefficients    =    optimize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getConstantDecision()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getConstantDecision()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getConstantDecision()  +  1;	  RealVector    objectiveCoefficients    =    optimize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVars),  constraint);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVars),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVars),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integerVars),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
19	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(integerVars));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(integerVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
20	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  /  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  /  1;	  int    maxUlps    =    constraint.getMaxUlps()    -    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
21	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantFunction()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
22	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantFunction()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
23	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getSilentTerm();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
24	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getSilentTerm();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
25	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getSilentTerm();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getSilentTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getSilentTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getSilentTerm();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
26	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVars));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
27	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  *  1,  getInvertedCoefficientSum(integerVars));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  *  1,  getInvertedCoefficientSum(integerVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  *  1,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
28	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getDataRef();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
29	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSlackVariableOffset();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
30	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariable()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVariable()  -  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariable()  -  1;	  int    slackVar    =    constraint.getSlackVariable();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariable()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVariable()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariable()  +  1;	  int    slackVar    =    constraint.getSlackVariable();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset()  *  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getSlackVariableOffset()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset()  *  1;	  int    slackVar    =    getSlackVariableOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(false);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(false);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
34	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  false);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  false);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
35	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  width);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  width);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  width);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
36	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  true);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true,  true);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  /  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  /  2;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  /  2;	  int    maxUlps    =    constraint.getMaxUlps()    +    2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
38	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    constraint);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
39	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar)/  constraint);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar)/  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar)/  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    constraint);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
40	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2.0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2.0);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2.0);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    constraint);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
41	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  matrix.getRowRealMatrix();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  matrix.getRowRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  matrix.getRowRealMatrix();	  Array2DRowRealMatrix    graph    =    constraints.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
42	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients),  constraint);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  constraint);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
45	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  *  1;	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDecisionMatrix()    +    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
46	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getSlackVariableOffset();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getSlackVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getSlackVariableOffset();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
47	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getConstantRef();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getConstantRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getConstantRef();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
48	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
49	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  +  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  +  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getVariableOffset()  +  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
50	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
51	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(width));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(width));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(width));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(width));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getColumnRealMatrix();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getColumnRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraints.getColumnRealMatrix();	  Array2DRowRealMatrix    graph    =    constraint.getColumnRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
53	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRangeRealMatrix();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRangeRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRangeRealMatrix();	  Array2DRowRealMatrix    graph    =    constraint.getColumnRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
54	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  constraint);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
55	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integers));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integers));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integers));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
56	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  maximize);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
57	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getRestrictedMatrix();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(slackVar));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(slackVar));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(slackVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset(),    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
59	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset(),    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
60	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset(),    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
61	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
62	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
63	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maximize);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
64	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantRange()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
65	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantRange()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantRange()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantRange()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantRange()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
66	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantRange()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantRange()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantRange()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantRange()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
67	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getSlackVariableOffset(objectiveCoefficients);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset(objectiveCoefficients);	  int    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
68	[BUG]  [BUGGY]  int  slackVar  =  getInvertedSlackVariableOffset(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getInvertedSlackVariableOffset(objectiveCoefficients);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getInvertedSlackVariableOffset(objectiveCoefficients);	  int    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
69	[BUG]  [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveFunctions);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveFunctions);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getInvertedCoefficientSum(objectiveFunctions);	  int    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
70	[BUG]  [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  *  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraint.getSlackVariableOffset()  *  1;	  Integer    slackVar    =    constraint.getSlackVariableOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
71	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantField();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantField();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantField();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantFunction()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
72	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantMatrix();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantFunction()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
73	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(this);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(this);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(this);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  ';'  expected	60	None	replace
74	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(slackVar,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(slackVar,  null);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(slackVar,  null);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
75	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  null);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  null);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  null);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  ';'  expected	60	None	replace
76	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(dimension);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(dimension);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(dimension);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  ';'  expected	60	None	replace
77	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getDataRealMatrix();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getDataRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraints.getDataRealMatrix();	  Array2DRowRealMatrix    graph    =    constraint.getDataRealMatrix();    	non-compiled	[CE]  ';'  expected	59	None	replace
78	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix(null);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix(null);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix(null);	  Array2DRowRealMatrix    graph    =    constraint.getDataRealMatrix();    	non-compiled	[CE]  ';'  expected	59	None	replace
79	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset()  *  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset()  *  1;	  Integer    slackVar    =    getSlackVariableOffset()    -    1;    	non-compiled	[CE]  ';'  expected	7	None	replace
80	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVar));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVar));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVar));    	non-compiled	[CE]  ';'  expected	16	None	replace
81	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  slackVar,  height);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  slackVar,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  slackVar,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width,    height);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
82	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  epsilon,  height);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  epsilon,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  epsilon,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width,    height);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
83	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width,  height);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width,    height);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
84	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maxUlps);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maxUlps);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maxUlps);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width,    height);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
85	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
86	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
87	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  null);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  null);	  matrix.setEntry(zIndex,    zIndex    +    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
88	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  epsilon);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  epsilon);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  epsilon);	  matrix.setEntry(zIndex,    zIndex    +    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
89	[BUG]  [BUGGY]  int  maxUlps  =  constraints.getMaxUlps();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraints.getMaxUlps();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraints.getMaxUlps();	  int    maxUlps    =    constraint.getMaxUlps()    -    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
90	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getmaxUlps();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getmaxUlps();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getmaxUlps();	  int    maxUlps    =    constraint.getMaxUlps()    -    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
91	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();	  RealVector    objectiveCoefficients    =    maximise?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
92	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer),  maximize);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
93	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
94	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width,  maximize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
95	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix()  +  1;	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix()    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
96	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  /  2,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  /  2,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  /  2,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    /    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
97	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSlackVariableOffset();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSlackVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraints.getSlackVariableOffset();	  int    slackVar    =    constraint.getSlackVariableOffset()    -    2;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
98	[BUG]  [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  +  2;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraint.getSlackVariableOffset()  +  2;	  Integer    slackVar    =    constraint.getSlackVariableOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
99	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset(1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getSlackVariableOffset(1);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset(1);	  int    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
100	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  minimize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  minimize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  minimize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getStandardDecision();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
101	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
102	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;	  RealVector    objectiveCoefficients    =    optimize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
103	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximise?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
104	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantterm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantterm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantterm()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximise?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
105	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
106	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVar));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVar));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVar));	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
107	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  maximize?  getInvertedCoefficientSum(integerCoefficients):  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  maximize?  getInvertedCoefficientSum(integerCoefficients):  null);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  maximize?  getInvertedCoefficientSum(integerCoefficients):  null);	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
108	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  optimize?  getInvertedCoefficientSum(integerCoefficients):  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  optimize?  getInvertedCoefficientSum(integerCoefficients):  null);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  optimize?  getInvertedCoefficientSum(integerCoefficients):  null);	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
109	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getRealDecision();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getRealDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getRealDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getRealDecision();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
110	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getRealDecision();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getRealDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getRealDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getRealDecision();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
111	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealityDecision();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealityDecision();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealityDecision();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getRealDecision();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
112	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getGraph();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getGraph();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getGraph();	  Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
113	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getDataRef();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraints.getDataRef();	  Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
114	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(integer));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(integer));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(integer));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
115	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(integer));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(integer));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(integer));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
116	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer),  constraint);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
117	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum()  +  1;	  Integer    slackVar    =    getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
118	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  *  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariableOffset()  *  1;	  int    slackVar    =    constraint.getSlackVariableOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
119	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  /  DEFAULT_ULPS;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  /  DEFAULT_ULPS;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  /  DEFAULT_ULPS;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
120	[BUG]  [BUGGY]  int  maxUlps  =  constraints.getMaxUlps()  *  DEFAULT_ULPS;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraints.getMaxUlps()  *  DEFAULT_ULPS;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraints.getMaxUlps()  *  DEFAULT_ULPS;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
121	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  DEFAULT_ULPS  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  DEFAULT_ULPS  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  *  DEFAULT_ULPS  +  1;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
122	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  numArtificialVariables;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  numArtificialVariables;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  *  numArtificialVariables;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
123	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset().intValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset().intValue();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset().intValue();	  Integer    slackVar    =    getSlackVariableOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
124	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  -1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  -1);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  -1);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
125	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  maximize?  f.getConstantTerm()  :  -1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  maximize?  f.getConstantTerm()  :  -1);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  maximize?  f.getConstantTerm()  :  -1);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
126	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
127	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  0);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  0);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
128	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  artificialVar);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
129	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer),  artificialVar);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
130	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(integer),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
131	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integer),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
132	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(optimize));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(optimize));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(optimize));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(optimize));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
133	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(optimize));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(optimize));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(optimize));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(optimize));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
134	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
135	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
136	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  epsilon);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  epsilon);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  epsilon);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
137	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
138	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
139	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getInstantTerm();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getInstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getInstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
140	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getObjectiveMatrix();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getObjectiveMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getObjectiveMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectiveMatrix();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
141	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getObjectiveMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getObjectiveMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getObjectiveMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectiveMatrix();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
142	[BUG]  [BUGGY]  Integer  slackVar  =  constraints.getSlackVariableOffset()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  constraints.getSlackVariableOffset()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraints.getSlackVariableOffset()  +  1;	  Integer    slackVar    =    constraints.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
143	[BUG]  [BUGGY]  Integer  slackVar  =  constraints.getSlackVariableOffset()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  constraints.getSlackVariableOffset()  -  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraints.getSlackVariableOffset()  -  1;	  Integer    slackVar    =    constraints.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
144	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  +  1;	  RealMatrix    objectiveCoefficients    =    optimize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
145	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDataRef();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDataRef();	  RealMatrix    objectiveCoefficients    =    optimize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
146	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(slackVar,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
147	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maximize);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  maximize);	  matrix.setEntry(slackVar,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
148	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  maximize?  constraint  :  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  maximize?  constraint  :  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  maximize?  constraint  :  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(slackVar,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
149	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  optimize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  optimize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  optimize);	  matrix.setEntry(slackVar,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
150	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(objectiveCoefficients);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset(objectiveCoefficients);	  Integer    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
151	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveFunctions);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveFunctions);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum(objectiveFunctions);	  Integer    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
152	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  -1  *  f.getRealMatrix();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  -1  *  f.getRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  -1  *  f.getRealMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
153	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
154	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getMatrix();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
155	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar)/  2,  maximize);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar)/  2,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar)/  2,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
156	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  width);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
157	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
158	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width  /  2,  maximize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width  /  2,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width  /  2,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
159	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(1);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset(1);	  Integer    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
160	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(0,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(0,  0);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset(0,  0);	  Integer    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
161	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  +  2;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariableOffset()  +  2;	  int    slackVar    =    constraint.getSlackVariableOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
162	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(slackVar),  constraint);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(slackVar),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(slackVar),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    constraint);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
163	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  ArtificialVar);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  ArtificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  ArtificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    constraint);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
164	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstraintTerm();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstraintTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstraintTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstTerm();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
165	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstTerm();    	non-compiled	[CE]  not  a  statement	35	None	replace
166	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getInvertedMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
167	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getInvertedMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
168	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getObjectMatrix();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getObjectMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getObjectMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectMatrix();    	non-compiled	[CE]  not  a  statement	87	None	replace
169	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getObjectMatrix();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getObjectMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getObjectMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectMatrix();    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
170	[BUG]  [BUGGY]  RealMatrix  objectCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectMatrix();    	non-compiled	[CE]  not  a  statement	87	None	replace
171	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    constraint,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
172	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(slackVar));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(slackVar));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(slackVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    constraint,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
173	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  artificialVar,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  artificialVar,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  artificialVar,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    constraint,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
174	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    width    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
175	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  epsilon  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  epsilon  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  epsilon  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    width    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
176	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  optimize);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  optimize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  optimize);	  matrix.setEntry(zIndex,    width    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
177	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantterm()  :  1  *  f.getConstantTerm();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantterm()  :  1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantterm()  :  1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    1    *    f.getConstantTerm();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
178	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(slackVar));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(slackVar));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(slackVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
179	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(slackVar),  maximize);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(slackVar),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(slackVar),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    maximize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
180	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width,  maximize);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  width,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    maximize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
181	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(width),  maximize);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(width),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(width),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    maximize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
182	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
183	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getInstantTerm();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getInstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
184	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
185	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  width);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
186	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
187	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
188	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars)+  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars)+  1);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars)+  1);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars));    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
189	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getObjectiveMatrix()  :  f.getConstantMatrix();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getObjectiveMatrix()  :  f.getConstantMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getObjectiveMatrix()  :  f.getConstantMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectiveMatrix();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
190	[BUG]  [BUGGY]  Int  slackVar  =  getSlackVariableOffset()  -  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Int  slackVar  =  getSlackVariableOffset()  -  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Int  slackVar  =  getSlackVariableOffset()  -  1;	  Int    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	53	None	replace
191	[BUG]  [BUGGY]  Int  slackVar  =  getSlackVariableOffset()  +  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Int  slackVar  =  getSlackVariableOffset()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Int  slackVar  =  getSlackVariableOffset()  +  1;	  Int    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	53	None	replace
192	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar));  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVar));    	non-compiled	[CE]  ')'  expected	16	None	replace
193	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar)+  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar)+  1);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar)+  1);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVar));    	non-compiled	[CE]  ')'  expected	16	None	replace
194	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  *  1;	  int    maxUlps    =    constraint.getMaxUlps()    -    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
195	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(integer);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(integer);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum(integer);	  Integer    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  ')'  expected	75	None	replace
196	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(true);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(true);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(true);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  ')'  expected	42	None	replace
197	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(false);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(false);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(false);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  ')'  expected	42	None	replace
198	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  -1  *  f.getConstantRange();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  -1  *  f.getConstantRange();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  -1  *  f.getConstantRange();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantRange()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  ')'  expected	52	None	replace
199	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  1  *  f.getConstantTerm();  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantRange()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  ')'  expected	52	None	replace
200	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  0  *  f.getConstantRange();  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  0  *  f.getConstantRange();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  0  *  f.getConstantRange();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantRange()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  ')'  expected	52	None	replace
201	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset(),    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
202	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset(width,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getSlackVariableOffset(width,  height);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset(width,  height);	  int    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
203	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getDataRef();	  RealVector    objectiveCoefficients    =    maximise?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
204	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getStandardDecision();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
205	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  artificialVar);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
206	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
207	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix()  +  1;	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getInvertedMatrix();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
208	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(width,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(width,  height);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset(width,  height);	  Integer    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)+  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)+  1;	  int    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
210	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  height;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  height;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  *  height;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
211	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  4;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  4;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  *  4;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
212	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
213	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar),  artificialVar);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
214	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getDataRef();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
215	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getRealMatrix();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getRealMatrix();	  RealMatrix    objectiveCoefficients    =    optimize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
216	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer)/  constraint);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer)/  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer)/  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    constraint);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
217	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(optimize)/  constraint);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(optimize)/  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(optimize)/  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    constraint);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
218	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(maximum));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(maximum));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(maximum));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
219	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealDecision()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealDecision()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealDecision()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getRealDecision();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
220	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar),  constraint);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    constraint);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
221	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(slackVar,    getSlackVariableOffset()    /    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
222	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  computeInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  computeInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getVariableOffset()  -  1,  computeInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
223	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerCoefficients),  maximize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerCoefficients),  maximize);	  matrix.setEntry(zIndex,    getVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
224	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  maximize);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
225	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  maximize,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  maximize,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  maximize,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
226	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
227	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
228	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantFunction()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
229	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
230	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveFunctions),  width,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveFunctions),  width,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveFunctions),  width,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
231	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getSlackVariableOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getSlackVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getSlackVariableOffset();	  Array2DRowRealMatrix    graph    =    constraint.getDataRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
232	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  epsilon,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  epsilon,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  epsilon,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    constraint,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
233	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    constraint,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
234	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getDataRef();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getDataRef();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
235	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getObject()  :  f.getConstantMatrix();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getObject()  :  f.getConstantMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getObject()  :  f.getConstantMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectMatrix();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
236	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getSlackVariableOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getSlackVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getSlackVariableOffset();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
237	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getLocalMatrix();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getLocalMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getLocalMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
238	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  maximize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
239	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integative));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integative));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integative));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
240	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  epsilon);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  epsilon);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
241	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  0);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  0);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
242	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  0);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  0);	  matrix.setEntry(zIndex,    zIndex    +    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
243	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  optimize?  getInvertedCoefficientSum(objectiveCoefficients):  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  optimize?  getInvertedCoefficientSum(objectiveCoefficients):  null);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  optimize?  getInvertedCoefficientSum(objectiveCoefficients):  null);	  matrix.setEntry(zIndex,    zIndex    +    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
244	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getRealMatrix();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getRealMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getRealMatrix();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
245	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantValue()  :  -1  *  f.getReturnValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantValue()  :  -1  *  f.getReturnValue();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantValue()  :  -1  *  f.getReturnValue();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getReturnValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
246	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getReturnValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getReturnValue();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getReturnValue();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getReturnValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
247	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  f.getConstantTerm()  :  maximize);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  f.getConstantTerm()  :  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  f.getConstantTerm()  :  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  ')'  expected	67	None	replace
248	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getDecisionMatrix();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getDecisionMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximise?  f.getConstantMatrix()  :  f.getDecisionMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDecisionMatrix()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
249	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  0  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  0  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  0  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    width    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
250	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  -  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  optimize);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  -  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  optimize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  -  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  optimize);	  matrix.setEntry(zIndex,    width    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
251	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  -  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  maximize);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  -  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  -  1,  maximize?  getInvertedCoefficientSum(objectiveCoefficients):  maximize);	  matrix.setEntry(zIndex,    width    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
252	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  /  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  /  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariableOffset()  /  1;	  int    slackVar    =    constraint.getSlackVariableOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
253	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getDataRef();	  RealVector    objectiveCoefficients    =    optimize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
254	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
255	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  artificialVar);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
256	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  maximize);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
257	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getSilentTerm();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
258	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getSilentTerm();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getSilentTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getSilentTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getSilentTerm();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
259	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getInstantDecision();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
260	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  height  -  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  height  -  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  height  -  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
261	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  maximize?  getInvertedCoefficientSum(integerCoefficients):  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  maximize?  getInvertedCoefficientSum(integerCoefficients):  0);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  maximize?  getInvertedCoefficientSum(integerCoefficients):  0);	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
262	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantFunction();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantFunction();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantFunction();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantFunction()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
263	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer)/  2,  maximize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer)/  2,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer)/  2,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
264	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(optimize)/  2,  maximize);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(optimize)/  2,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(optimize)/  2,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
265	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    2,    maximize);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
266	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getDataRef();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getDataRef();	  RealVector    objectiveCoefficients    =    maximise?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
267	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  DEFAULT_ULPS);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  DEFAULT_ULPS);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients)/    constraint);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
268	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
269	[BUG]  [BUGGY]  int  maxUlps  =  constraints.getMaxUlps()  /  DEFAULT_ULPS;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraints.getMaxUlps()  /  DEFAULT_ULPS;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraints.getMaxUlps()  /  DEFAULT_ULPS;	  int    maxUlps    =    constraint.getMaxUlps()    *    DEFAULT_ULPS;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
270	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInstantTerm()  :  -1  *  f.getInstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
271	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getInstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getInstantTerm()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getInstantTerm();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
272	[BUG]  [BUGGY]  Int  slackVar  =  constraint.getSlackVariableOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Int  slackVar  =  constraint.getSlackVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Int  slackVar  =  constraint.getSlackVariableOffset();	  int    slackVar    =    constraint.getSlackVariableOffset()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
273	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);	  matrix.setEntry(slackVar,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
274	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(implementedVar),  constraint);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(implementedVar),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(implementedVar),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar),    constraint);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
275	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSlackVariable();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSlackVariable();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraints.getSlackVariable();	  int    slackVar    =    constraint.getSlackVariable();    	non-compiled	[CE]  ')'  expected	10	None	replace
276	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariable(null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getSlackVariable(null);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariable(null);	  int    slackVar    =    constraint.getSlackVariable();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
277	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)+  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)+  1;	  Integer    slackVar    =    getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
278	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)-  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)-  1;	  Integer    slackVar    =    getInvertedCoefficientSum();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
279	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDataRef()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDataRef()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDataRef()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getDataRef();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
280	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(0,  DEFAULT_ULPS);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(0,  DEFAULT_ULPS);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset(0,  DEFAULT_ULPS);	  Integer    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  ')'  expected	8	None	replace
281	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients));	  Integer    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  ';'  expected	8	None	replace
282	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstTerm();    	non-compiled	[CE]  ')'  expected	35	None	replace
283	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
284	[BUG]  [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)-  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients)-  1;	  int    slackVar    =    getInvertedCoefficientSum(objectiveCoefficients);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
285	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
286	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVars));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
287	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  DEFAULT_ULPS);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  DEFAULT_ULPS);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  DEFAULT_ULPS);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    artificialVar);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
288	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowReal();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowReal();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowReal();	  Array2DRowRealMatrix    graph    =    constraint.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
289	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getStandardMatrix();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getStandardMatrix();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getStandardMatrix();	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDataRef();    	non-compiled	[CE]  ')'  expected	14	None	replace
290	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerVars),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  ')'  expected	64	None	replace
291	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(integerVars),  artificialVar);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(integerVars),  artificialVar);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(integerVars),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerVars),    constraint);    	non-compiled	[CE]  ')'  expected	64	None	replace
292	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getSilentTerm()  :  -1  *  f.getConstantTerm();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getSilentTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getSilentTerm()  :  -1  *  f.getConstantTerm();	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getSilentTerm();    	non-compiled	[CE]  ')'  expected	74	None	replace
293	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRow();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRow();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getDataRow();	  Array2DRowRealMatrix    graph    =    constraint.getDataRealMatrix();    	non-compiled	[CE]  ')'  expected	59	None	replace
294	[BUG]  [BUGGY]  int  slackVar  =  constraints.getSlackVariableOffset()  -  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getSlackVariableOffset()  -  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraints.getSlackVariableOffset()  -  1;	  int    slackVar    =    constraint.getSlackVariableOffset()    -    1;    	non-compiled	[CE]  ')'  expected	43	None	replace
295	[BUG]  [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  /  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  /  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraint.getSlackVariableOffset()  /  1;	  Integer    slackVar    =    constraint.getSlackVariableOffset()    +    1;    	non-compiled	[CE]  ')'  expected	37	None	replace
296	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  f.getInvertedCoefficientSum(integerCoefficients));  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  f.getInvertedCoefficientSum(integerCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  f.getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    slackVar    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  ')'  expected	73	None	replace
297	[BUG]  [BUGGY]  Integer  slackVar  =  constraints.get(0);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Integer  slackVar  =  constraints.get(0);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraints.get(0);	  Integer    slackVar    =    constraints.getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	39	None	replace
298	[BUG]  [BUGGY]  int  slackVar  =  constraints.getVariableOffset();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraints.getVariableOffset();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraints.getVariableOffset();	  int    slackVar    =    constraint.getVariableOffset()    -    1;    	non-compiled	[CE]  ')'  expected	12	None	replace
299	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  DEFAULT_ULPS);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  DEFAULT_ULPS);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers),  DEFAULT_ULPS);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  ')'  expected	78	None	replace
300	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integers));  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integers));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integers));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integers));    	non-compiled	[CE]  ')'  expected	78	None	replace
301	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  optimize?  f.getConstantTerm()  :  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  optimize?  f.getConstantTerm()  :  -1);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  optimize?  f.getConstantTerm()  :  -1);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
302	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  maximize?  f.getConstantTerm()  :  maximize);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  maximize?  f.getConstantTerm()  :  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  maximize?  f.getConstantTerm()  :  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    maximize?    f.getConstantTerm()    :    maximize);    	non-compiled	[CE]  ')'  expected	67	None	replace
303	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(multiply);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(multiply);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(multiply);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  ')'  expected	60	None	replace
304	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  DEFAULT_ULPS);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  DEFAULT_ULPS);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null,  DEFAULT_ULPS);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  ')'  expected	60	None	replace
305	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(slackVar);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(slackVar);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(slackVar);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
306	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(implementedVars));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(implementedVars));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(implementedVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset(),    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
307	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getConstantTerm()  +  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getConstantTerm()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getConstantTerm()  +  1;	  RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    1    *    f.getConstantTerm();    	non-compiled	[CE]  ')'  expected	46	None	replace
308	[BUG]  [BUGGY]  int  slackVar  =  constraint.getVariableOffset()  *  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  constraint.getVariableOffset()  *  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getVariableOffset()  *  1;	  int    slackVar    =    constraint.getVariableOffset()    +    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
309	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2.0,  width);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2.0,  width);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2.0,  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    width);    	non-compiled	[CE]  ')'  expected	48	None	replace
310	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(width,  height);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(width,  height);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix(width,  height);	  Array2DRowRealMatrix    graph    =    constraint.getColumnRealMatrix();    	non-compiled	[CE]  ')'  expected	40	None	replace
311	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix()  +  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix()  +  1;	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix()    +    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
312	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix()  +  1;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix()  +  1;	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectMatrix();    	non-compiled	[CE]  ')'  expected	87	None	replace
313	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveMatrix()  +  1;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveMatrix()  +  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveMatrix()  +  1;	  RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getObjectiveMatrix();    	non-compiled	[CE]  ')'  expected	32	None	replace
314	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMinUlps();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraint.getMinUlps();  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMinUlps();	  int    maxUlps    =    constraint.getMaxUlps()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
315	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix(true);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix(true);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix(true);	  Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix(true);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
316	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width,  height);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  width,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
317	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integer),  maximize);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integer),  maximize);  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integer),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer),    maximize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
318	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  objectiveCoefficients,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  objectiveCoefficients,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  objectiveCoefficients,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    constraint,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
319	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset(0,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  slackVar  =  getSlackVariableOffset(0,  DEFAULT_ULPS);  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset(0,  DEFAULT_ULPS);	  int    slackVar    =    getSlackVariableOffset(0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
320	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar  +  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar  +  1));  [BUGGY]      getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar  +  1));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(slackVar));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
321	[BUG]  [BUGGY]  int  maxUlps  =  constraints.getMaxUlps()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {      [BUGGY]  int  maxUlps  =  constraints.getMaxUlps()  -  1;  [BUGGY]      matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraints.getMaxUlps()  -  1;	  int    maxUlps    =    constraint.getMaxUlps()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
