bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  constraint);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  constraint);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  ';'  expected	7	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  constraint);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  constraint);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(optimize));    	non-compiled	[CE]  ';'  expected	10	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(optimize));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(optimize));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(optimize));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(optimize));    	non-compiled	[CE]  ';'  expected	10	None	replace
5	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(width));  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(width));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(width));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(optimize));    	non-compiled	[CE]  ';'  expected	10	None	replace
6	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  getSlackVariableOffset()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset()  +  1;	      Integer    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  getSlackVariableOffset()  -  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset()  -  1;	      Integer    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(0);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  getSlackVariableOffset(0);  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getSlackVariableOffset(0);	      Integer    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	19	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integer));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariable();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSlackVariable();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariable();	      int    slackVar    =    constraint.getVariableOffset();    	non-compiled	[CE]  ')'  expected	12	None	replace
11	[BUG]  [BUGGY]  int  slackVar  =  constraint.getVariableOffset()  +  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getVariableOffset()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getVariableOffset()  +  1;	      int    slackVar    =    constraint.getVariableOffset();    	non-compiled	[CE]  ')'  expected	12	None	replace
12	[BUG]  [BUGGY]  int  slackVar  =  constraint.getVariableOffset()  -  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getVariableOffset()  -  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getVariableOffset()  -  1;	      int    slackVar    =    constraint.getVariableOffset();    	non-compiled	[CE]  ')'  expected	12	None	replace
13	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDecisionMatrix();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDecisionMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  optimize?  f.getConstantMatrix()  :  f.getDecisionMatrix();	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  ')'  expected	13	None	replace
14	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDataRef();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDataRef();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDataRef();	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  ')'  expected	13	None	replace
15	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getRestrictedMatrix();	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  ')'  expected	13	None	replace
16	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar));  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVar));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  ')'  expected	15	None	replace
17	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  ')'  expected	15	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  ')'  expected	15	None	replace
19	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  +  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  +  1;	      int    maxUlps    =    constraint.getMaxUlps();    	non-compiled	[CE]  ')'  expected	14	None	replace
20	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  -  1;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  -  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  -  1;	      int    maxUlps    =    constraint.getMaxUlps();    	non-compiled	[CE]  ')'  expected	14	None	replace
21	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  -  2;  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  -  2;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  -  2;	      int    maxUlps    =    constraint.getMaxUlps();    	non-compiled	[CE]  ')'  expected	14	None	replace
22	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  +  2;  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  +  2;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  +  2;	      int    maxUlps    =    constraint.getMaxUlps();    	non-compiled	[CE]  ')'  expected	14	None	replace
23	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getConstantDecision();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getConstantDecision();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantDecision()  :  -1  *  f.getConstantDecision();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  ')'  expected	4	None	replace
24	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getConstantDecision();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getConstantDecision();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantDecision()  :  -1  *  f.getConstantDecision();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  ')'  expected	4	None	replace
25	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getStandardDecision();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  ')'  expected	4	None	replace
26	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset()  -  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  getSlackVariableOffset()  -  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset()  -  1;	      int    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	17	None	replace
27	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset()  -  2;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  getSlackVariableOffset()  -  2;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset()  -  2;	      int    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	17	None	replace
28	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariableOffset(0);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  getSlackVariableOffset(0);  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getSlackVariableOffset(0);	      int    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  ')'  expected	17	None	replace
29	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  /  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  /  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  /  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    *    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset(),  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    *    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  zIndex  +  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    +    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveMatrix();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectiveMatrix();	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getInvertedMatrix();	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  optimize?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getConstTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getReturnValue();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getReturnValue();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getReturnValue();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraint.getSlackVariableOffset()  +  1;	      Integer    slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  constraint.getSlackVariableOffset()  -  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraint.getSlackVariableOffset()  -  1;	      Integer    slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  Integer  slackVar  =  constraints.getSlackVariableOffset();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  constraints.getSlackVariableOffset();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  constraints.getSlackVariableOffset();	      Integer    slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getColumnRealMatrix();	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix()  +  1;	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true);  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(true);	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  -  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariableOffset()  -  1;	      int    slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariableOffset()  +  1;	      int    slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  -  2;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  constraint.getSlackVariableOffset()  -  2;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  constraint.getSlackVariableOffset()  -  2;	      int    slackVar    =    constraint.getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  1  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  width  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  +  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  maximize);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(slackVar),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  0  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  0  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  0  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  0  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  0  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantRange()  :  0  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  Int  slackVar  =  getSlackVariableOffset();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Int  slackVar  =  getSlackVariableOffset();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Int  slackVar  =  getSlackVariableOffset();	      int    slackVar    =    getSlackVariableOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
54	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  /  1,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  /  1,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  /  1,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    *    1,    getInvertedCoefficientSum(objectiveCoefficients));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDataRef();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getDataRef();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantFunction()  :  -1  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getInstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getRealMatrix();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getDataRealMatrix();	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null);  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getRowRealMatrix(null);	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  artificialVar);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  maximize);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integer),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  constraint,  getInvertedCoefficientSum(objectiveCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  constraint);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integerVars),  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  constraint);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  constraint);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  constraint);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(slackVar,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
67	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  maximize);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  maximize?  f.getConstantTerm()  :  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum();	      Integer    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getDataRef();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getDataRef();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getDataRef();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
70	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getInstantDecision();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealDecision();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealDecision();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantDecision()  :  -1  *  f.getRealDecision();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantDecision()    :    -1    *    f.getConstantDecision();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getVariableOffset()  -  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerCoefficients));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerCoefficients));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  slackVar  -  1,  getInvertedCoefficientSum(integerCoefficients));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integerCoefficients));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantTerm()  :  -1  *  f.getSilentTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    -1    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients);  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Integer  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients);	      Integer    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantterm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximize?  f.getConstantterm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximize?  f.getConstantterm()  :  -1  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealVector  objectiveCoefficients  =  maximise?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();	      RealVector    objectiveCoefficients    =    maximize?    f.getConstantTerm()    :    0    *    f.getConstantTerm();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers));  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(integers));	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(integer));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
79	[BUG]  [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients);  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  slackVar  =  getInvertedCoefficientSum(objectiveCoefficients);	      int    slackVar    =    getSlackVariableOffset();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
80	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients)/  2,  maximize);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
81	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  height);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  height);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  width,  height);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    maximize);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRef();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraint.getDataRef();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraint.getDataRef();	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
83	[BUG]  [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	Array2DRowRealMatrix  graph  =  constraints.getRowRealMatrix();	      Array2DRowRealMatrix    graph    =    constraint.getRowRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  DEFAULT_ULPS;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  int  maxUlps  =  constraint.getMaxUlps()  *  DEFAULT_ULPS;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	int  maxUlps  =  constraint.getMaxUlps()  *  DEFAULT_ULPS;	      int    maxUlps    =    constraint.getMaxUlps();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  +  1;  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getDecisionMatrix()  +  1;	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getDecisionMatrix();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);  [BUGGY]    getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(objectiveCoefficients),  artificialVar);	  matrix.setEntry(zIndex,    getSlackVariableOffset()    -    1,    getInvertedCoefficientSum(objectiveCoefficients),    constraint);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {    [BUGGY]  RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix();  [BUGGY]    matrix.setEntry(zIndex,  getSlackVariableOffset()  -  1,    getInvertedCoefficientSum(objectiveCoefficients));  getInvertedCoefficientSum(objectiveCoefficients));  }  int  slackVar  =  0;  int  artificialVar  =  0;  for  (int  i  =  0;  i  <  constraints.size();  i++)  {  LinearConstraint  constraint  =  constraints.get(i);  int  row  =  getNumObjectiveFunctions()  +  i;  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.2886751345948129	199	200	1	replace	RealMatrix  objectiveCoefficients  =  maximize?  f.getConstantMatrix()  :  f.getObjectMatrix();	      RealMatrix    objectiveCoefficients    =    maximize?    f.getConstantMatrix()    :    f.getRealMatrix();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
