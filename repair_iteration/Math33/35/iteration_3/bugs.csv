bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getBase();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getBase();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getBase();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getSecondFunction();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberFunction();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getSecondFunction();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  columnLabels.add( "0 ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "0 ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "0 ");	  columnLabels.add(   "Z   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  columnLabels.add( "z ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "z ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "z ");	  columnLabels.add(   "Z   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalVariables();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeVariables();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeVariables();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalVariables();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  Collections.sort(columnLabels,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  NEGATIVE_VAR_COLUMN_LABEL);	  Collections.sort(this.columnLabels,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  this.columnLabels);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  this.columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  this.columnLabels);	  Collections.sort(this.columnLabels,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRowLabels();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRowLabels();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRowLabels();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
10	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRows();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRows();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRows();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
11	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeScalarObjectives();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeScalarObjectives();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeScalarObjectives();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
12	[BUG]  [BUGGY]  columnLabels.add( "Null ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Null ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Null ");	  columnLabels.add(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
13	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().iterator().next();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().iterator().next();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().iterator().next();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
14	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().iterator().next();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().iterator().next();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().iterator().next();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
15	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVarObjectiveFunctions().iterator().next();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVarObjectiveFunctions().iterator().next();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVarObjectiveFunctions().iterator().next();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
16	[BUG]  [BUGGY]  columnLabels.add( "s   "  +  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "s   "  +  i);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "s   "  +  i);	  columnLabels.add(   "B   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  columnLabels.add( "b   "  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "b   "  +  i);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "b   "  +  i);	  columnLabels.add(   "B   "    +    i);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  true);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  true);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
19	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  false);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  false);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
20	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  NEGATIVE_VAR_COLUMN_LABEL);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
21	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  null);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  null);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
22	[BUG]  [BUGGY]  columnLabels.add( "b   "  +  f);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "b   "  +  f);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "b   "  +  f);	  columnLabels.add(   "B   "    +    f);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
23	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumberObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberObjectiveFunction().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberObjectiveFunction().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumberObjectiveFunction().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumberObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().get(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().get(1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().get(1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().get(0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().get(2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().get(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().get(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().get(0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(NEGATIVE_VAR_COLUMN_LABEL);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
28	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  maxUlps);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  maxUlps);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
29	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  2);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
30	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunction().clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunction().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunction().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunction(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunction(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunction(0);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getLowerBounds();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getLowerBounds();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getLowerBounds();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getUpperBounds();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBounds().clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBounds().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBounds().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getUpperBounds();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBounds()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBounds()  +  1;  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBounds()  +  1;	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getUpperBounds();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions()  [1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions()  [1];  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions()  [1];	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions()    [0];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
36	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions()  [2];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions()  [2];  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions()  [2];	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions()    [0];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
37	[BUG]  [BUGGY]  Collections.sort(columnLabels,  _objectiveFunctions);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  _objectiveFunctions);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  _objectiveFunctions);	  Collections.sort(this.columnLabels,    _objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
38	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  _columnVariables);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  _columnVariables);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  _columnVariables);	  Collections.sort(this.columnLabels,    _objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
39	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  _columnFunctions);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  _columnFunctions);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  _columnFunctions);	  Collections.sort(this.columnLabels,    _objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
40	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  _objectiveFunctions,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  _objectiveFunctions,  columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  _objectiveFunctions,  columnLabels);	  Collections.sort(this.columnLabels,    _objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
41	[BUG]  [BUGGY]  columnLabels.add( "N-Objective ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "N-Objective ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "N-Objective ");	  columnLabels.add(   "N-ObjectiveFunction   ");    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
42	[BUG]  [BUGGY]  columnLabels.add( "N-ObjectiveFunctions ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "N-ObjectiveFunctions ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "N-ObjectiveFunctions ");	  columnLabels.add(   "N-ObjectiveFunction   ");    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
43	[BUG]  [BUGGY]  columnLabels.add( "Serialize, "  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Serialize, "  +  getOriginalNumDecisionVariables());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Serialize, "  +  getOriginalNumDecisionVariables());	  columnLabels.add(   "Serialize,   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
44	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  DEFAULT_ULPS,  maxUlps);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  DEFAULT_ULPS,  maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  DEFAULT_ULPS,  maxUlps);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
45	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
46	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  2);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
47	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRowLabels();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRowLabels();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRowLabels();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.super.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRows();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRows();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRows();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.super.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
49	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getNumObjectiveFunctions().size()  ]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getNumObjectiveFunctions().size()  ]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getNumObjectiveFunctions().size()  ]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[getObjectiveFunctions().size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
50	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  +  1]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  +  1]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  +  1]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[getObjectiveFunctions().size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
51	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunction();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
52	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunction().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunction().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunction().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
53	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getRows();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getRows();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getRows();	  LinearObjectiveFunction    f    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getRangeObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getRangeObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getRangeObjectiveFunctions();	  LinearObjectiveFunction    f    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunction(2);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
56	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(4);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(4);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(4);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunction(2);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
57	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(0);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunction(2);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
58	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunctions().get(0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunctions().get(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunctions().get(0);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
59	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumberObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumberObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumberObjectiveFunctions();	  LinearObjectiveFunction    f    =    getLinearObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  columnLabels.add( "msg.no.objective.initialize ",  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "msg.no.objective.initialize ",  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "msg.no.objective.initialize ",  NEGATIVE_VAR_COLUMN_LABEL);	  columnLabels.add(   "msg.no.objective.initialize   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
61	[BUG]  [BUGGY]  columnLabels.add( "msg.no.objective.initialize. ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "msg.no.objective.initialize. ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "msg.no.objective.initialize. ");	  columnLabels.add(   "msg.no.objective.initialize   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
62	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeStdObjectives();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeStdObjectives();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeStdObjectives();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeStdObjectives();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
63	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeColumns();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeColumns();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeColumns();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeStdObjectives();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
64	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeColumns();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeColumns();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeColumns();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectives();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
65	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRealMatrix();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRealMatrix();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeRealMatrix();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
66	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRealMatrix();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRealMatrix();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeRealMatrix();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
67	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeColumnMatrix();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeColumnMatrix();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeColumnMatrix();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
68	[BUG]  [BUGGY]  int  maxUlps  =  getMaxUlps()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  maxUlps  =  getMaxUlps()  +  1;  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	int  maxUlps  =  getMaxUlps()  +  1;	  int    maxUlps    =    getMaxUlps();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
69	[BUG]  [BUGGY]  int  maxUlps  =  getMaxUlps()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  maxUlps  =  getMaxUlps()  -  1;  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	int  maxUlps  =  getMaxUlps()  -  1;	  int    maxUlps    =    getMaxUlps();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
70	[BUG]  [BUGGY]  int  maxUlps  =  getMaxUlps()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  maxUlps  =  getMaxUlps()  -  2;  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	int  maxUlps  =  getMaxUlps()  -  2;	  int    maxUlps    =    getMaxUlps();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
71	[BUG]  [BUGGY]  int  maxUlps  =  getMaxUlps()  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  maxUlps  =  getMaxUlps()  +  2;  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	int  maxUlps  =  getMaxUlps()  +  2;	  int    maxUlps    =    getMaxUlps();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
72	[BUG]  [BUGGY]  columnLabels.add( "Serialize: ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Serialize: ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Serialize: ");	  columnLabels.add(   "Serialize.   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  columnLabels.add( "Serialize... ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Serialize... ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Serialize... ");	  columnLabels.add(   "Serialize.   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  columnLabels.add( "Serialize ",  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Serialize ",  2);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Serialize ",  2);	  columnLabels.add(   "Serialize.   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getRangeObjectiveFunction();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getRangeObjectiveFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getRangeObjectiveFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeObjectiveFunction();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeObjectiveFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeObjectiveFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getOriginalObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getOriginalObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getOriginalObjectiveFunctions();	  LinearObjectiveFunction    f    =    getOriginalNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
78	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  f);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  f);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  f);	  Collections.sort(this.columnLabels,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
79	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  new  LinearObjectiveFunction());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  new  LinearObjectiveFunction());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  new  LinearObjectiveFunction());	  Collections.sort(this.columnLabels,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
80	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[2]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[2]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[2]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[0]);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
81	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[1]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[1]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[0]);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
82	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().toArray(new  LinearObjectiveFunction[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().toArray(new  LinearObjectiveFunction[0]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().toArray(new  LinearObjectiveFunction[0]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[0]);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getRangeObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getRangeObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getRangeObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
84	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  DEFAULT_ULPS);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(deFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
85	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
86	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions()  +  1;  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions()  +  1;	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
87	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initialize(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initialize(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initialize(0);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initialize();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
88	[BUG]  [BUGGY]  columnLabels.add( "NonNegative ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "NonNegative ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "NonNegative ");	  columnLabels.add(   "Negative   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
89	[BUG]  [BUGGY]  columnLabels.add( "Negative. ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Negative. ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Negative. ");	  columnLabels.add(   "Negative   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
90	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getRealMatrix().clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getRealMatrix().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getRealMatrix().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
91	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getOriginalObjectiveFunctions().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getOriginalObjectiveFunctions().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getOriginalObjectiveFunctions().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
92	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getOriginalNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getOriginalNumObjectiveFunctions());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getOriginalNumObjectiveFunctions());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
93	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getOriginalNumDecisionVariables());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getOriginalNumDecisionVariables());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
94	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumSlackVariables());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumSlackVariables());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumSlackVariables());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
95	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  2);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
96	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  0);	  Collections.sort(this.columnLabels,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
97	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  maxUlps);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  DEFAULT_ULPS,  maxUlps);	  Collections.sort(this.columnLabels,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
98	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);	  Collections.sort(this.columnLabels,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
99	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  epsilon);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  DEFAULT_ULPS,  epsilon);	  Collections.sort(this.columnLabels,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
100	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  false);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  false);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
101	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  maxUlps);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  maxUlps);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
102	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  columnLabels);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().get(1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().get(1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().get(1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().get(1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
104	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  columns,  this.maxUlps);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  columns,  this.maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  columns,  this.maxUlps);	  Collections.sort(this.columnLabels,    columns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
105	[BUG]  [BUGGY]  columnLabels.add( "slack ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "slack ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "slack ");	  columnLabels.add(   "s       ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
106	[BUG]  [BUGGY]  columnLabels.add( "std ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "std ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "std ");	  columnLabels.add(   "s       ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
107	[BUG]  [BUGGY]  columnLabels.add( "x "  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "x "  +  i);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "x "  +  i);	  columnLabels.add(   "x   ");    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
108	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  DEFAULT_ULPS);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  getNumObjectiveFunctions());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  getNumObjectiveFunctions());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
110	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps  +  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
111	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
112	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions().clone();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunctions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions()  +  1;  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions()  +  1;	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunctions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  columnLabels.add( "s   "  +  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "s   "  +  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "s   "  +  0);	  columnLabels.add(   "w   "    +    0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
115	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getNumObjectiveFunctions().clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getNumObjectiveFunctions().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getNumObjectiveFunctions().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
116	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunctions().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunctions().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumObjectiveFunctions().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
117	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)columnLabels.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
118	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(columnLabels.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(columnLabels.size()  -  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(columnLabels.size()  -  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)columnLabels.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
119	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumObjectiveFunctions(1);	  LinearObjectiveFunction    f    =    getNumObjectiveFunctions(2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
120	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumObjectiveFunctions(0);	  LinearObjectiveFunction    f    =    getNumObjectiveFunctions(2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
121	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(4);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(4);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumObjectiveFunctions(4);	  LinearObjectiveFunction    f    =    getNumObjectiveFunctions(2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
122	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunctions().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunctions().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunctions().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
123	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUri().clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUri().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUri().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
124	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initialize();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initialize();  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initialize();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initialize();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
125	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize(0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initialize(0);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initialize();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
126	[BUG]  [BUGGY]  columnLabels.add( "W "  +  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "W "  +  getNumObjectiveFunctions());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "W "  +  getNumObjectiveFunctions());	  columnLabels.add(   "W   "    +    getNumSlackVariables());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
127	[BUG]  [BUGGY]  columnLabels.add( "W "  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "W "  +  getOriginalNumDecisionVariables());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "W "  +  getOriginalNumDecisionVariables());	  columnLabels.add(   "W   "    +    getNumSlackVariables());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
128	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  columnLabels);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
129	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  columns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  columns);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  columns);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
130	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  false);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  false);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
131	[BUG]  [BUGGY]  columnLabels.add( "B "  +  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  NEGATIVE_VAR_COLUMN_LABEL);	  columnLabels.add(   "B   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
132	[BUG]  [BUGGY]  columnLabels.add( "B "  +  NEGATIVE_VAR_COLUMN_LABEL,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  NEGATIVE_VAR_COLUMN_LABEL,  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  NEGATIVE_VAR_COLUMN_LABEL,  0);	  columnLabels.add(   "B   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
133	[BUG]  [BUGGY]  Collections.sort(columnLabels,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  epsilon);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  epsilon);	  Collections.sort(columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
134	[BUG]  [BUGGY]  Collections.sort(columnLabels,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  1);	  Collections.sort(columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
135	[BUG]  [BUGGY]  Collections.sort(columnLabels,  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  2);	  Collections.sort(columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
136	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().get(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().get(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().get(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions().get(0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
137	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getNumObjectiveFunctions().get(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getNumObjectiveFunctions().get(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getNumObjectiveFunctions().get(0);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions().get(0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
138	[BUG]  [BUGGY]  Collections.sort(this.maxUlps,  this.columnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.maxUlps,  this.columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.maxUlps,  this.columnLabels);	  Collections.sort(this.columnLabels,    this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
139	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  this.maxUlps  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  this.maxUlps  +  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  this.maxUlps  +  1);	  Collections.sort(this.columnLabels,    this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
140	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  this.maxUlps  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  this.maxUlps  -  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  this.maxUlps  -  1);	  Collections.sort(this.columnLabels,    this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
141	[BUG]  [BUGGY]  Collections.sort(columnLabels,  this.maxUlps);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  this.maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  this.maxUlps);	  Collections.sort(this.columnLabels,    this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
142	[BUG]  [BUGGY]  columnLabels.add( "B "  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  2);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  2);	  columnLabels.add(   "B   "    +    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
143	[BUG]  [BUGGY]  columnLabels.add( "B "  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  1);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  1);	  columnLabels.add(   "B   "    +    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumobjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumobjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumobjectiveFunctions();	  LinearObjectiveFunction    f    =    getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
145	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)columnLabels.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
146	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(columnIndex);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(columnIndex);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)columnLabels.get(columnIndex);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)columnLabels.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
147	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunction();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
148	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeFields();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeFields();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeFields();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRowLabels();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
149	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectives();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectives();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectives();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRowLabels();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
150	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getDecisionVariables();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getDecisionVariables();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalVariables();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
151	[BUG]  [BUGGY]  columnLabels.add( "null "  +  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "null "  +  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "null "  +  0);	  columnLabels.add(   "w   "    +    0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
152	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions().length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions().length;  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumObjectiveFunctions().length;	  LinearObjectiveFunction    f    =    getNumObjectiveFunctions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
153	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions()  [0];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions()  [0];  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions()  [0];	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions()    [0];    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
154	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalBounds();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalBounds();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalBounds();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getUpperBounds();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
155	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
156	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getVarObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getVarObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getVarObjectiveFunctions();	  LinearObjectiveFunction    f    =    getLinearObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
157	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  NEGATIVE_VAR_COLUMN_LABEL);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
158	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  0);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
159	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePositions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePositions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePositions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectives();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
160	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePaths();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePaths();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePaths();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectives();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
161	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectiveColumnLabels();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectiveColumnLabels();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectiveColumnLabels();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRangeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
162	[BUG]  [BUGGY]  columnLabels.add( "stack ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "stack ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "stack ");	  columnLabels.add(   "s       ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
163	[BUG]  [BUGGY]  columnLabels.add( "src ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "src ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "src ");	  columnLabels.add(   "s       ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
164	[BUG]  [BUGGY]  columnLabels.add( "Serialize ".);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Serialize ".);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Serialize ".);	  columnLabels.add(   "Serialize.   ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
165	[BUG]  [BUGGY]  columnLabels.add( "B "  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  getOriginalNumDecisionVariables());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  getOriginalNumDecisionVariables());	  columnLabels.add(   "B   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
166	[BUG]  [BUGGY]  columnLabels.add( "B "  +  getOriginalNumDecisionVariables(),  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  getOriginalNumDecisionVariables(),  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  getOriginalNumDecisionVariables(),  0);	  columnLabels.add(   "B   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
167	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.columnLabels.get(3);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.columnLabels.get(3);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.columnLabels.get(3);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.columnLabels.get(2);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
168	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalFunction();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
169	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(3);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(3);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunction(3);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunction(2);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
170	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
171	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeNumberObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeNumberObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeNumberObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
172	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectiveFunctions(2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectiveFunctions(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeObjectiveFunctions(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
173	[BUG]  [BUGGY]  columnLabels.add( "B "  +  epsilon);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  epsilon);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  epsilon);	  columnLabels.add(   "B   "    +    f);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
174	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().iterator();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().iterator();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
175	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(3);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getNumObjectiveFunctions(3);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getNumObjectiveFunctions(3);	  LinearObjectiveFunction    f    =    getNumObjectiveFunctions(2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
176	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(deFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
177	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  null,  DEFAULT_ULPS);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
178	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeStandardMatrix();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeStandardMatrix();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeStandardMatrix();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
179	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  epsilon  +  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  epsilon  +  1);	  Collections.sort(this.columnLabels,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
180	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  +  2]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  +  2]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  +  2]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[getObjectiveFunctions().size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
181	[BUG]  [BUGGY]  Collections.sort(columns,  this.columnLabels);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columns,  this.columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columns,  this.columnLabels);	  Collections.sort(this.columnLabels,    columns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
182	[BUG]  [BUGGY]  Collections.sort(columns,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columns,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columns,  NEGATIVE_VAR_COLUMN_LABEL);	  Collections.sort(this.columnLabels,    columns);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
183	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  false);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  false);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
184	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  numSlackVariables);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  numSlackVariables);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  numSlackVariables);	  Collections.sort(this.columnLabels,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
185	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePlot();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePlot();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePlot();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
186	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeStdObjectives();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeStdObjectives();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeStdObjectives();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
187	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().toArray(new  LinearObjectiveFunction[this.getObjectiveFunctions().size()  ]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().toArray(new  LinearObjectiveFunction[this.getObjectiveFunctions().size()  ]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().toArray(new  LinearObjectiveFunction[this.getObjectiveFunctions().size()  ]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
188	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().iterator().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().iterator().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().iterator().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
189	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getStandardObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getStandardObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getStandardObjectiveFunctions();	  LinearObjectiveFunction    f    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
190	[BUG]  [BUGGY]  int  maxUlps  =  getMaxUlps()  *  DEFAULT_ULPS;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  maxUlps  =  getMaxUlps()  *  DEFAULT_ULPS;  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	int  maxUlps  =  getMaxUlps()  *  DEFAULT_ULPS;	  int    maxUlps    =    getMaxUlps();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
191	[BUG]  [BUGGY]  Collections.sort(columnLabels,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  DEFAULT_ULPS);	  Collections.sort(columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
192	[BUG]  [BUGGY]  Collections.sort(columnLabels,  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  getNumObjectiveFunctions());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  getNumObjectiveFunctions());	  Collections.sort(columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
193	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions(2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNegativeFunctions(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunctions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
194	[BUG]  [BUGGY]  columnLabels.add( "msg.no.objective.initialize ",  epsilon);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "msg.no.objective.initialize ",  epsilon);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "msg.no.objective.initialize ",  epsilon);	  columnLabels.add(   "msg.no.objective.initialize   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
195	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeNegativeFunctions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeNegativeFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeNegativeFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
196	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeNumberObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeNumberObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeNumberObjectiveFunctions();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
197	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeObjectiveFunctions(2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeObjectiveFunctions(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeObjectiveFunctions(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
198	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  DEFAULT_ULPS);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
199	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  getOriginalNumDecisionVariables());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  getOriginalNumDecisionVariables());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
200	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  _objectiveFunctions,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  _objectiveFunctions,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  _objectiveFunctions,  DEFAULT_ULPS);	  Collections.sort(this.columnLabels,    _objectiveFunctions);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
201	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[4]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[4]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[4]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[0]);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
202	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)initialize();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initialize();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
203	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeAllObjectives();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeAllObjectives();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeAllObjectives();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initialize();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
204	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().toArray(new  LinearObjectiveFunction[getNumObjectiveFunctions().size()  ]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().toArray(new  LinearObjectiveFunction[getNumObjectiveFunctions().size()  ]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().toArray(new  LinearObjectiveFunction[getNumObjectiveFunctions().size()  ]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
205	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().toArray(new  LinearObjectiveFunction[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().toArray(new  LinearObjectiveFunction[0]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions().toArray(new  LinearObjectiveFunction[0]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
206	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions(2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions(2);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getNumObjectiveFunctions(2);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
207	[BUG]  [BUGGY]  columnLabels.add( "Negative, ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Negative, ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Negative, ");	  columnLabels.add(   "Negative   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
208	[BUG]  [BUGGY]  columnLabels.add( "Negative ",  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "Negative ",  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "Negative ",  0);	  columnLabels.add(   "Negative   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
209	[BUG]  [BUGGY]  columnLabels.add( "WP "  +  getNumSlackVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "WP "  +  getNumSlackVariables());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "WP "  +  getNumSlackVariables());	  columnLabels.add(   "W   "    +    getNumSlackVariables());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
210	[BUG]  [BUGGY]  columnLabels.add( "W "  +  getNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "W "  +  getNumDecisionVariables());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "W "  +  getNumDecisionVariables());	  columnLabels.add(   "W   "    +    getNumSlackVariables());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
211	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalVariableFunctions().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalVariableFunctions().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalVariableFunctions().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
212	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  this.maxUlps);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  this.maxUlps);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.maxUlps,  this.maxUlps);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this.maxUlps);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
213	[BUG]  [BUGGY]  columnLabels.add( "naN ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "naN ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "naN ");	  columnLabels.add(   "NaN   ");    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
214	[BUG]  [BUGGY]  columnLabels.add( "B "  +  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "B "  +  getNumObjectiveFunctions());  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "B "  +  getNumObjectiveFunctions());	  columnLabels.add(   "B   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
215	[BUG]  [BUGGY]  Collections.sort(columnLabels,  this.columnLabels);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(columnLabels,  this.columnLabels);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(columnLabels,  this.columnLabels);	  Collections.sort(this.columnLabels,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
216	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().remove(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().remove(0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.getObjectiveFunctions().remove(0);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.getObjectiveFunctions().get(0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
217	[BUG]  [BUGGY]  columnLabels.add( "x   "  +  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "x   "  +  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "x   "  +  0);	  columnLabels.add(   "w   "    +    0);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
218	[BUG]  [BUGGY]  columnLabels.add( "W "  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "W "  +  i);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "W "  +  i);	  columnLabels.add(   "W   "    +    2);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
219	[BUG]  [BUGGY]  columnLabels.add( "msg.no.objective. ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "msg.no.objective. ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "msg.no.objective. ");	  columnLabels.add(   "msg.no.objective.initialize   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
220	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  DEFAULT_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  DEFAULT_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(DEFAULT_ULPS,  DEFAULT_VAR_COLUMN_LABEL);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(deFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
221	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  false,  DEFAULT_ULPS);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
222	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables().clone();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables().clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getOriginalObjectiveFunctions().clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
223	[BUG]  [BUGGY]  columnLabels.add( ",Negative ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( ",Negative ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( ",Negative ");	  columnLabels.add(   "Negative   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
224	[BUG]  [BUGGY]  columnLabels.add( "negative ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "negative ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "negative ");	  columnLabels.add(   "Negative   ");    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
225	[BUG]  [BUGGY]  columnLabels.add( "select   ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "select   ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "select   ");	  columnLabels.add(   "s       ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
226	[BUG]  [BUGGY]  int  maxUlps  =  getMaxUlps()  -  DEFAULT_ULPS;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  int  maxUlps  =  getMaxUlps()  -  DEFAULT_ULPS;  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	int  maxUlps  =  getMaxUlps()  -  DEFAULT_ULPS;	  int    maxUlps    =    getMaxUlps();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
227	[BUG]  [BUGGY]  columnLabels.add( "null ",  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "null ",  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "null ",  0);	  columnLabels.add(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
228	[BUG]  [BUGGY]  columnLabels.add( "N-objectiveFunction ");  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "N-objectiveFunction ");  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "N-objectiveFunction ");	  columnLabels.add(   "N-ObjectiveFunction   ");    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
229	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumDecisionVariables());  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumDecisionVariables());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
230	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions()  +  1);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions()  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
231	[BUG]  [BUGGY]  columnLabels.add( "b "  +  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "b "  +  0);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "b "  +  0);	  columnLabels.add(   "B   "    +    0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
232	[BUG]  [BUGGY]  columnLabels.add( "w "  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  columnLabels.add( "w "  +  1);  [BUGGY]      }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	columnLabels.add( "w "  +  1);	  columnLabels.add(   "W   "    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
233	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePath();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePath();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializePath();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
234	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  -  2]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  -  2]);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new  LinearObjectiveFunction[getObjectiveFunctions().size()  -  2]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().toArray(new    LinearObjectiveFunction[getObjectiveFunctions().size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
235	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getCurrentFunction();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getCurrentFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getCurrentFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getSecondFunction();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
236	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getFirstFunction();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getFirstFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getFirstFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getSecondFunction();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
237	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBound();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBound();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getUpperBound();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getSecondFunction();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
238	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeValues();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeValues();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeValues();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeStdObjectives();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
239	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.columnLabels.initialize();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.columnLabels.initialize();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.columnLabels.initialize();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initialize();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
240	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.table.initialize();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.table.initialize();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.table.initialize();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initialize();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
241	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  epsilon,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  epsilon,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  epsilon,  DEFAULT_ULPS);	  Collections.sort(this.columnLabels,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
242	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.objectiveFunctions.iterator().next();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.objectiveFunctions.iterator().next();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.objectiveFunctions.iterator().next();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
243	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables().iterator().next();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables().iterator().next();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getVariables().iterator().next();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getObjectiveFunctions().iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
244	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  null);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(getNumObjectiveFunctions(),  null);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
245	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getColumns().iterator().next();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getColumns().iterator().next();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getColumns().iterator().next();	  LinearObjectiveFunction    f    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
246	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumberObjectiveFunction();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumberObjectiveFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumberObjectiveFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNumberObjectiveFunction();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
247	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeNumberColumnLabels();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeNumberColumnLabels();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeNumberColumnLabels();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRangeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
248	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.table.initializeRealMatrix();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.table.initializeRealMatrix();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.table.initializeRealMatrix();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
249	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeScalarMatrix();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeScalarMatrix();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.initializeScalarMatrix();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.initializeRealMatrix();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
250	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeShapes();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeShapes();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.initializeShapes();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
251	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunctions().size();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunctions().size();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunctions().size();	  LinearObjectiveFunction    f    =    getLinearObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
252	[BUG]  [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  Collections.sort(this.columnLabels,  DEFAULT_ULPS,  0);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	Collections.sort(this.columnLabels,  DEFAULT_ULPS,  0);	  Collections.sort(this.columnLabels,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
253	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getOriginalLinearObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  getOriginalLinearObjectiveFunctions();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  getOriginalLinearObjectiveFunctions();	  LinearObjectiveFunction    f    =    getOriginalNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
254	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  DEFAULT_ULPS);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this,  DEFAULT_ULPS);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(this);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
255	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(null,  DEFAULT_ULPS,  NEGATIVE_VAR_COLUMN_LABEL);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(null,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
256	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeShapes();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeShapes();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeShapes();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.super.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
257	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeAllObjectives();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeAllObjectives();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeAllObjectives();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.super.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
258	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeStructure();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeStructure();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.super.initializeStructure();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.super.initializeColumnLabels();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
259	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumberFunction();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initializeColumnLabels()  {  if  (getNumObjectiveFunctions()  ==  2)  {      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumberFunction();  [BUGGY]      columnLabels.add(     "W     ");  }  columnLabels.add(     "Z     ");  for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(     "x     "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(     "s     "  +  i);  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	155	155	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)getOriginalNumberFunction();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)getNegativeFunction();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
