bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
2	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicColumn(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicColumn(negativeVarColumn):  null;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicColumn(negativeVarColumn):  null;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
3	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicColumn(positiveVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicColumn(positiveVarColumn):  null;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicColumn(positiveVarColumn):  null;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
4	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  negativeVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
5	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ");  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ");  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ");		non-compiled	[CE]  illegal  start  of  expression	90	None	add
6	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  ==  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  ==  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	Integer  negativeVarBasicRow  =  negativeVarColumn  ==  0?  getBasicRow(negativeVarColumn):  null;	Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
7	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn!=  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn!=  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	Integer  negativeVarBasicRow  =  negativeVarColumn!=  0?  getBasicRow(negativeVarColumn):  null;	Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
8	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >=  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >=  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	Integer  negativeVarBasicRow  =  negativeVarColumn  >=  0?  getBasicRow(negativeVarColumn):  null;	Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
9	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  ==  null?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  ==  null?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	Integer  negativeVarBasicRow  =  negativeVarColumn  ==  null?  getBasicRow(negativeVarColumn):  null;	Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
10	[BUG]  [BUGGY]    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
11	[BUG]  [BUGGY]    int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);		non-compiled	[CE]  illegal  start  of  expression	90	None	add
12	[BUG]  [BUGGY]    int  negativeVarColumn  =  columnLabels.indexOf(negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    int  negativeVarColumn  =  columnLabels.indexOf(negativeVarColumn);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    int  negativeVarColumn  =  columnLabels.indexOf(negativeVarColumn);		non-compiled	[CE]  illegal  start  of  expression	90	None	add
13	[BUG]  [BUGGY]    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
14	[BUG]  [BUGGY]    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  1;  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  1;		non-compiled	[CE]  illegal  start  of  expression	90	None	add
15	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  columnLabels.indexOf( "x "  +  0);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  columnLabels.indexOf( "x "  +  0);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  columnLabels.indexOf( "x "  +  0);		non-compiled	[CE]  illegal  start  of  expression	90	None	add
16	[BUG]  [BUGGY]    int  negativeVarColumn  =  columnLabels.indexOf( "infinity ");  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    int  negativeVarColumn  =  columnLabels.indexOf( "infinity ");  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    int  negativeVarColumn  =  columnLabels.indexOf( "infinity ");		non-compiled	[CE]  illegal  start  of  expression	90	None	add
17	[BUG]  [BUGGY]    Integer  negativeVarColumn  =  columnLabels.indexOf( "x "  +  i);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    Integer  negativeVarColumn  =  columnLabels.indexOf( "x "  +  i);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	    Integer  negativeVarColumn  =  columnLabels.indexOf( "x "  +  i);		non-compiled	[CE]  illegal  start  of  expression	90	None	add
18	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  <  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  PointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]  Integer  negativeVarBasicRow  =  negativeVarColumn  <  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  PointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java	0.22360679774997896	398	398	1	replace	Integer  negativeVarBasicRow  =  negativeVarColumn  <  0?  getBasicRow(negativeVarColumn):  null;	Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
