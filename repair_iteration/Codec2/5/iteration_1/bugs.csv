bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.lineLength  =  0;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  0;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  0;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
2	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length;  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  lineSeparator.length;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  lineSeparator.length;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  1;  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  lineLength  +  1;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  lineLength  +  1;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
4	[BUG]  [BUGGY]  this.lineLength  -=  lineSeparator.length;  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  -=  lineSeparator.length;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  -=  lineSeparator.length;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
5	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  lineLength  -  1;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  lineLength  -  1;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
6	[BUG]  [BUGGY]  this.lineLength  =  1;  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  1;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  1;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
7	[BUG]  [BUGGY]  this.lineLength  =  urlSafe;  [CE]  ';'  expected  [FE]                AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  urlSafe;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  urlSafe;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
8	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  2;  [CE]  ';'  expected  [FE]                  AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  lineLength  +  2;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  lineLength  +  2;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
9	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	  	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
10	[BUG]  [BUGGY]    super();  this.urlSafe  =  urlSafe;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    super();  this.urlSafe  =  urlSafe;  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    super();  this.urlSafe  =  urlSafe;		non-compiled	[CE]  ';'  expected	10	None	add
11	[BUG]  [BUGGY]    this(0,  0,  0,  lineLength,  urlSafe);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(0,  0,  0,  lineLength,  urlSafe);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(0,  0,  0,  lineLength,  urlSafe);		non-compiled	[CE]  ';'  expected	10	None	add
12	[BUG]  [BUGGY]    this(lineLength,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(lineLength,  0,  lineSeparator.length);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(lineLength,  0,  lineSeparator.length);		non-compiled	[CE]  ';'  expected	10	None	add
13	[BUG]  [BUGGY]    this.urlSafe  =  urlSafe;  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.urlSafe  =  urlSafe;  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this.urlSafe  =  urlSafe;		non-compiled	[CE]  ';'  expected	10	None	add
14	[BUG]  [BUGGY]    this(0,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(0,  0,  lineSeparator.length);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(0,  0,  lineSeparator.length);		non-compiled	[CE]  ';'  expected	10	None	add
15	[BUG]  [BUGGY]    super();  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    super();  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    super();		non-compiled	[CE]  ';'  expected	10	None	add
16	[BUG]  [BUGGY]    this(0,  0,  lineLength,  urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(0,  0,  lineLength,  urlSafe);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(0,  0,  lineLength,  urlSafe);		non-compiled	[CE]  ';'  expected	10	None	add
17	[BUG]  [BUGGY]    this(lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                  AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(lineSeparator,  0,  lineLength);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(lineSeparator,  0,  lineLength);		non-compiled	[CE]  ';'  expected	10	None	add
18	[BUG]  [BUGGY]    this(0,  0,  lineSeparator.length,  0);  [CE]  ';'  expected  [FE]                    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(0,  0,  lineSeparator.length,  0);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(0,  0,  lineSeparator.length,  0);		non-compiled	[CE]  ';'  expected	10	None	add
19	[BUG]  [BUGGY]    this(lineLength,  lineSeparator,  false);  [CE]  ';'  expected  [FE]                      AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(lineLength,  lineSeparator,  false);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(lineLength,  lineSeparator,  false);		non-compiled	[CE]  ';'  expected	10	None	add
20	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  4;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  =  lineLength  +  4;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  =  lineLength  +  4;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
21	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);		non-compiled	[CE]  ';'  expected	10	None	add
22	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);		non-compiled	[CE]  ';'  expected	10	None	add
23	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  ';'  expected	10	None	add
24	[BUG]  [BUGGY]    super(lineLength,  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    super(lineLength,  lineSeparator,  urlSafe);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    super(lineLength,  lineSeparator,  urlSafe);		non-compiled	[CE]  ';'  expected	10	None	add
25	[BUG]  [BUGGY]    this(0,  0,  lineSeparator.length  -  1);  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this(0,  0,  lineSeparator.length  -  1);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    this(0,  0,  lineSeparator.length  -  1);		non-compiled	[CE]  ';'  expected	10	None	add
26	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineLength);  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineLength);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineLength);		non-compiled	[CE]  ';'  expected	10	None	add
27	[BUG]  [BUGGY]  this.lineLength  -=  lineLength;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]  this.lineLength  -=  lineLength;  [BUGGY]  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	this.lineLength  -=  lineLength;	this.lineLength  =  lineLength;  	non-compiled	[CE]  ';'  expected	9	None	replace
28	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  0);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  0);		non-compiled	[CE]  ';'  expected	10	None	add
29	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  String  sep;  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	288	288	2	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);		non-compiled	[CE]  ';'  expected	10	None	add
