bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSize);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSize);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.lineSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.decodeSize);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.decodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.decodeSize);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
14	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  char[]  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  char[]  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  char[]  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
15	[BUG]  [BUGGY]  this(0,  0,  lineLength,  char[]  urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineLength,  char[]  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineLength,  char[]  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
16	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  urlSafe);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  urlSafe);	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
17	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  urlSafe);	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeTable,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
24	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  byte[]  lineSeparator)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
25	[BUG]  [BUGGY]  this(Byte.parseByte(this.urlSafe),  Byte.parseByte(this.urlSafe));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.parseByte(this.urlSafe),  Byte.parseByte(this.urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.parseByte(this.urlSafe),  Byte.parseByte(this.urlSafe));	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
26	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
27	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
28	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
29	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
30	[BUG]  [BUGGY]  this(Byte.parseByte(this.urlSafe),  Byte.parseByte(lineSeparator));  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.parseByte(this.urlSafe),  Byte.parseByte(lineSeparator));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.parseByte(this.urlSafe),  Byte.parseByte(lineSeparator));	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
31	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
32	[BUG]  [BUGGY]  this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
33	[BUG]  [BUGGY]  this(0,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  this.lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  this.lineSeparator.length);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
34	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length  -  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length  -  1);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length  -  1);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
37	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length  +  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length  +  1);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length  +  1);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
38	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length  -  2);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length  -  2);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length  -  2);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
39	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  1);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  1);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  1);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineLength);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.decodeSize);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.decodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.decodeSize);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
45	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  0,  urlSafe)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  0,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  0,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
46	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  false)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  false)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
47	[BUG]  [BUGGY]  this(0,  CHUNK_SEPARATOR,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  CHUNK_SEPARATOR,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  CHUNK_SEPARATOR,  byte[]  lineSeparator,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
48	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
49	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  eof  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  eof  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  eof  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
50	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
51	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  true)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  true)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
52	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  false)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe,  false)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
53	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  null,  urlSafe)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  null,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  null,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
54	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  false)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  byte[]  lineSeparator,  false)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
55	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  false);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  byte[]  lineSeparator,  false);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
56	[BUG]  [BUGGY]  this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
57	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  true);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  true);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  byte[]  lineSeparator,  true);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
58	[BUG]  [BUGGY]  this(Byte.toString(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.toString(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.toString(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
59	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  true)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  byte[]  lineSeparator,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  byte[]  lineSeparator,  true)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
60	[BUG]  [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe));  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe));	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
61	[BUG]  [BUGGY]  this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe));  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.parseByte(this.urlSafe),  byte[]  lineSeparator,  boolean  urlSafe));	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
62	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  0,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  0,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
63	[BUG]  [BUGGY]  this(0,  CHUNK_SEPARATOR,  byte[]  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  CHUNK_SEPARATOR,  byte[]  lineSeparator,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  CHUNK_SEPARATOR,  byte[]  lineSeparator,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
64	[BUG]  [BUGGY]  this(0,  0,  byte[]  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  byte[]  lineSeparator,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  byte[]  lineSeparator,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
65	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  null);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  null);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  null);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
66	[BUG]  [BUGGY]  this(1,  byte[]  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(1,  byte[]  lineSeparator,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(1,  byte[]  lineSeparator,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
67	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  true);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  true);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  true);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
68	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  false);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe,  false);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
69	[BUG]  [BUGGY]  this(0,  0,  this.lineSeparator.length,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  this.lineSeparator.length,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  this.lineSeparator.length,  0);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
70	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length  -  1,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length  -  1,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length  -  1,  0);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
71	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  2);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  2);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  2);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
72	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  3);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  3);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  3);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
73	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  4);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  4);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  4);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
74	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length  -  2,  0);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length  -  2,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length  -  2,  0);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	6	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	6	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	6	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSeparator.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  lineLength);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlLength);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSize);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSize);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
86	[BUG]  [BUGGY]  this(0,  0,  byte[]  lineSeparator,  false);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  byte[]  lineSeparator,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  byte[]  lineSeparator,  false);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
87	[BUG]  [BUGGY]  this(1,  byte[]  lineSeparator,  false);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(1,  byte[]  lineSeparator,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(1,  byte[]  lineSeparator,  false);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
88	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  false,  this.urlSafe);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  false,  this.urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  false,  this.urlSafe);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
89	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  false,  true);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  false,  true);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  false,  true);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
90	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  false,  null);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  false,  null);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  false,  null);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
91	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  boolean  eof  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  boolean  eof  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  boolean  eof  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
92	[BUG]  [BUGGY]  this(Byte.parseByte(this.urlSafe),  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(Byte.parseByte(this.urlSafe),  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(Byte.parseByte(this.urlSafe),  boolean  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
93	[BUG]  [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength));	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
94	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  boolean  urlSafe,  false)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  boolean  urlSafe,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  boolean  urlSafe,  false)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
95	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  boolean  urlSafe,  true)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  boolean  urlSafe,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  boolean  urlSafe,  true)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
96	[BUG]  [BUGGY]  this(byte[]  lineSeparator,  boolean  urlSafe,  null);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(byte[]  lineSeparator,  boolean  urlSafe,  null);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(byte[]  lineSeparator,  boolean  urlSafe,  null);	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
97	[BUG]  [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator),  urlSafe)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator),  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator),  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
98	[BUG]  [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  0));  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  0));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  0));	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
99	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
100	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
101	[BUG]  [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
102	[BUG]  [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
103	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
104	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
105	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(this.line  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(this.line  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(this.line	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
106	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
107	[BUG]  [BUGGY]  this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineLength);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	28	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	28	None	replace
115	[BUG]  [BUGGY]  this.lineLength  =  0;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  0;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  0;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
116	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  }	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
117	[BUG]  [BUGGY]  this.lineLength  -=  lineLength;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  -=  lineLength;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  -=  lineLength;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
118	[BUG]  [BUGGY]  this.lineLength  =  1;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  1;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  1;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
119	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  }	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
120	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  }	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
121	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  0,  lineSeparator.length);  }	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
122	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(0,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(0,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  }  else  {  System.arraycopy(0,  0,  this.lineSeparator,  0,  lineSeparator.length);  }	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
123	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  lineLength  -  1;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  lineLength  -  1;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
124	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  false)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  false)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
125	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  boolean  eof  urlSafe)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  boolean  eof  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  boolean  eof  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
126	[BUG]  [BUGGY]  this(32,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(32,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(32,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
127	[BUG]  [BUGGY]  this(16,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(16,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(16,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
128	[BUG]  [BUGGY]  this(64,  0,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  0,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  0,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
129	[BUG]  [BUGGY]  this(128,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(128,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(128,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
130	[BUG]  [BUGGY]  this(60,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(60,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(60,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
131	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  true)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  true)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  -  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  -  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  -  1);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  +  1);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  +  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  +  1);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.separator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(lineSeparator,  0,  this.separator,  0,  lineSeparator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineSeparator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.separator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeTable,  0,  this.separator,  0,  lineSeparator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
137	[BUG]  [BUGGY]  this(0,  0,  0,  lineSeparator.length,  urlSafe);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineSeparator.length,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineSeparator.length,  urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
138	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  this.urlSafe);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  this.urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  this.urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
139	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  eof  urlSafe);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  eof  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  eof  urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
140	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe));  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe));	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
141	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length),  urlSafe);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length),  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length),  urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
142	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
143	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length));  [CE]  ';'  expected  [FE]                                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length));	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
144	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  CHUNK_SEPARATOR);  [CE]  ';'  expected  [FE]                                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  CHUNK_SEPARATOR);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  CHUNK_SEPARATOR);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
145	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(this.urlSafe,  0,  lineSeparator.length),  urlSafe);  [CE]  ';'  expected  [FE]                                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(this.urlSafe,  0,  lineSeparator.length),  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(this.urlSafe,  0,  lineSeparator.length),  urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
146	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
147	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  URL_SAFE_ENCODE_TABLE.length);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  URL_SAFE_ENCODE_TABLE.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  URL_SAFE_ENCODE_TABLE.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
148	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  URL_SAFE_ENCODE_TABLE.length);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  URL_SAFE_ENCODE_TABLE.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  URL_SAFE_ENCODE_TABLE.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
149	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
150	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
151	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
152	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
153	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  0);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
155	[BUG]  [BUGGY]  this(0,  0,  0,  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  1);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  1);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
156	[BUG]  [BUGGY]  this(0,  0,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineSeparator.length);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  0);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  0);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  0);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  0);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
159	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
160	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
161	[BUG]  [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
162	[BUG]  [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
163	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
164	[BUG]  [BUGGY]  this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
165	[BUG]  [BUGGY]  AssertionFailedError.this.lineLength  =  this.lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.lineLength  =  this.lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	AssertionFailedError.this.lineLength  =  this.lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
166	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.line  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.line  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.line	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
167	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.line  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.line  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.line	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
168	[BUG]  [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
169	[BUG]  [BUGGY]  this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  -=  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
170	[BUG]  [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
171	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[this.urlSafe.length];  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[this.urlSafe.length];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[this.urlSafe.length];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
172	[BUG]  [BUGGY]  this.lineLength  =  1;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  1;  this.lineSeparator  =  new  byte[this.urlSafe.length];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  1;  this.lineSeparator  =  new  byte[this.urlSafe.length];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
173	[BUG]  [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length  +  1];  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length  +  1];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length  +  1];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
174	[BUG]  [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length  +  1];  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length  +  1];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  0;  this.lineSeparator  =  new  byte[this.urlSafe.length  +  1];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
175	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
176	[BUG]  [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  0;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  0;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
177	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
178	[BUG]  [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	AssertionFailedError.this.lineLength  =  0;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
179	[BUG]  [BUGGY]  this.lineLength  =  1;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  1;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  1;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
180	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
181	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
182	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(4,  Math.pow(4,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(4,  Math.pow(4,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(4,  Math.pow(4,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  urlSafe.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
188	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.decodeSize);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.decodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.decodeSize);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	29	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	29	None	replace
192	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  0,  urlSafe)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  0,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  0,  urlSafe)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
193	[BUG]  [BUGGY]  this(0L,  0,  lineSeparator.length,  urlSafe)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  0,  lineSeparator.length,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  0,  lineSeparator.length,  urlSafe)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
194	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  false)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  false)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
195	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  true)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  true)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
196	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  urlSafe,  false)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  urlSafe,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  urlSafe,  false)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
197	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  null,  urlSafe)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  null,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  null,  urlSafe)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
198	[BUG]  [BUGGY]  this(0L,  lineSeparator,  0,  urlSafe)  {  [CE]  ';'  expected  [FE]                                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  lineSeparator,  0,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  lineSeparator,  0,  urlSafe)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
199	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  urlSafe,  true)  {  [CE]  ';'  expected  [FE]                                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  urlSafe,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  urlSafe,  true)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
200	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  urlSafe)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    int    urlSafe)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
201	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  1);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	1	None	replace
202	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	1	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.decodeSize);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.decodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.decodeSize);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	36	None	replace
204	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  eof  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  eof  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  eof  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
205	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  0,  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  0,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  0,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
206	[BUG]  [BUGGY]  this(32,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(32,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(32,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
207	[BUG]  [BUGGY]  this(16,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(16,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(16,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
208	[BUG]  [BUGGY]  this(64,  0,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  0,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  0,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
209	[BUG]  [BUGGY]  this(128,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(128,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(128,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
210	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  urlSafe,  false)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  urlSafe,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  urlSafe,  false)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
211	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.decodeSize);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.decodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.decodeSize);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
212	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.sep.length);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.sep.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.sep.length);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  lineSeparator.length);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
214	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  urlSafe);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  urlSafe);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.urlSafe);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSeparator.length);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineLength);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.sepLength);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.sepLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.sepLength);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSep.length);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSep.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSep.length);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
220	[BUG]  [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[0];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[0];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[0];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
221	[BUG]  [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[0];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[0];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[0];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
222	[BUG]  [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
223	[BUG]  [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[4];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[4];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[4];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
224	[BUG]  [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
225	[BUG]  [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineSeparator!=  null)  {  this.lineSeparator  =  new  byte[1];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  }	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
226	[BUG]  [BUGGY]  System.arraycopy(this.decodeSize,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeSize,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeSize,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
227	[BUG]  [BUGGY]  System.arraycopy(this.decodeSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeSeparator,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	2	None	replace
228	[BUG]  [BUGGY]  if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
229	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
230	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_S  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_S  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_S	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
231	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPAR  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPAR  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPAR	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
232	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arra  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arra	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
233	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  length)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  length)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  length)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
234	[BUG]  [BUGGY]  this(new  byte[0],  new  byte[0]);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(new  byte[0],  new  byte[0]);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(new  byte[0],  new  byte[0]);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
235	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  isEnabled)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  isEnabled)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  isEnabled)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
236	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  this.urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  this.urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  this.urlSafe)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
237	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
238	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  len)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  len)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  len)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
239	[BUG]  [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeTable,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	29	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	29	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(this.decodeSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeSeparator,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	29	None	replace
242	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  1;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  lineLength  +  1;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  lineLength  +  1;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
243	[BUG]  [BUGGY]  this.lineLength  -=  lineSeparator.length;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  -=  lineSeparator.length;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  -=  lineSeparator.length;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
244	[BUG]  [BUGGY]  this.lineLength  =(int)Math.floor(this.urlSafe?  1  :  0);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =(int)Math.floor(this.urlSafe?  1  :  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =(int)Math.floor(this.urlSafe?  1  :  0);	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
245	[BUG]  [BUGGY]  this.lineLength  =(int)Math.rint(this.urlSafe?  1  :  0);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =(int)Math.rint(this.urlSafe?  1  :  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =(int)Math.rint(this.urlSafe?  1  :  0);	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
246	[BUG]  [BUGGY]  this.lineLength  =(int)Math.pow(10,  lineSeparator.length);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =(int)Math.pow(10,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =(int)Math.pow(10,  lineSeparator.length);	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
247	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
248	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
249	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
250	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
251	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
252	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLeng  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLeng  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLeng	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
253	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
254	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
255	[BUG]  [BUGGY]  this(12,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(12,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(12,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
256	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  boolean  urlSafe,  false)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  boolean  urlSafe,  false)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  boolean  urlSafe,  false)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
257	[BUG]  [BUGGY]  this(256,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(256,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(256,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  1);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	6	None	replace
259	[BUG]  [BUGGY]  this(12,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(12,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(12,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
260	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  urlSafe,  true)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  urlSafe,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  urlSafe,  true)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
261	[BUG]  [BUGGY]  this(60,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(60,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(60,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.encodeSize);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.encodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.encodeSize);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
263	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  char  urlSafe)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  char  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  char  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    int    urlSafe)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
264	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  urlSafe)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  int  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    int    urlSafe)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
265	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
266	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
267	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.sep,  0,  this.sep,  0,  0);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.sep,  0,  this.sep,  0,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.sep,  0,  this.sep,  0,  0);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
268	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
269	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
270	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.sep,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.sep,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.sep,  0,  lineSeparator,  0,  lineSeparator.length);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
271	[BUG]  [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	UnsupportedEncodingException  uee  =  new  UnsupportedEncodingException( " ");  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length);	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
272	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.identityHashCode(this));  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.identityHashCode(this));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.identityHashCode(this));	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
273	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  urlSafe));  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  urlSafe));	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
274	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator),  urlSafe);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator),  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator),  urlSafe);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	36	None	replace
276	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	36	None	replace
277	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineLength);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineLength);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	1	None	replace
278	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
279	[BUG]  [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.urlSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeTable,  0,  this.urlSeparator,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(this.decodeSize,  0,  this.urlSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeSize,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeSize,  0,  this.urlSeparator,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSep);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSep);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSep);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
282	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSeparator.length);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSeparator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
283	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.encodeSize);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.encodeSize);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.encodeSize);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
284	[BUG]  [BUGGY]  this(0,  CHUNK_SEPARATOR,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  CHUNK_SEPARATOR,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  CHUNK_SEPARATOR,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
285	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  CHUNK_SEPARATOR);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  CHUNK_SEPARATOR);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  CHUNK_SEPARATOR);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
286	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
287	[BUG]  [BUGGY]  System.arraycopy(this.decodeSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeSeparator,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
288	[BUG]  [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeTable,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeTable,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
289	[BUG]  [BUGGY]  System.arraycopy(this.decodeSize,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.decodeSize,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.decodeSize,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
290	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  this.urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
291	[BUG]  [BUGGY]  this(0,  CHUNK_SEPARATOR,  urlSafe)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  CHUNK_SEPARATOR,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  CHUNK_SEPARATOR,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
292	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
293	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  null)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  null)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
294	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  true)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  true)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe,  true)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
295	[BUG]  [BUGGY]  this(0,  lineSeparator,  0,  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  lineSeparator,  0,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  lineSeparator,  0,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
296	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  urlSafe  ||  urlSafe;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
297	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ");  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ");  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  System.getProperty( "line.separator ");	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
298	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis();  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  System.currentTimeMillis();  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  System.currentTimeMillis();	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
299	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  1;  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  urlSafe  +  1;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  urlSafe  +  1;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
300	[BUG]  [BUGGY]  this.urlSafe  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  CHUNK_SEPARATOR;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  CHUNK_SEPARATOR;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
301	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "file.url ")!=  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  System.getProperty( "file.url ")!=  null;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  System.getProperty( "file.url ")!=  null;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
302	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.home ");  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  System.getProperty( "user.home ");  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  System.getProperty( "user.home ");	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.separator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.separator,  0,  lineSeparator.length);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
304	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  -  2);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  -  2);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length  -  2);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
305	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(3,  Math.pow(3,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(3,  Math.pow(3,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(3,  Math.pow(3,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
306	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(16,  Math.pow(16,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(16,  Math.pow(16,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(16,  Math.pow(16,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
307	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(5,  Math.pow(10,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(5,  Math.pow(10,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(5,  Math.pow(10,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
308	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(10.0,  Math.pow(10.0,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(10.0,  Math.pow(10.0,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(10.0,  Math.pow(10.0,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
309	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(1,  Math.pow(1,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(1,  Math.pow(1,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(1,  Math.pow(1,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
310	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length  +  1)];  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length  +  1)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length  +  1)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
311	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(4,  Math.pow(10,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[Math.pow(4,  Math.pow(10,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[Math.pow(4,  Math.pow(10,  lineSeparator.length)];	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
312	[BUG]  [BUGGY]  this(DECODE_TABLE,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(DECODE_TABLE,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DECODE_TABLE,  byte[]  lineSeparator,  boolean  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
313	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  boolean  urlSafe,  int  lineLength)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  boolean  urlSafe,  int  lineLength)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  boolean  urlSafe,  int  lineLength)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
314	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  char[]  lineSeparator)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  char[]  lineSeparator)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  char[]  lineSeparator)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
315	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  urlSafe)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  urlSafe)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
316	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  boolean  encoding)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  boolean  encoding)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  boolean  encoding)  {	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
317	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  char[]  urlSafe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  char[]  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  char[]  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
318	[BUG]  [BUGGY]  public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  urlSafe,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  urlSafe,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  urlSafe,  boolean  urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
319	[BUG]  [BUGGY]  public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  this.urlSafe)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  this.urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  this.urlSafe)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
320	[BUG]  [BUGGY]  public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  urlSafe,  boolean  encoding)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  urlSafe,  boolean  encoding)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(int  lineLength,  byte[]  lineSeparator,  char[]  urlSafe,  boolean  encoding)  {	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
321	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  urlSafe,  int  lineLength)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  urlSafe,  int  lineLength)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  urlSafe,  int  lineLength)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
322	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  currToken)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  currToken)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  currToken)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
323	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  encoding)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  encoding)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  encoding)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
324	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  this.urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  this.urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  this.urlSafe)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
325	[BUG]  [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  safe)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  safe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	public  Base64(byte[]  lineSeparator,  byte[]  lineSeparator,  boolean  safe)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
326	[BUG]  [BUGGY]  this(1,  1,  lineSeparator.length,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(1,  1,  lineSeparator.length,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(1,  1,  lineSeparator.length,  0);	  this(0,    0,    lineSeparator.length,    0);    	non-compiled	[CE]  ';'  expected	15	None	replace
327	[BUG]  [BUGGY]  this(0,  CHUNK_SEPARATOR,  false);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  CHUNK_SEPARATOR,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  CHUNK_SEPARATOR,  false);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
328	[BUG]  [BUGGY]  this(1,  byte[]  lineSeparator,  true);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(1,  byte[]  lineSeparator,  true);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(1,  byte[]  lineSeparator,  true);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
329	[BUG]  [BUGGY]  this(0,  lineSeparator,  true);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  lineSeparator,  true);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  lineSeparator,  true);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	28	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength  -  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength  -  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength  -  1);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength  +  1);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength  +  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength  +  1);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
333	[BUG]  [BUGGY]  if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
334	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
335	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(this.	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
336	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
337	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_S  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_S  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_S	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
338	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arra  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arra  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arra	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
339	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPAR  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPAR  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPAR	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
340	[BUG]  [BUGGY]  this(0L,  byte[]  lineSeparator,  null)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0L,  byte[]  lineSeparator,  null)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0L,  byte[]  lineSeparator,  null)  {	  this(0L,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
341	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
342	[BUG]  [BUGGY]  if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(!urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
343	[BUG]  [BUGGY]  if(Math.abs(sep)  <  0)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(Math.abs(sep)  <  0)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(Math.abs(sep)  <  0)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
344	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
345	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
346	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[Math.pow(10,  Math.pow(10,  lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_SEPARATOR	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[Math.pow(10,    Math.pow(10,    lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	34	None	replace
347	[BUG]  [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
348	[BUG]  [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
349	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
350	[BUG]  [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
351	[BUG]  [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe  ==  null)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[this.urlSafe.length];  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[this.urlSafe.length];    	non-compiled	[CE]  ';'  expected	33	None	replace
352	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  URL_SAFE_ENCODE_TABLE);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  URL_SAFE_ENCODE_TABLE);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  URL_SAFE_ENCODE_TABLE);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
353	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  true);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  true);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe,  true);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
354	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  null,  urlSafe);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  null,  urlSafe);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  null,  urlSafe);	  this(0,    byte[]    lineSeparator,    urlSafe);    	non-compiled	[CE]  ';'  expected	13	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  urlSafe);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
356	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineLength);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
357	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
358	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineSeparator.length);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	9	None	replace
359	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe!=  null  &&  urlSafe.length  >  0;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe!=  null  &&  urlSafe.length  >  0;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  urlSafe  ||  urlSafe!=  null  &&  urlSafe.length  >  0;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
360	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toLowerCase();  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toLowerCase();  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  System.getProperty( "line.separator ").toLowerCase();	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
361	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe  ==  null  &&  urlSafe.length  >  0;  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe  ==  null  &&  urlSafe.length  >  0;  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  urlSafe  ||  urlSafe  ==  null  &&  urlSafe.length  >  0;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
362	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUpperCase();  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUpperCase();  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  System.getProperty( "line.separator ").toUpperCase();	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
363	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe!=  null  &&  urlSafe.length  >  0);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe!=  null  &&  urlSafe.length  >  0);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.urlSafe  =  urlSafe  ||  urlSafe!=  null  &&  urlSafe.length  >  0);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  ';'  expected	5	None	replace
364	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	36	None	replace
365	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  +  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  +  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  +  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
366	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  System.arraycopy(this.urlSafe,  0,  this.urlSafe);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  System.arraycopy(this.urlSafe,  0,  this.urlSafe);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  System.arraycopy(this.urlSafe,  0,  this.urlSafe);  }	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
367	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
368	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  1;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  System.arraycopy(this.urlSafe,  0,  this.urlSafe);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  1;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  System.arraycopy(this.urlSafe,  0,  this.urlSafe);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  1;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  System.arraycopy(this.urlSafe,  0,  this.urlSafe);  }	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
369	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  1;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  1;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  1;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize,  0,  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize);  }	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
370	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  }  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  }	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
371	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  +  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  +  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.decodeSize  =  4;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize  +  lineSeparator.length);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.decodeSize	  this(0,    0,    0,    0);    	non-compiled	[CE]  ';'  expected	16	None	replace
372	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlEncoding);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlEncoding);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlEncoding);	      System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	4	None	replace
373	[BUG]  [BUGGY]  this(10,  byte[]  lineSeparator,  false);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(10,  byte[]  lineSeparator,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(10,  byte[]  lineSeparator,  false);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
374	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  false);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  false);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  false);	  this(0,    byte[]    lineSeparator,    false);    	non-compiled	[CE]  ';'  expected	18	None	replace
375	[BUG]  [BUGGY]  this(10,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(10,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(10,  byte[]  lineSeparator,  urlSafe)  {	  this(64,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
376	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(this.urlSafe,  0,  lineSeparator.length));  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(this.urlSafe,  0,  lineSeparator.length));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(this.urlSafe,  0,  lineSeparator.length));	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
377	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator.length);	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
378	[BUG]  [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length));  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  0,  lineLength,  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  0,  lineLength,  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length));	  this(0,    0,    0,    lineLength,    urlSafe);    	non-compiled	[CE]  ';'  expected	17	None	replace
379	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length  -  4);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length  -  4);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length  -  4);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
380	[BUG]  [BUGGY]  this(10,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(10,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(10,  0,  lineSeparator.length);	  this(0,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
381	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  URL_SAFE_ENCODE_TABLE)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  URL_SAFE_ENCODE_TABLE)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  URL_SAFE_ENCODE_TABLE)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
382	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  null);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe,  null);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe,  null);	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
383	[BUG]  [BUGGY]  this(1,  byte[]  lineSeparator,  urlSafe)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(1,  byte[]  lineSeparator,  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(1,  byte[]  lineSeparator,  urlSafe)  {	  this(0,    byte[]    lineSeparator,    urlSafe)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
384	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length  -  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length  -  1);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length  -  1);	      System.arraycopy(this.separator,    0,    this.separator,    0,    lineSeparator.length);    	non-compiled	[CE]  ';'  expected	10	None	replace
385	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  urlSafe));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  urlSafe));	  public    Base64(int    lineLength,    byte[]    lineSeparator,    int    urlSafe)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
386	[BUG]  [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  byte[]  lineSeparator,  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  byte[]  lineSeparator,  urlSafe));	  public    Base64(int    lineLength,    byte[]    lineSeparator,    int    urlSafe)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
387	[BUG]  [BUGGY]  this(0,  0,  lineLength,  urlSafe));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineLength,  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineLength,  urlSafe));	  public    Base64(int    lineLength,    byte[]    lineSeparator,    int    urlSafe)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
388	[BUG]  [BUGGY]  if(lineLength  >  0)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  if(lineLength  >  0)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(lineLength  >  0)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
389	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
390	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
391	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineLength);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
392	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.separator,  0,  urlSafe);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.separator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.separator,  0,  urlSafe);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
393	[BUG]  [BUGGY]  System.arraycopy(System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
394	[BUG]  [BUGGY]  System.arraycopy(System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);	      System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	27	None	replace
395	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CHUNK_	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
396	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
397	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CH  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CH  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	if(this.urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length)];  }  else  {  System.arraycopy(CH	  this.lineLength    =    lineLength;    this.lineSeparator    =    new    byte[System.arraycopy(this.lineSeparator,    0,    this.lineSeparator.length)];    	non-compiled	[CE]  ';'  expected	32	None	replace
398	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[0];  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[0];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[0];	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
399	[BUG]  [BUGGY]  this(DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
400	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
401	[BUG]  [BUGGY]  this(DEFAULT_LINE_SEPARATOR,  byte[]  lineSeparator)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_LINE_SEPARATOR,  byte[]  lineSeparator)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_LINE_SEPARATOR,  byte[]  lineSeparator)  {	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
402	[BUG]  [BUGGY]  this(DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR,  DEFAULT_LINE_SEPARATOR);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
403	[BUG]  [BUGGY]  this(10,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(10,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(10,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
404	[BUG]  [BUGGY]  this(64,  byte[]  lineSeparator,  boolean  urlSafe,  encodingMode)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(64,  byte[]  lineSeparator,  boolean  urlSafe,  encodingMode)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(64,  byte[]  lineSeparator,  boolean  urlSafe,  encodingMode)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
405	[BUG]  [BUGGY]  this(100,  byte[]  lineSeparator,  boolean  urlSafe)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(100,  byte[]  lineSeparator,  boolean  urlSafe)  {  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(100,  byte[]  lineSeparator,  boolean  urlSafe)  {	  this(64,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
406	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
407	[BUG]  [BUGGY]  this.lineLength  =  4;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  =  4;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  =  4;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
408	[BUG]  [BUGGY]  this.lineLength  +=  lineLength;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineLength  +=  lineLength;  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineLength  +=  lineLength;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  ';'  expected	31	None	replace
409	[BUG]  [BUGGY]  this(0,  0,  lineSeparator.length,  char[]  urlSafe));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineSeparator.length,  char[]  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineSeparator.length,  char[]  urlSafe));	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
410	[BUG]  [BUGGY]  this(0,  0,  lineLength,  char[]  urlSafe));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this(0,  0,  lineLength,  char[]  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(0,  0,  lineLength,  char[]  urlSafe));	  public    Base64(int    lineLength,    byte[]    lineSeparator,    char[]    urlSafe)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
411	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  eof  urlSafe));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  eof  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  eof  urlSafe));	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
412	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  0);	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
413	[BUG]  [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  eof  urlSafe));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  eof  urlSafe));  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(DEFAULT_VERSION,  DEFAULT_VERSION,  DEFAULT_VERSION,  eof  urlSafe));	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
414	[BUG]  [BUGGY]  this(new  byte[]  {  },  new  byte[]  {  lineSeparator,  urlSafe  }  );  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this(new  byte[]  {  },  new  byte[]  {  lineSeparator,  urlSafe  }  );  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(new  byte[]  {  },  new  byte[]  {  lineSeparator,  urlSafe  }  );	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
415	[BUG]  [BUGGY]  this(new  byte[]  {  },  new  byte[]  {  0,  0,  0,  0  }  );  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this(new  byte[]  {  },  new  byte[]  {  0,  0,  0,  0  }  );  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this(new  byte[]  {  },  new  byte[]  {  0,  0,  0,  0  }  );	  public    Base64(byte[]    lineSeparator,    byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
416	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  urlSafe);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
417	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
418	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
419	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	26	None	replace
420	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  1,  urlSafe);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  1,  urlSafe);  [BUGGY]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	System.arraycopy(this.sep,  0,  this.sep,  1,  urlSafe);	      System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	35	None	replace
421	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[System.identityHashCode(this)];  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[System.identityHashCode(this)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[System.identityHashCode(this)];	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
422	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  lineSeparator.length)];  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  lineSeparator.length)];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  lineSeparator.length)];	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
423	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
424	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length),  0);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length),  0);  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length),  0);	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
425	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[1];  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  this.lineSeparator  =  new  byte[1];  [BUGGY]    this.lineLength  =  lineLength;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  this.decodeSize  =  this.encodeSize  -  1;  if  (containsBase64Byte(lineSeparator))  {  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buf  encodeTable  lineSeparator  UnsupportedEncodingException  uee  boolean  eof  urlSafe  String  sep  byte  PAD  int  CHUNK_SIZE  MASK_6BITS  MASK_8BITS  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec2/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	287	287	2	replace	this.lineSeparator  =  new  byte[1];	  public    Base64(byte[]    lineSeparator,    boolean    urlSafe)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
