bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "Ee "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "Ee "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "Ee "  +  Integer.toString(exp));	  add(String.valueOf(x)+       "Ee   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	76	None	replace
2	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "Ee "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "Ee "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "Ee "  +  Integer.toString(value));	  add(String.valueOf(x)+       "Ee   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	76	None	replace
3	[BUG]  [BUGGY]  add(Integer.toString(x)+ "Ee "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x)+ "Ee "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+ "Ee "  +  Integer.toString(value));	  add(String.valueOf(x)+       "Ee   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	76	None	replace
4	[BUG]  [BUGGY]  add(Long.valueOf(x)+   "Ee "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+   "Ee "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+   "Ee "  +  Integer.toString(exp));	  add(String.valueOf(x)+       "Ee   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	76	None	replace
5	[BUG]  [BUGGY]  add(String.valueOf(x)+ "Ee "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+ "Ee "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+ "Ee "  +  Integer.toString(exp));	  add(String.valueOf(x)+       "Ee   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	76	None	replace
6	[BUG]  [BUGGY]  add(Long.valueOf(x)+  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  Long.toString(value));	  add(Long.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
7	[BUG]  [BUGGY]  add(Long.valueOf(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(mantissa)+  Integer.toString(exp));	  add(Long.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
8	[BUG]  [BUGGY]  add(Long.valueOf(x)+  Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  Integer.toString(mantissa));	  add(Long.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
9	[BUG]  [BUGGY]  add(Number.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    Add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	58	None	replace
10	[BUG]  [BUGGY]  Add(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(String.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(String.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    Add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	58	None	replace
11	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  Integer.toString(x));	          add(Long.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	64	None	replace
12	[BUG]  [BUGGY]  add(Long.toString(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+  Integer.toString(value));	          add(Long.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	64	None	replace
13	[BUG]  [BUGGY]  add(Long.toString(value)+  Long.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Long.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Long.toString(exp));	          add(Long.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	64	None	replace
14	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value)+  1;  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(value)+  1;  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value)+  1;	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
15	[BUG]  [BUGGY]  int  mantissa  =  Integer.toString(value);  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Integer.toString(value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Integer.toString(value);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
16	[BUG]  [BUGGY]  long  mantissa  =  Long.toString(value);  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  long  mantissa  =  Long.toString(value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	long  mantissa  =  Long.toString(value);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
17	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value)+  Integer.toString(exp);  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(value)+  Integer.toString(exp);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value)+  Integer.toString(exp);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
18	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(x);  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(x);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(x);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
19	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value  -  1);  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(value  -  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value  -  1);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
20	[BUG]  [BUGGY]  int  value  =  Integer.toString(value);  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  value  =  Integer.toString(value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  value  =  Integer.toString(value);	  add(Integer.toString(y));    	non-compiled	[CE]  cannot  find  symbol  op	54	None	replace
21	[BUG]  [BUGGY]  add(Long.valueOf(x)+ ",E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+ ",E "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+ ",E "  +  Integer.toString(value));	  add(Long.valueOf(x)+       "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	44	None	replace
22	[BUG]  [BUGGY]  add(String.valueOf(mantissa  +  1),  value);  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(mantissa  +  1),  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa  +  1),  value);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
23	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  prev);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  prev);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  prev);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
24	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  value  -  1);  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  value  -  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  value  -  1);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
25	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1),  value);  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1),  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1),  value);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
26	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
27	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
28	[BUG]  [BUGGY]  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value);  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
29	[BUG]  [BUGGY]  double  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
30	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "E   "  +  Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "E   "  +  Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "E   "  +  Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
31	[BUG]  [BUGGY]  add(Integer.valueOf(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(x)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(x)+  Integer.toString(exp));	  add(String.valueOf(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	80	None	replace
32	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  Integer.toString(value));	  add(Long.toString(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	16	None	replace
33	[BUG]  [BUGGY]  add(long.toString(mantissa)+  Integer.toString(exp));  [CE]  class  expected  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.toString(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.toString(mantissa)+  Integer.toString(exp));	  add(Long.toString(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  class  expected	16	None	replace
34	[BUG]  [BUGGY]  add(long.toString(value)+  Integer.toString(exp));  [CE]  class  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.toString(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.toString(value)+  Integer.toString(exp));	  add(Long.toString(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  class  expected	16	None	replace
35	[BUG]  [BUGGY]  add(Long.toString(double)+  Integer.toString(value));  [CE]  '.class'  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(double)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(double)+  Integer.toString(value));	          add(Long.toString(value)+    Integer.toString(value));    	non-compiled	[CE]  '.class'  expected	42	None	replace
36	[BUG]  [BUGGY]  Add(Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(x));	  Add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	78	None	replace
37	[BUG]  [BUGGY]  Add(Long.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(mantissa));	  Add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	78	None	replace
38	[BUG]  [BUGGY]  Add(Long.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(Long.toString(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(value)+  Integer.toString(exp));	  Add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	78	None	replace
39	[BUG]  [BUGGY]  Add(Long.toString(value)+   "E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(Long.toString(value)+   "E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(value)+   "E "  +  Integer.toString(exp));	  Add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	78	None	replace
40	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
41	[BUG]  [BUGGY]  addNumber(Integer.toString(value),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Integer.toString(value),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Integer.toString(value),  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
42	[BUG]  [BUGGY]  add(String.valueOf(x),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x),  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
43	[BUG]  [BUGGY]  addNumber(Long.valueOf(x),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.valueOf(x),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.valueOf(x),  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
44	[BUG]  [BUGGY]  addNumber(Integer.toString(x),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Integer.toString(x),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Integer.toString(x),  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
45	[BUG]  [BUGGY]  add(Long.valueOf(x  +  2));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  2));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  2));	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  op	50	None	replace
46	[BUG]  [BUGGY]  add(String.valueOf(mantissa  +  2));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(mantissa  +  2));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa  +  2));	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  op	50	None	replace
47	[BUG]  [BUGGY]  add(String.valueOf(x  /  2));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  /  2));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  /  2));	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  op	50	None	replace
48	[BUG]  [BUGGY]  add(String.valueOf(x  +  2)+  1);  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  2)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  2)+  1);	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  op	50	None	replace
49	[BUG]  [BUGGY]  add(String.valueOf(x  +  2),  value);  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  2),  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  2),  value);	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  op	50	None	replace
50	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "N   "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "N   "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "N   "  +  Integer.toString(exp));	          add(Long.toString(value)+   "N       "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	82	None	replace
51	[BUG]  [BUGGY]  add(Long.toString(value)+ "N   "  +  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ "N   "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ "N   "  +  Integer.toString(x));	          add(Long.toString(value)+   "N       "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	82	None	replace
52	[BUG]  [BUGGY]  add(String.toString(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(mantissa)+  Integer.toString(exp));	  add(String.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	72	None	replace
53	[BUG]  [BUGGY]  add(Mantissa.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Mantissa.toString(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Mantissa.toString(value)+  Integer.toString(exp));	  add(String.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	72	None	replace
54	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  Long.toString(exp));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  Long.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  Long.toString(exp));	          add(Long.toString(value)+    Long.toString(x));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
55	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  Long.toString(x));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  Long.toString(x));	          add(Long.toString(value)+    Long.toString(x));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
56	[BUG]  [BUGGY]  add(Long.toString(value)+  Long.toString(mantissa));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Long.toString(mantissa));	          add(Long.toString(value)+    Long.toString(x));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
57	[BUG]  [BUGGY]  add(long.toString(value));  [CE]  class  expected  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.toString(value));	  add(Long.toString(exp));    	non-compiled	[CE]  class  expected	5	None	replace
58	[BUG]  [BUGGY]  add(String.valueOf(x)/  2);  [CE]  cannot  find  symbol  buffOp  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)/  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  2);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
59	[BUG]  [BUGGY]  add(Long.valueOf(x)/  1);  [CE]  cannot  find  symbol  buffOp  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)/  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)/  1);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
60	[BUG]  [BUGGY]  add(String.valueOf(x)/  10);  [CE]  cannot  find  symbol  buffOp  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)/  10);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  10);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
61	[BUG]  [BUGGY]  add(Integer.toString(value)/  1);  [CE]  cannot  find  symbol  buffOp  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)/  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)/  1);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
62	[BUG]  [BUGGY]  add(String.valueOf(x)/  3);  [CE]  cannot  find  symbol  buffOp  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)/  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  3);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
63	[BUG]  [BUGGY]  add(String.valueOf(x)/  4);  [CE]  cannot  find  symbol  buffOp  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)/  4);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  4);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
64	[BUG]  [BUGGY]  int  x  =  value.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  value.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	89	None	replace
65	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  mantissa.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1);  int  x  =  mantissa.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	89	None	replace
66	[BUG]  [BUGGY]  add(Long.valueOf(x)+  1);  int  x  =  value.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  1);  int  x  =  value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  1);  int  x  =  value.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	89	None	replace
67	[BUG]  [BUGGY]  add(String.valueOf(exp)+  1);  int  x  =  value.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(exp)+  1);  int  x  =  value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(exp)+  1);  int  x  =  value.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	89	None	replace
68	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  this.mantissa.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  this.mantissa.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1);  int  x  =  this.mantissa.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	89	None	replace
69	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  prev.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  prev.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1);  int  x  =  prev.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	89	None	replace
70	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  Integer.toString(exp)));  [CE]  cannot  find  symbol  buffOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  Integer.toString(exp)));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  Integer.toString(exp)));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	11	None	replace
71	[BUG]  [BUGGY]  addNumber(String.valueOf(mantissa,  value));  [CE]  cannot  find  symbol  buffOp  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(mantissa,  value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(mantissa,  value));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	11	None	replace
72	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  exp));  [CE]  cannot  find  symbol  buffOp  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  exp));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	11	None	replace
73	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  prev));  [CE]  cannot  find  symbol  buffOp  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  prev));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	11	None	replace
74	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  value)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  value)+  1);	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	11	None	replace
75	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  value  +  1));  [CE]  cannot  find  symbol  buffOp  [FE]                                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  value  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  value  +  1));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	11	None	replace
76	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	29	None	replace
77	[BUG]  [BUGGY]  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	29	None	replace
78	[BUG]  [BUGGY]  double  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	29	None	replace
79	[BUG]  [BUGGY]  append(Long.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  append(Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	append(Long.toString(value));	  add(Long.toString(menu));    	non-compiled	[CE]  cannot  find  symbol  buffOp	91	None	replace
80	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1)+  1);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	51	None	replace
81	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)+  2);  [CE]  cannot  find  symbol  buffOp  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1)+  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)+  2);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	51	None	replace
82	[BUG]  [BUGGY]  add(String.valueOf(mantissa  +  1)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(mantissa  +  1)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa  +  1)+  1);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	51	None	replace
83	[BUG]  [BUGGY]  add(Integer.toString(value  +  1)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  +  1)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  +  1)+  1);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	51	None	replace
84	[BUG]  [BUGGY]  add(String.valueOf(exp  +  1)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(exp  +  1)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(exp  +  1)+  1);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	51	None	replace
85	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)/  1);  [CE]  cannot  find  symbol  buffOp  [FE]                                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1)/  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)/  1);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	51	None	replace
86	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	32	None	replace
87	[BUG]  [BUGGY]  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	32	None	replace
88	[BUG]  [BUGGY]  double  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	32	None	replace
89	[BUG]  [BUGGY]  Integer  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Integer  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Integer  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	32	None	replace
90	[BUG]  [BUGGY]  addNumber(Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Integer.toString(value));	  add(Integer.toString(double));    	non-compiled	[CE]  cannot  find  symbol  buffOp	53	None	replace
91	[BUG]  [BUGGY]  add(long.toString(x));  [CE]  class  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.toString(x));	  add(Integer.toString(double));    	non-compiled	[CE]  class  expected	53	None	replace
92	[BUG]  [BUGGY]  add(Integer.toString(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  buffOp  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa)+  Integer.toString(exp));	  add(Integer.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  buffOp	77	None	replace
93	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(mantissa));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(mantissa));	  add(Integer.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
94	[BUG]  [BUGGY]  add(Integer.toString(mantissa)+  Integer.toString(x));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(mantissa)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa)+  Integer.toString(x));	  add(Integer.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
95	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "NaN "  +  Integer.toString(exp));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "NaN "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "NaN "  +  Integer.toString(exp));	          add(Long.toString(value)+   "NaN   "    +    Integer.toString(exp));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
96	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ ",NaN "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  Op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ ",NaN "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ ",NaN "  +  Integer.toString(exp));	          add(Long.toString(value)+   "NaN   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  Op	83	None	replace
97	[BUG]  [BUGGY]  add(Long.toString(value)+ "NaN "  +  Integer.toString(x));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ "NaN "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ "NaN "  +  Integer.toString(x));	          add(Long.toString(value)+   "NaN   "    +    Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	83	None	replace
98	[BUG]  [BUGGY]  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(x)+    1);    	non-compiled	[CE]  ';'  expected	28	None	replace
99	[BUG]  [BUGGY]  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(x)+    1);    	non-compiled	[CE]  ';'  expected	28	None	replace
100	[BUG]  [BUGGY]  double  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(x)+    1);    	non-compiled	[CE]  ';'  expected	28	None	replace
101	[BUG]  [BUGGY]  int  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  value.doubleValue();  add(String.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    add(String.valueOf(x)+    1);    	non-compiled	[CE]  ';'  expected	27	None	replace
102	[BUG]  [BUGGY]  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  value.doubleValue();  add(String.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    add(String.valueOf(x)+    1);    	non-compiled	[CE]  ';'  expected	27	None	replace
103	[BUG]  [BUGGY]  double  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  x  =  value.doubleValue();  add(String.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    add(String.valueOf(x)+    1);    	non-compiled	[CE]  ';'  expected	27	None	replace
104	[BUG]  [BUGGY]  add(Long.valueOf(x)+  0);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  0);	  add(String.valueOf(x)+    0);    	non-compiled	[CE]  ';'  expected	66	None	replace
105	[BUG]  [BUGGY]  add(Integer.toString(value)+  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  0);	  add(String.valueOf(x)+    0);    	non-compiled	[CE]  ';'  expected	66	None	replace
106	[BUG]  [BUGGY]  add(String.valueOf(x)/  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)/  0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  0);	  add(String.valueOf(x)+    0);    	non-compiled	[CE]  ';'  expected	66	None	replace
107	[BUG]  [BUGGY]  add(Integer.toString(value)+  Long.toString(exp));  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Long.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Long.toString(exp));	  add(Long.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  ';'  expected	40	None	replace
108	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  NUMBER_VALUE);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  NUMBER_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  NUMBER_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  ';'  expected	56	None	replace
109	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Integer.MIN_VALUE);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Integer.MIN_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  ';'  expected	56	None	replace
110	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Integer.MAX_VALUE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Integer.MAX_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  ';'  expected	56	None	replace
111	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Long.MIN_VALUE);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Long.MIN_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Long.MIN_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  ';'  expected	56	None	replace
112	[BUG]  [BUGGY]  if(exp  >  0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(exp  >  0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(exp  >  0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  	6	None	replace
113	[BUG]  [BUGGY]  if(exp  <  2)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(exp  <  2)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(exp  <  2)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  	6	None	replace
114	[BUG]  [BUGGY]  if(exp  >  0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(exp  >  0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(exp  >  0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  ';'  expected	6	None	replace
115	[BUG]  [BUGGY]  if(exp  <  2)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(exp  <  2)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(exp  <  2)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  ';'  expected	6	None	replace
116	[BUG]  [BUGGY]  if(exp  >  0)  {  add(Long.toString(double));  }  else  {  double  value  =  Integer.toString(value);  add(Integer.toString(value));  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(exp  >  0)  {  add(Long.toString(double));  }  else  {  double  value  =  Integer.toString(value);  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(exp  >  0)  {  add(Long.toString(double));  }  else  {  double  value  =  Integer.toString(value);  add(Integer.toString(value));  }	  add(Long.toString(double));    	non-compiled	[CE]  ';'  expected	6	None	replace
117	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  Integer.toString(exp));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  Integer.toString(exp));	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  ';'  expected	96	None	replace
118	[BUG]  [BUGGY]  add(Long.valueOf(x)+  1,  value);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  1,  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  1,  value);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  ';'  expected	96	None	replace
119	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  value,  Integer.toString(exp));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  value,  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  value,  Integer.toString(exp));	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  ';'  expected	96	None	replace
120	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  mantissa);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  mantissa);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  mantissa);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  ';'  expected	96	None	replace
121	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  prev);  [CE]  cannot  find  symbol  op  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  prev);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  prev);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  cannot  find  symbol  op	96	None	replace
122	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  value  -  1);  [CE]  cannot  find  symbol  op  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  value  -  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  value  -  1);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  cannot  find  symbol  op	96	None	replace
123	[BUG]  [BUGGY]  hinzuge(Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  hinzuge(Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	hinzuge(Long.toString(x));	  hinzuge(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	62	None	replace
124	[BUG]  [BUGGY]  hinzuge(Long.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  hinzuge(Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	hinzuge(Long.toString(mantissa));	  hinzuge(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	62	None	replace
125	[BUG]  [BUGGY]  add(long.toString(x)+  Integer.toString(value));  [CE]  class  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.toString(x)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.toString(x)+  Integer.toString(value));	  add(Long.toString(x)+    Integer.toString(exp));    	non-compiled	[CE]  class  expected	18	None	replace
126	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ ",E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ ",E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ ",E "  +  Integer.toString(exp));	  add(String.valueOf(x)+   ",E       "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	37	None	replace
127	[BUG]  [BUGGY]  add(Integer.toString(x)+ ",E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x)+ ",E "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+ ",E "  +  Integer.toString(value));	  add(String.valueOf(x)+   ",E       "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	37	None	replace
128	[BUG]  [BUGGY]  add(Long.valueOf(x)+ ",E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+ ",E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+ ",E "  +  Integer.toString(exp));	  add(String.valueOf(x)+   ",E       "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	37	None	replace
129	[BUG]  [BUGGY]  remove(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  remove(String.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	remove(String.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
130	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
131	[BUG]  [BUGGY]  add(Long.toString(value)+  1);  remove(Long.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  1);  remove(Long.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  1);  remove(Long.toString(value)+  1);	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
132	[BUG]  [BUGGY]  add(Long.toString(value)+  1);  remove(Long.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  1);  remove(Long.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  1);  remove(Long.toString(x)+  1);	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
133	[BUG]  [BUGGY]  add(Long.valueOf(x)+  2);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  2);	  add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	23	None	replace
134	[BUG]  [BUGGY]  add(String.valueOf(x)+  3);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  3);	  add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	23	None	replace
135	[BUG]  [BUGGY]  add(String.valueOf(x)+  1));  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1));	  add(String.valueOf(x)+    1);    add(String.valueOf(y)+    1);    	non-compiled	[CE]  ';'  expected	88	None	replace
136	[BUG]  [BUGGY]  add(long.valueOf(x)+  1);  [CE]  class  expected  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    add(String.valueOf(y)+    1);    	non-compiled	[CE]  class  expected	88	None	replace
137	[BUG]  [BUGGY]  add(Long.toString(value)+  2);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  2);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
138	[BUG]  [BUGGY]  add(Long.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+  1);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
139	[BUG]  [BUGGY]  add(Long.toString(value)+  X);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  X);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  X);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
140	[BUG]  [BUGGY]  add(Long.toString(value)+  x);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  x);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  x);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
141	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1),  Integer.toString(exp));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
142	[BUG]  [BUGGY]  add(Integer.toString(x  +  1),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x  +  1),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x  +  1),  Integer.toString(exp));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
143	[BUG]  [BUGGY]  add(String.valueOf(mantissa  +  1),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(mantissa  +  1),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa  +  1),  Integer.toString(exp));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
144	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1),  Integer.toString(value));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
145	[BUG]  [BUGGY]  add(Integer.toString(value  +  1),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  +  1),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  +  1),  Integer.toString(exp));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
146	[BUG]  [BUGGY]  add(Long.toString(mantissa  +  1),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa  +  1),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa  +  1),  Integer.toString(exp));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
147	[BUG]  [BUGGY]  add(Integer.toString(mantissa)+ "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(mantissa)+ "E "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa)+ "E "  +  Integer.toString(value));	  add(Integer.toString(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	45	None	replace
148	[BUG]  [BUGGY]  add(Integer.toString(mantissa)+ "E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(mantissa)+ "E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa)+ "E "  +  Integer.toString(exp));	  add(Integer.toString(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	45	None	replace
149	[BUG]  [BUGGY]  addNumber(Long.valueOf(x));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.valueOf(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.valueOf(x));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	87	None	replace
150	[BUG]  [BUGGY]  addNumber(Integer.valueOf(x));  [CE]  cannot  find  symbol  bbinOp  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Integer.valueOf(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Integer.valueOf(x));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	87	None	replace
151	[BUG]  [BUGGY]  addNull(String.valueOf(x));  [CE]  cannot  find  symbol  bbinOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNull(String.valueOf(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNull(String.valueOf(x));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	87	None	replace
152	[BUG]  [BUGGY]  addNumber(Long.toString(value));  [CE]  cannot  find  symbol  bbinOp  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.toString(value));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	87	None	replace
153	[BUG]  [BUGGY]  add(Long.valueOf(x)+  1).doubleValue();  [CE]  cannot  find  symbol  bbinOp  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  1).doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  1).doubleValue();	  add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	24	None	replace
154	[BUG]  [BUGGY]  add(Integer.toString(mantissa)+  Integer.toString(value));  [CE]  cannot  find  symbol  bbinOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(mantissa)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa)+  Integer.toString(value));	  add(Integer.toString(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	17	None	replace
155	[BUG]  [BUGGY]  add(String.toString(mantissa)+ "  E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  bbinOp  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(mantissa)+ "  E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(mantissa)+ "  E "  +  Integer.toString(exp));	  add(String.toString(value)+   "    E       "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	92	None	replace
156	[BUG]  [BUGGY]  add(Long.toString(x)+   "E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  bbinOp  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x)+   "E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+   "E "  +  Integer.toString(exp));	  add(Long.toString(value)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	41	None	replace
157	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  2);  [CE]  cannot  find  symbol  bbinOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  2);	  addNumber(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	86	None	replace
158	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  3);  [CE]  cannot  find  symbol  bbinOp  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  3);	  addNumber(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	86	None	replace
159	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  value);  [CE]  cannot  find  symbol  bbinOp  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  value);	  addNumber(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	86	None	replace
160	[BUG]  [BUGGY]  addNumber(String.valueOf(x)/  1);  [CE]  cannot  find  symbol  bbinOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)/  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)/  1);	  addNumber(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	86	None	replace
161	[BUG]  [BUGGY]  add(Number.toString(mantissa));  [CE]  cannot  find  symbol  bbinOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(mantissa));	  add(Number.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	4	None	replace
162	[BUG]  [BUGGY]  add(Number.toString(x));  [CE]  cannot  find  symbol  bbinOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(x));	  add(Number.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	4	None	replace
163	[BUG]  [BUGGY]  add(Number.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  bbinOp  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(value)+  Integer.toString(exp));	  add(Number.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	4	None	replace
164	[BUG]  [BUGGY]  add(Number.toString(value)+ "E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  bbinOp  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(value)+ "E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(value)+ "E "  +  Integer.toString(exp));	  add(Number.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	4	None	replace
165	[BUG]  [BUGGY]  add(Number.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  bbinOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(value)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(value)+  Integer.toString(x));	  add(Number.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	4	None	replace
166	[BUG]  [BUGGY]  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  bbinOp  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+  1);	  add(Integer.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	22	None	replace
167	[BUG]  [BUGGY]  add(Integer.toString(mantissa)+  1);  [CE]  cannot  find  symbol  bbinOp  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(mantissa)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa)+  1);	  add(Integer.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	22	None	replace
168	[BUG]  [BUGGY]  add(Integer.toString(value)+  2);  [CE]  cannot  find  symbol  bbinOp  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  2);	  add(Integer.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	22	None	replace
169	[BUG]  [BUGGY]  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  bbinOp  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(exp)+  1);	  add(Integer.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	22	None	replace
170	[BUG]  [BUGGY]  add(Long.toString(mantissa  +  1),  Long.toString(value));  [CE]  cannot  find  symbol  bbinOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa  +  1),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa  +  1),  Long.toString(value));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	70	None	replace
171	[BUG]  [BUGGY]  add(Long.toString(x  +  1),  Long.toString(value));  [CE]  cannot  find  symbol  bbinOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x  +  1),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x  +  1),  Long.toString(value));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	70	None	replace
172	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1),  Long.toString(value));  [CE]  cannot  find  symbol  bbinOp  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1),  Long.toString(value));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	70	None	replace
173	[BUG]  [BUGGY]  add(Long.toString(value  +  1),  Long.toString(x));  [CE]  cannot  find  symbol  bbinOp  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value  +  1),  Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value  +  1),  Long.toString(x));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	70	None	replace
174	[BUG]  [BUGGY]  add(Integer.toString(x  +  1),  Long.toString(value));  [CE]  cannot  find  symbol  bbinOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x  +  1),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x  +  1),  Long.toString(value));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	70	None	replace
175	[BUG]  [BUGGY]  add(Long.toString(mantissa  +  1),  Long.toString(exp));  [CE]  cannot  find  symbol  bbinOp  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa  +  1),  Long.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa  +  1),  Long.toString(exp));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	70	None	replace
176	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(exp));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
177	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(mantissa));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
178	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(Expression.MIN_VALUE));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(Expression.MIN_VALUE));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(Expression.MIN_VALUE));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
179	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(Expression.NUMBER_VALUE));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(Expression.NUMBER_VALUE));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(Expression.NUMBER_VALUE));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
180	[BUG]  [BUGGY]  double  value  =  mantissa.doubleValue();  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  mantissa.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  mantissa.doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
181	[BUG]  [BUGGY]  double  value  =  x.doubleValue();  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  x.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  x.doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
182	[BUG]  [BUGGY]  double  value  =  this.mantissa.doubleValue();  [CE]  cannot  find  symbol  op  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  this.mantissa.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  this.mantissa.doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
183	[BUG]  [BUGGY]  double  value  =  Math.abs(mantissa).doubleValue();  [CE]  cannot  find  symbol  op  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  Math.abs(mantissa).doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  Math.abs(mantissa).doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
184	[BUG]  [BUGGY]  double  value  =  Integer.toString(mantissa).doubleValue();  [CE]  cannot  find  symbol  op  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  Integer.toString(mantissa).doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  Integer.toString(mantissa).doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
185	[BUG]  [BUGGY]  double  value  =  Math.max(mantissa,  exp);  [CE]  cannot  find  symbol  op  [FE]                        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  Math.max(mantissa,  exp);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  Math.max(mantissa,  exp);	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
186	[BUG]  [BUGGY]  double  value  =  Integer.toString(mantissa);  [CE]  cannot  find  symbol  op  [FE]                          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  Integer.toString(mantissa);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  Integer.toString(mantissa);	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
187	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  1);  }  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  1);  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	25	None	replace
188	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Long.toString(value)+  1);  }  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Long.toString(value)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Long.toString(value)+  1);  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	25	None	replace
189	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Integer.toString(value)+  1);  }  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Integer.toString(value)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Integer.toString(value)+  1);  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	25	None	replace
190	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Integer.toString(exp)+  1);  }  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Integer.toString(exp)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(Integer.toString(exp)+  1);  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	25	None	replace
191	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1)+  Integer.toString(exp));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
192	[BUG]  [BUGGY]  add(Integer.toString(x  +  1)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x  +  1)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x  +  1)+  Integer.toString(value));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
193	[BUG]  [BUGGY]  add(Long.toString(mantissa  +  1)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa  +  1)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa  +  1)+  Integer.toString(exp));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
194	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)+  Integer.toString(exp));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
195	[BUG]  [BUGGY]  add(Integer.toString(x  +  1)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x  +  1)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x  +  1)+  Integer.toString(exp));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
196	[BUG]  [BUGGY]  add(Long.toString(mantissa  +  1)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa  +  1)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa  +  1)+  Integer.toString(value));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
197	[BUG]  [BUGGY]  add(String.valueOf(mantissa  +  1)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(mantissa  +  1)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa  +  1)+  Integer.toString(exp));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	69	None	replace
198	[BUG]  [BUGGY]  _add(Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  _add(Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	_add(Long.toString(x));	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
199	[BUG]  [BUGGY]  int  value  =  Integer.toString(x);  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  value  =  Integer.toString(x);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  value  =  Integer.toString(x);	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
200	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(double));  [CE]  '.class'  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Integer.toString(double));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(double));	  add(Integer.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  '.class'  expected	33	None	replace
201	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
202	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  [CE]  class  expected  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
203	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  [CE]  class  expected  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
204	[BUG]  [BUGGY]  addNumber(Long.toString(x),  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.toString(x),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.toString(x),  Long.toString(value));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
205	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Long.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Long.toString(mantissa));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
206	[BUG]  [BUGGY]  addNumber(Long.toString(value),  Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.toString(value),  Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.toString(value),  Long.toString(x));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
207	[BUG]  [BUGGY]  addNumber(Long.valueOf(x),  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.valueOf(x),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.valueOf(x),  Long.toString(value));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
208	[BUG]  [BUGGY]  add(Long.toString(x),  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x),  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x),  Long.toString(value));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
209	[BUG]  [BUGGY]  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	31	None	replace
210	[BUG]  [BUGGY]  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	31	None	replace
211	[BUG]  [BUGGY]  double  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	31	None	replace
212	[BUG]  [BUGGY]  adug(Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(x));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
213	[BUG]  [BUGGY]  adug(Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Integer.toString(value));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
214	[BUG]  [BUGGY]  adug(Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(value));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
215	[BUG]  [BUGGY]  adug(Long.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(mantissa));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
216	[BUG]  [BUGGY]  adug(Long.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(value)+  Integer.toString(exp));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
217	[BUG]  [BUGGY]  adug(Long.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(value)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(value)+  Integer.toString(x));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
218	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ ",E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ ",E "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ ",E "  +  Integer.toString(value));	  add(Long.toString(x)+       "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	67	None	replace
219	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  0);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  0);	  addNumber(String.valueOf(x),    value);    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
220	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "N   "  +  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "N   "  +  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "N   "  +  Long.toString(value));	          add(Long.toString(value)+   "N       "    +    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	84	None	replace
221	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "N   "  +  Long.toString(exp));  [CE]  cannot  find  symbol  statementContext  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "N   "  +  Long.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "N   "  +  Long.toString(exp));	          add(Long.toString(value)+   "N       "    +    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  statementContext	84	None	replace
222	[BUG]  [BUGGY]  add(Long.toString(x)+ "N   "  +  Long.toString(value));  [CE]  cannot  find  symbol  statementContext  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x)+ "N   "  +  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+ "N   "  +  Long.toString(value));	          add(Long.toString(value)+   "N       "    +    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  statementContext	84	None	replace
223	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  prev);  [CE]  cannot  find  symbol  statementContext  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  prev);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  prev);	  addNumber(String.valueOf(x),    prev);    	non-compiled	[CE]  cannot  find  symbol  statementContext	55	None	replace
224	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Long.valueOf(x));  [CE]  cannot  find  symbol  statementContext  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Long.valueOf(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Long.valueOf(x));	  addNumber(String.valueOf(x),    prev);    	non-compiled	[CE]  cannot  find  symbol  statementContext	55	None	replace
225	[BUG]  [BUGGY]  add(Integer.valueOf(x)+  Integer.toString(mantissa));  [CE]  cannot  find  symbol  statementContext  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(x)+  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(x)+  Integer.toString(mantissa));	  add(Integer.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  statementContext	35	None	replace
226	[BUG]  [BUGGY]  _add(Integer.toString(x));  [CE]  cannot  find  symbol  statementContext  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  _add(Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	_add(Integer.toString(x));	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  statementContext	2	None	replace
227	[BUG]  [BUGGY]  add(Long.toString(value)+ "E "  +  Integer.toString(x));  [CE]  cannot  find  symbol  statementContext  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ "E "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ "E "  +  Integer.toString(x));	  add(Long.toString(value)+       "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  statementContext	38	None	replace
228	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "E' "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  statementContext  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "E' "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "E' "  +  Integer.toString(exp));	  add(Long.toString(value)+       "E'   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  statementContext	68	None	replace
229	[BUG]  [BUGGY]  add(Long.toString(value)+ "E' "  +  Integer.toString(x));  [CE]  cannot  find  symbol  statementContext  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ "E' "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ "E' "  +  Integer.toString(x));	  add(Long.toString(value)+       "E'   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  statementContext	68	None	replace
230	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ ",E' "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  statementContext  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ ",E' "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ ",E' "  +  Integer.toString(exp));	  add(Long.toString(value)+       "E'   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  statementContext	68	None	replace
231	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "E' ",  Integer.toString(exp));  [CE]  cannot  find  symbol  statementContext  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ "E' ",  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "E' ",  Integer.toString(exp));	  add(Long.toString(value)+       "E'   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  statementContext	68	None	replace
232	[BUG]  [BUGGY]  add(Long.toString(value  +  1));  [CE]  cannot  find  symbol  statementContext  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value  +  1));	  add(Long.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  statementContext	46	None	replace
233	[BUG]  [BUGGY]  add(Integer.toString(value  +  1));  [CE]  cannot  find  symbol  statementContext  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  statementContext	90	None	replace
234	[BUG]  [BUGGY]  add(Integer.valueOf(x  +  1));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(x  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(x  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	90	None	replace
235	[BUG]  [BUGGY]  add(Number.valueOf(x  +  1));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(x  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	90	None	replace
236	[BUG]  [BUGGY]  add(Long.valueOf(exp  +  1));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(exp  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(exp  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	90	None	replace
237	[BUG]  [BUGGY]  add(Long.toString(x)+  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x)+  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+  Long.toString(value));	  add(String.valueOf(x)+    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	73	None	replace
238	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  Long.toString(value));	  add(String.valueOf(x)+    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	73	None	replace
239	[BUG]  [BUGGY]  add(Long.toString(value)+  String.valueOf(x));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  String.valueOf(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  String.valueOf(x));	  add(String.valueOf(x)+    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	73	None	replace
240	[BUG]  [BUGGY]  add(Integer.toString(x)+  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x)+  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+  Long.toString(value));	  add(String.valueOf(x)+    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	73	None	replace
241	[BUG]  [BUGGY]  add(Number.valueOf(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(mantissa)+  Integer.toString(exp));	  add(Number.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	93	None	replace
242	[BUG]  [BUGGY]  add(Number.valueOf(x)+  Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(x)+  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)+  Integer.toString(mantissa));	  add(Number.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	93	None	replace
243	[BUG]  [BUGGY]  add(Number.valueOf(x)+  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(x)+  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)+  Long.toString(value));	  add(Number.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	93	None	replace
244	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	59	None	replace
245	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	59	None	replace
246	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  2);  }  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  2);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  2);  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	59	None	replace
247	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  else  {  throw  new  IllegalArgumentException( " "  +  Integer.toString(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  else  {  throw  new  IllegalArgumentException( " "  +  Integer.toString(  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  }  else  {  throw  new  IllegalArgumentException( " "  +  Integer.toString(	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    2);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
248	[BUG]  [BUGGY]  addNumber(Integer.toString(x),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Integer.toString(x),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Integer.toString(x),  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
249	[BUG]  [BUGGY]  addNumber(Long.valueOf(x),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.valueOf(x),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.valueOf(x),  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
250	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Integer.toString(mantissa));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
251	[BUG]  [BUGGY]  addNumber(Integer.toString(value),  String.valueOf(x));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Integer.toString(value),  String.valueOf(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Integer.toString(value),  String.valueOf(x));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
252	[BUG]  [BUGGY]  addNumber(Long.toString(x),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Long.toString(x),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Long.toString(x),  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
253	[BUG]  [BUGGY]  add(long.toString(value)+  1);  [CE]  class  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(long.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(long.toString(value)+  1);	  add(String.toString(value)+    1);    	non-compiled	[CE]  class  expected	95	None	replace
254	[BUG]  [BUGGY]  add(Number.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(value)+  1);	  add(String.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	95	None	replace
255	[BUG]  [BUGGY]  add(Integer.toString(x  +  1),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x  +  1),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x  +  1),  Integer.toString(value));	  add(String.valueOf(x    +    1),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	48	None	replace
256	[BUG]  [BUGGY]  add(Long.toString(mantissa  +  1),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa  +  1),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa  +  1),  Integer.toString(value));	  add(String.valueOf(x    +    1),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	48	None	replace
257	[BUG]  [BUGGY]  add(Long.toString(x  +  1),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x  +  1),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x  +  1),  Integer.toString(value));	  add(String.valueOf(x    +    1),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	48	None	replace
258	[BUG]  [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
259	[BUG]  [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
260	[BUG]  [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(x));  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
261	[BUG]  [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(mantissa));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(mantissa));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MAX_VALUE)  {  add(Integer.toString(mantissa));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
262	[BUG]  [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MIN_VALUE)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MIN_VALUE)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  Integer.MIN_VALUE  ||  value  >  Integer.MIN_VALUE)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
263	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1));  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1));  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
264	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  1));  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  1));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  add(String.valueOf(x)+  1));  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
265	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1));    	non-compiled	[CE]  cannot  find  symbol  op	57	None	replace
266	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(value));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toUpperCase(value));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
267	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(value));  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(value));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
268	[BUG]  [BUGGY]  add(String.valueOf(x),  Character.toUpperCase(value));  [CE]  cannot  find  symbol  op  [FE]                                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x),  Character.toUpperCase(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x),  Character.toUpperCase(value));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
269	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(mantissa));  [CE]  cannot  find  symbol  op  [FE]                                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toUpperCase(mantissa));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
270	[BUG]  [BUGGY]  addNumber(Character.valueOf(x),  Character.toUpperCase(prev));  [CE]  cannot  find  symbol  op  [FE]                                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(Character.valueOf(x),  Character.toUpperCase(prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(Character.valueOf(x),  Character.toUpperCase(prev));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
271	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  Character.toUpperCase(prev));  [CE]  cannot  find  symbol  op  [FE]                                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  Character.toUpperCase(prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  Character.toUpperCase(prev));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
272	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(exp));  [CE]  cannot  find  symbol  op  [FE]                                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toUpperCase(exp));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
273	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(mantissa));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(mantissa));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
274	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(exp));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(exp));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
275	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(offset));  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(offset));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(offset));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
276	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(prev));  [CE]  cannot  find  symbol  op  [FE]                                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(prev));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
277	[BUG]  [BUGGY]  add(Number.toString(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(mantissa)+  Integer.toString(exp));	  add(Number.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	74	None	replace
278	[BUG]  [BUGGY]  add(Mantissa.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Mantissa.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Mantissa.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	29	None	replace
279	[BUG]  [BUGGY]  add(Integer.toString(x)+  Integer.toString(value)  +  1);  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(x)+  Integer.toString(value)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+  Integer.toString(value)  +  1);	  add(Integer.toString(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	17	None	replace
280	[BUG]  [BUGGY]  add(Long.toString(value)+  Integer.toString(exp)  +  1);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Integer.toString(exp)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Integer.toString(exp)  +  1);	  add(Long.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	40	None	replace
281	[BUG]  [BUGGY]  add(Long.valueOf(x)+  3);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  3);	  add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	24	None	replace
282	[BUG]  [BUGGY]  add(Long.valueOf(x)+  4);  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  4);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  4);	  add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	24	None	replace
283	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  Integer.toString(value));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
284	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(negativeZero));  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(negativeZero));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toUpperCase(negativeZero));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
285	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(negativeZero));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(negativeZero));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(negativeZero));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
286	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(prev));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(prev));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
287	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(value)  +  1);  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(value)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(value)  +  1);	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
288	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(value  -  1));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(value  -  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(value  -  1));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
289	[BUG]  [BUGGY]  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value);  add(long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
290	[BUG]  [BUGGY]  add(Number.toString(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(x)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(x)+  Integer.toString(value));	  add(Number.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	74	None	replace
291	[BUG]  [BUGGY]  add(Number.valueOf(x)+  Integer.toString(value)  +  1);  [CE]  cannot  find  symbol  buffOp  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(x)+  Integer.toString(value)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)+  Integer.toString(value)  +  1);	  add(Number.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	74	None	replace
292	[BUG]  [BUGGY]  add(Integer.toString(value)+  10);  [CE]  cannot  find  symbol  buffOp  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  10);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  10);	  add(Integer.toString(double    value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	79	None	replace
293	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  buffOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  Integer.toString(exp));	  addNumber(String.valueOf(x),    value);    	non-compiled	[CE]  cannot  find  symbol  buffOp	8	None	replace
294	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+ ",  value ");  [CE]  cannot  find  symbol  buffOp  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+ ",  value ");  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+ ",  value ");	  addNumber(String.valueOf(x),    value);    	non-compiled	[CE]  cannot  find  symbol  buffOp	8	None	replace
295	[BUG]  [BUGGY]  x  =  Integer.toString(value).intValue();  [CE]  cannot  find  symbol  buffOp  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value).intValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value).intValue();	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	31	None	replace
296	[BUG]  [BUGGY]  add(Integer.valueOf(x  +  1),  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(x  +  1),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(x  +  1),  Integer.toString(value));	  add(String.valueOf(x    +    1),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	48	None	replace
297	[BUG]  [BUGGY]  add(Integer.toString(value  +  1),  Integer.toString(x));  [CE]  cannot  find  symbol  buffOp  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  +  1),  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  +  1),  Integer.toString(x));	  add(String.valueOf(x    +    1),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	48	None	replace
298	[BUG]  [BUGGY]  add(Long.toString(value)+ ",E "  +  Integer.toString(x));  [CE]  cannot  find  symbol  buffOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ ",E "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ ",E "  +  Integer.toString(x));	  add(Long.toString(value)+   ",E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  buffOp	39	None	replace
299	[BUG]  [BUGGY]  add(String.valueOf(y)+  Integer.toString(exp));  [CE]  cannot  find  symbol  buffOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(y)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(y)+  Integer.toString(exp));	  add(String.valueOf(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  buffOp	80	None	replace
300	[BUG]  [BUGGY]  add(Number.toString(value)+  mantissa);  [CE]  cannot  find  symbol  buffOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.toString(value)+  mantissa);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(value)+  mantissa);	  add(Number.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	4	None	replace
301	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1)+  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1)+  Integer.toString(value));	  add(Long.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  buffOp	46	None	replace
302	[BUG]  [BUGGY]  add(String.valueOf(x  +  2)+  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  2)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  2)+  Integer.toString(value));	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  buffOp	50	None	replace
303	[BUG]  [BUGGY]  add(String.valueOf(x  +  2),  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  2),  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  2),  Integer.toString(value));	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  buffOp	50	None	replace
304	[BUG]  [BUGGY]  add(String.valueOf(x  +  3));  [CE]  cannot  find  symbol  buffOp  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  3));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  3));	  add(String.valueOf(x    +    2));    	non-compiled	[CE]  cannot  find  symbol  buffOp	50	None	replace
305	[BUG]  [BUGGY]  add(Long.toString(x)+ "Ee "  +  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(x)+ "Ee "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+ "Ee "  +  Integer.toString(value));	  add(String.valueOf(x)+       "Ee   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	76	None	replace
306	[BUG]  [BUGGY]  add(String.toString(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  buffOp  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(x)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(x)+  Integer.toString(exp));	  add(String.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  buffOp	72	None	replace
307	[BUG]  [BUGGY]  add(String.toString(value)+  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(value)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  Integer.toString(value));	  add(String.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  buffOp	72	None	replace
308	[BUG]  [BUGGY]  add(Long.toString(value)+  Long.toString(x)  +  Integer.toString(exp));  [CE]  cannot  find  symbol  buffOp  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Long.toString(x)  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Long.toString(x)  +  Integer.toString(exp));	          add(Long.toString(value)+    Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  buffOp	63	None	replace
309	[BUG]  [BUGGY]  add(Long.toString(value)+  Long.toString(x)  +  1);  [CE]  cannot  find  symbol  buffOp  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Long.toString(x)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Long.toString(x)  +  1);	          add(Long.toString(value)+    Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  buffOp	63	None	replace
310	[BUG]  [BUGGY]  add(Long.toString(value)+  Integer.toString(expan));  [CE]  cannot  find  symbol  buffOp  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Integer.toString(expan));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Integer.toString(expan));	  add(Long.toString(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  buffOp	16	None	replace
311	[BUG]  [BUGGY]  add(String.valueOf(x)+  1)+  1;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1)+  1;  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1)+  1;	  add(String.valueOf(x)+    1);    add(String.valueOf(y)+    1);    	non-compiled	[CE]  not  a  statement	88	None	replace
312	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  y);  [CE]  cannot  find  symbol  buffOp  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  y);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  y);	  add(String.valueOf(x)+    1);    add(String.valueOf(y)+    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	88	None	replace
313	[BUG]  [BUGGY]  add(Long.toString(value)+ "N   "  +  Long.toString(x));  [CE]  cannot  find  symbol  buffOp  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ "N   "  +  Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ "N   "  +  Long.toString(x));	          add(Long.toString(value)+   "N       "    +    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	84	None	replace
314	[BUG]  [BUGGY]  add(String.toString(value)+ "  E   "  +  Integer.toString(x));  [CE]  cannot  find  symbol  buffOp  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(value)+ "  E   "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+ "  E   "  +  Integer.toString(x));	  add(String.toString(value)+   "    E       "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  buffOp	92	None	replace
315	[BUG]  [BUGGY]  double  value  =  binaryZero.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  binaryZero.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  binaryZero.doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	85	None	replace
316	[BUG]  [BUGGY]  double  value  =  prev.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  prev.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  prev.doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	85	None	replace
317	[BUG]  [BUGGY]  double  value  =  this.value.doubleValue();  [CE]  cannot  find  symbol  buffOp  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  this.value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  this.value.doubleValue();	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  buffOp	85	None	replace
318	[BUG]  [BUGGY]  add(String.valueOf(x)/  2.0);  [CE]  cannot  find  symbol  buffOp  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)/  2.0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  2.0);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  buffOp	65	None	replace
319	[BUG]  [BUGGY]  add(Long.valueOf(value  +  1));  [CE]  cannot  find  symbol  buffOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(value  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(value  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  buffOp	90	None	replace
320	[BUG]  [BUGGY]  add(Integer.valueOf(value  +  1));  [CE]  cannot  find  symbol  buffOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(value  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(value  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  buffOp	90	None	replace
321	[BUG]  [BUGGY]  add(String.valueOf(exp  +  1));  [CE]  cannot  find  symbol  buffOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(exp  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(exp  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  buffOp	90	None	replace
322	[BUG]  [BUGGY]  add(Long.valueOf(x)+  Integer.toString(value)  +  1);  [CE]  cannot  find  symbol  buffOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  Integer.toString(value)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  Integer.toString(value)  +  1);	  add(Long.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	34	None	replace
323	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Long.toString(value)+  1);  [CE]  cannot  find  symbol  buffOp  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Long.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Long.toString(value)+  1);	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	12	None	replace
324	[BUG]  [BUGGY]  add(Integer.valueOf(x  +  1)+  Integer.toString(value));  [CE]  cannot  find  symbol  buffOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(x  +  1)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(x  +  1)+  Integer.toString(value));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	69	None	replace
325	[BUG]  [BUGGY]  add(Integer.toString(value  +  1)+  Integer.toString(x));  [CE]  cannot  find  symbol  buffOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  +  1)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  +  1)+  Integer.toString(x));	  add(String.valueOf(x    +    1)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	69	None	replace
326	[BUG]  [BUGGY]  Add(Long.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  buffOp  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(Long.toString(value)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(value)+  Integer.toString(x));	  Add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	78	None	replace
327	[BUG]  [BUGGY]  Add(Long.toString(value)+  mantissa);  [CE]  cannot  find  symbol  buffOp  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  Add(Long.toString(value)+  mantissa);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(value)+  mantissa);	  Add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  buffOp	78	None	replace
328	[BUG]  [BUGGY]  add(Long.toString(value)+  Integer.toString(x)  +  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Integer.toString(x)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Integer.toString(x)  +  1);	          add(Long.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	64	None	replace
329	[BUG]  [BUGGY]  add(Long.toString(value)+  1));  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  1));	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
330	[BUG]  [BUGGY]  add(Integer.toString(value)+  1));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  1));	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1));    	non-compiled	[CE]  ';'  expected	57	None	replace
331	[BUG]  [BUGGY]  addNumber(String.valueOf(x)/  NUMBER_VALUE);  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)/  NUMBER_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)/  NUMBER_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  cannot  find  symbol  op	56	None	replace
332	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  Integer.toString(value)));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  Integer.toString(value)));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  Integer.toString(value)));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
333	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  value)+  Integer.toString(exp));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
334	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Integer.toString(value));  }  [CE]  '.class'  expected  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(double));    	non-compiled	[CE]  '.class'  expected	53	None	replace
335	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Long.toString(value)+  Integer.toString(x));  }  [CE]  '.class'  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Long.toString(value)+  Integer.toString(x));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Long.toString(value)+  Integer.toString(x));  }	  add(Integer.toString(double));    	non-compiled	[CE]  '.class'  expected	53	None	replace
336	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Long.toString(value));  }  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Long.toString(value));  }	  add(Integer.toString(double));    	non-compiled	[CE]  '.class'  expected	53	None	replace
337	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(double));    	non-compiled	[CE]  	53	None	replace
338	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Integer.toString(value)+  Integer.toString(x));  }  [CE]  '.class'  expected  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Integer.toString(value)+  Integer.toString(x));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(double));  }  else  {  add(Integer.toString(value)+  Integer.toString(x));  }	  add(Integer.toString(double));    	non-compiled	[CE]  '.class'  expected	53	None	replace
339	[BUG]  [BUGGY]  add(Long.valueOf(x)+  Integer.toString(value  -  1));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+  Integer.toString(value  -  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  Integer.toString(value  -  1));	  add(Long.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
340	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
341	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Long.toString(value)+  Integer.toString(x));  }  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Long.toString(value)+  Integer.toString(x));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Long.toString(value)+  Integer.toString(x));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
342	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Long.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Long.toString(value));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
343	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value)+  Integer.toString(x));  }  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value)+  Integer.toString(x));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  add(Integer.toString(value)+  Integer.toString(x));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
344	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
345	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
346	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  else  {  add(Long.toString(value)+  1);  }  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  else  {  add(Long.toString(value)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  }  else  {  add(Long.toString(value)+  1);  }	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
347	[BUG]  [BUGGY]  addNumber(String.valueOf(y));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(y));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(y));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	87	None	replace
348	[BUG]  [BUGGY]  addNumber(String.valueOf(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(exp));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	87	None	replace
349	[BUG]  [BUGGY]  addNumber(String.valueOf(x  +  value));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x  +  value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x  +  value));	  addNumber(String.valueOf(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	87	None	replace
350	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  y  =  value.doubleValue();  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1);  int  y  =  value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1);  int  y  =  value.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	89	None	replace
351	[BUG]  [BUGGY]  add(String.valueOf(x)+  2);  int  x  =  value.doubleValue();  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  2);  int  x  =  value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  2);  int  x  =  value.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	89	None	replace
352	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  long  x  =  value.doubleValue();  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1);  long  x  =  value.doubleValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1);  long  x  =  value.doubleValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	89	None	replace
353	[BUG]  [BUGGY]  add(Integer.toString(value)+  3);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  3);	  add(Integer.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	22	None	replace
354	[BUG]  [BUGGY]  add(Long.toString(value)+ ",NaN "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ ",NaN "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ ",NaN "  +  Integer.toString(exp));	          add(Long.toString(value)+   "NaN   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	83	None	replace
355	[BUG]  [BUGGY]  add(Long.valueOf(x)+   "Ee "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)+   "Ee "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+   "Ee "  +  Integer.toString(value));	  add(Long.valueOf(x)+       "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	44	None	replace
356	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Integer.toString(value)+  1);	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
357	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
358	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+ ",  Integer.toString(value));  [CE]  unclosed  string  literal  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+ ",  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+ ",  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
359	[BUG]  [BUGGY]  add(Number.valueOf(x)/  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Number.valueOf(x)/  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)/  Integer.toString(exp));	  add(Number.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	93	None	replace
360	[BUG]  [BUGGY]  add(number.valueOf(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(number.valueOf(x)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(number.valueOf(x)+  Integer.toString(value));	  add(Number.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	93	None	replace
361	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  add(Integer.toString(value));  }  [CE]  '.class'  expected  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  add(Integer.toString(value));  }	  add(Long.toString(double));    	non-compiled	[CE]  '.class'  expected	6	None	replace
362	[BUG]  [BUGGY]  if(value  >=  0.0)  {  add(Long.toString(double));  }  else  {  add(Integer.toString(value));  }  [CE]  '.class'  expected  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  >=  0.0)  {  add(Long.toString(double));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  >=  0.0)  {  add(Long.toString(double));  }  else  {  add(Integer.toString(value));  }	  add(Long.toString(double));    	non-compiled	[CE]  '.class'  expected	6	None	replace
363	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  	6	None	replace
364	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  add(Long.toString(value));  }  [CE]  '.class'  expected  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(double));  }  else  {  add(Long.toString(value));  }	  add(Long.toString(double));    	non-compiled	[CE]  '.class'  expected	6	None	replace
365	[BUG]  [BUGGY]  if(value  >=  0.0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  >=  0.0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  >=  0.0)  {  add(Long.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  	6	None	replace
366	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
367	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Long.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Long.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
368	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  int  value  =  Integer.toString(value);  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  int  value  =  Integer.toString(value);  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  int  value  =  Integer.toString(value);  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
369	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  int  value  =  value.doubleValue();  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  int  value  =  value.doubleValue();  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  int  value  =  value.doubleValue();  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
370	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value)+  Integer.toString(exp));  }  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value)+  Integer.toString(exp));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value)+  Integer.toString(exp));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
371	[BUG]  [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  double  value  =  value.doubleValue();  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  double  value  =  value.doubleValue();  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  0.0)  {  add(Long.toString(x));  }  else  {  double  value  =  value.doubleValue();  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
372	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(value));	  add(Integer.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	33	None	replace
373	[BUG]  [BUGGY]  add(String.valueOf(x)+  4);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  4);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  4);	  add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	23	None	replace
374	[BUG]  [BUGGY]  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x  +  1)+  1);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x  +  1)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x  +  1)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	28	None	replace
375	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  Long.toString(value));	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  cannot  find  symbol  op	96	None	replace
376	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  value  +  1);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  value  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  value  +  1);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  cannot  find  symbol  op	96	None	replace
377	[BUG]  [BUGGY]  add(String.valueOf(x)+  2,  value);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  2,  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  2,  value);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  cannot  find  symbol  op	96	None	replace
378	[BUG]  [BUGGY]  add(Long.toString(value)+  0);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  0);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
379	[BUG]  [BUGGY]  add(Long.toString(value)+  3);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  3);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
380	[BUG]  [BUGGY]  add(Long.toString(value)+  4);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  4);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  4);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
381	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  negativeZero);  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  negativeZero);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  negativeZero);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
382	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  NUMBER_VALUE);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  NUMBER_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  NUMBER_VALUE);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
383	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)+  4);  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1)+  4);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)+  4);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	51	None	replace
384	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)+  3);  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1)+  3);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)+  3);	  add(String.valueOf(x    +    1)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	51	None	replace
385	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  binOp);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  binOp);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  binOp);	  addNumber(String.valueOf(x),    prev);    	non-compiled	[CE]  cannot  find  symbol  op	55	None	replace
386	[BUG]  [BUGGY]  add(String.toString(value)+  2);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(value)+  2);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  2);	  add(String.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	95	None	replace
387	[BUG]  [BUGGY]  adăug(Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adăug(Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adăug(Integer.toString(value));	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
388	[BUG]  [BUGGY]  add(BinOp.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.toString(value));	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	52	None	replace
389	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(x)  +  1);  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Integer.toString(x)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(x)  +  1);	  add(Integer.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	77	None	replace
390	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+ ",  Integer.toString(exp));  [CE]  unclosed  string  literal  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+ ",  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+ ",  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
391	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  mantissa,  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  mantissa,  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  mantissa,  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
392	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+   "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+   "E "  +  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+   "E "  +  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
393	[BUG]  [BUGGY]  adug(Long.toString(value)+  mantissa);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(value)+  mantissa);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(value)+  mantissa);	  adăug(Long.toString(value));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
394	[BUG]  [BUGGY]  adug(Long.toString(value)+  Long.toString(x));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(value)+  Long.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(value)+  Long.toString(x));	  adăug(Long.toString(value));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
395	[BUG]  [BUGGY]  adug(Long.toString(value)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adug(Long.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adug(Long.toString(value)+  1);	  adăug(Long.toString(value));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
396	[BUG]  [BUGGY]  add(Integer.toString(value)+   "E "  +  Integer.toString(x));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+   "E "  +  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+   "E "  +  Integer.toString(x));	  add(Integer.toString(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
397	[BUG]  [BUGGY]  _add(Integer.toString(value));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  _add(Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	_add(Integer.toString(value));	  add(Integer.toString(y));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
398	[BUG]  [BUGGY]  append(Integer.toString(value));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  append(Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	append(Integer.toString(value));	  add(Integer.toString(y));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
399	[BUG]  [BUGGY]  add(Long.toString(value)+ ",E' "  +  Integer.toString(exp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+ ",E' "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ ",E' "  +  Integer.toString(exp));	  add(Long.toString(value)+       "E'   "    +    Integer.toString(exp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
400	[BUG]  [BUGGY]  add(Integer.toString(value  /  10  +  Integer.toString(exp)));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  /  10  +  Integer.toString(exp)));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  /  10  +  Integer.toString(exp)));	  add(Integer.toString(exp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
401	[BUG]  [BUGGY]  add(Integer.toString(value  /  10  +  Integer.toString(exp));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  /  10  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  /  10  +  Integer.toString(exp));	  add(Integer.toString(exp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
402	[BUG]  [BUGGY]  add(Integer.toString(value  /  10  +  Integer.toString(x)));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  /  10  +  Integer.toString(x)));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  /  10  +  Integer.toString(x)));	  add(Integer.toString(exp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
403	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value)+  Integer.toString(x);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(value)+  Integer.toString(x);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value)+  Integer.toString(x);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
404	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  4);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  4);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  4);	  addNumber(String.valueOf(x)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
405	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  0);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  0);	  addNumber(String.valueOf(x)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
406	[BUG]  [BUGGY]  add(Integer.toString(value)+  INT_VALUE);  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  INT_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  INT_VALUE);	  add(Integer.toString(value)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
407	[BUG]  [BUGGY]  _add(Long.toString(value));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  _add(Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	_add(Long.toString(value));	  add(Long.toString(y));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
408	[BUG]  [BUGGY]  add(Integer.valueOf(mantissa)+  Integer.toString(exp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.valueOf(mantissa)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(mantissa)+  Integer.toString(exp));	  add(Integer.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
409	[BUG]  [BUGGY]  add(String.toString(mantissa)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(mantissa)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(mantissa)+  1);	  add(String.toString(value)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
410	[BUG]  [BUGGY]  addNumber(String.valueOf(x)/  2,  NUMBER_VALUE);  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)/  2,  NUMBER_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)/  2,  NUMBER_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  cannot  find  symbol  op	56	None	replace
411	[BUG]  [BUGGY]  addNumber(String.valueOf(x)-  1,  NUMBER_VALUE);  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)-  1,  NUMBER_VALUE);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)-  1,  NUMBER_VALUE);	  addNumber(String.valueOf(x),    NUMBER_VALUE);    	non-compiled	[CE]  cannot  find  symbol  op	56	None	replace
412	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  exp);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  exp);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  exp);	  add(String.valueOf(x)+    1,    value);    	non-compiled	[CE]  cannot  find  symbol  op	96	None	replace
413	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  value.intValue();  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  value.intValue();  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1);  int  x  =  value.intValue();	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	89	None	replace
414	[BUG]  [BUGGY]  add(Integer.toString(value  -  mantissa));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  -  mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  -  mantissa));	  add(Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	1	None	replace
415	[BUG]  [BUGGY]  add(Integer.toString(value  /  10  +  exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  /  10  +  exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  /  10  +  exp));	  add(Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	1	None	replace
416	[BUG]  [BUGGY]  adu000(Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adu000(Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adu000(Long.toString(value));	  adăug(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	61	None	replace
417	[BUG]  [BUGGY]  addNumber(String.valueOf(x)-  1,  value);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)-  1,  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)-  1,  value);	  addNumber(String.valueOf(x),    value);    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
418	[BUG]  [BUGGY]  addNumber(String.valueOf(x)/  2,  value);  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)/  2,  value);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)/  2,  value);	  addNumber(String.valueOf(x),    value);    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
419	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  Long.toString(value));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
420	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+ ",  Long.toString(value));  [CE]  unclosed  string  literal  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+ ",  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+ ",  Long.toString(value));	  addNumber(String.valueOf(x),    Long.toString(value));    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
421	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  exp);  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  exp);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  exp);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
422	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  binOp);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  binOp);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  binOp);	  add(String.valueOf(x    +    1),    value);    	non-compiled	[CE]  cannot  find  symbol  op	47	None	replace
423	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  1,  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  1,  Long.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  1,  Long.toString(value));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	70	None	replace
424	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  Long.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  Long.toString(mantissa));	  add(String.valueOf(x    +    1),    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	70	None	replace
425	[BUG]  [BUGGY]  add(String.valueOf(value  +  1));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(value  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(value  +  1));	  add(String.valueOf(mantissa    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	90	None	replace
426	[BUG]  [BUGGY]  add(Mantissa.valueOf(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Mantissa.valueOf(x)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Mantissa.valueOf(x)+  Integer.toString(exp));	  add(Number.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	74	None	replace
427	[BUG]  [BUGGY]  if(value  <  100)  {  add(Integer.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Integer.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Integer.toString(double));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(double));    	non-compiled	[CE]  	53	None	replace
428	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	53	None	replace
429	[BUG]  [BUGGY]  if(value  >  0.0)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  >  0.0)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  >  0.0)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	53	None	replace
430	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	53	None	replace
431	[BUG]  [BUGGY]  if(value  >  0.0)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  >  0.0)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  >  0.0)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	53	None	replace
432	[BUG]  [BUGGY]  int  x  =  Integer.toString(mantissa);  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(mantissa);  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(mantissa);  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	29	None	replace
433	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)-  1;  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value)-  1;  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value)-  1;  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	29	None	replace
434	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)+  1;  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value)+  1;  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value)+  1;  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	29	None	replace
435	[BUG]  [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(double    value));    	non-compiled	[CE]  cannot  find  symbol  op	79	None	replace
436	[BUG]  [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+  Integer.toString(exp));  }  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+  Integer.toString(exp));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+  Integer.toString(exp));  }	  add(Integer.toString(double    value));    	non-compiled	[CE]  cannot  find  symbol  op	79	None	replace
437	[BUG]  [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+ "E "  +  Integer.toString(exp));  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+ "E "  +  Integer.toString(exp));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+ "E "  +  Integer.toString(exp));  }	  add(Integer.toString(double    value));    	non-compiled	[CE]  cannot  find  symbol  op	79	None	replace
438	[BUG]  [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+ "N   "  +  Integer.toString(exp));  }  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+ "N   "  +  Integer.toString(exp));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(x)+ "N   "  +  Integer.toString(exp));  }	  add(Integer.toString(double    value));    	non-compiled	[CE]  cannot  find  symbol  op	79	None	replace
439	[BUG]  [BUGGY]  add(String.toString(mantissa)+  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(mantissa)+  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(mantissa)+  Integer.toString(x));	  add(String.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	71	None	replace
440	[BUG]  [BUGGY]  double  value  =  Math.max(mantissa,  value.doubleValue());  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  double  value  =  Math.max(mantissa,  value.doubleValue());  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	double  value  =  Math.max(mantissa,  value.doubleValue());	          double    value    =    value.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  op	85	None	replace
441	[BUG]  [BUGGY]  add(Long.toString(value)/  1);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)/  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)/  1);	  add(Long.toString(value)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	21	None	replace
442	[BUG]  [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  remove(String.valueOf(x)+  1);  }  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  remove(String.valueOf(x)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(String.valueOf(x)+  1);  }  else  {  remove(String.valueOf(x)+  1);  }	  add(String.valueOf(x)+    1);    remove(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	60	None	replace
443	[BUG]  [BUGGY]  int  x  =  Integer.toString(mantissa).intValue();  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(mantissa).intValue();  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(mantissa).intValue();  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	31	None	replace
444	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  1,  value).intValue();  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  1,  value).intValue();  add(Integer.toString(exp)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  1,  value).intValue();  add(Integer.toString(exp)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(exp)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	31	None	replace
445	[BUG]  [BUGGY]  add(String.valueOf(x)+  10);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  10);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  10);	  add(String.valueOf(x)+    2);    	non-compiled	[CE]  cannot  find  symbol  op	23	None	replace
446	[BUG]  [BUGGY]  add(BinOp.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.toString(value)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.toString(value)+  1);	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	25	None	replace
447	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	25	None	replace
448	[BUG]  [BUGGY]  add(Long.toString(value)+  Integer.toString(exp  +  1));  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(value)+  Integer.toString(exp  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Integer.toString(exp  +  1));	  add(Long.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	40	None	replace
449	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  1),  Integer.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  Integer.toString(mantissa));	  add(String.valueOf(x    +    1),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	48	None	replace
450	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value)-  1;  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(value)-  1;  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value)-  1;	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
451	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value  /  10);  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  mantissa  =  Long.toString(value  /  10);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value  /  10);	  int    mantissa    =    Long.toString(value);    	non-compiled	[CE]  cannot  find  symbol  op	20	None	replace
452	[BUG]  [BUGGY]  add(String.toString(mantissa)+ ",  E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(mantissa)+ ",  E "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(mantissa)+ ",  E "  +  Integer.toString(exp));	  add(String.toString(value)+   "    E       "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	92	None	replace
453	[BUG]  [BUGGY]  add(Long.valueOf(x)/  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x)/  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)/  Integer.toString(value));	  add(Long.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	34	None	replace
454	[BUG]  [BUGGY]  add(Integer.toString(value).intValue(),  Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value).intValue(),  Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value).intValue(),  Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	28	None	replace
455	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  1,  value).intValue();  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+  1,  value).intValue();  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  1,  value).intValue();  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value).intValue();    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	28	None	replace
456	[BUG]  [BUGGY]  if(mantissa  >  0.0)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa  >  0.0)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa  >  0.0)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
457	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  add(long.toString(x)+  1);  [CE]  class  expected  [FE]                    AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value);  add(long.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value);  add(long.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
458	[BUG]  [BUGGY]  if(mantissa  >  0.0)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class  expected  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa  >  0.0)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa  >  0.0)  {  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(long.valueOf(x)+    1);    	non-compiled	[CE]  class  expected	30	None	replace
459	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1L,  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1L,  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1L,  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
460	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  2,  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  2,  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  2,  Integer.toString(exp));	  addNumber(String.valueOf(x),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
461	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1L,  Character.toUpperCase(prev));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1L,  Character.toUpperCase(prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1L,  Character.toUpperCase(prev));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
462	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+ ",  Character.toUpperCase(prev));  [CE]  unclosed  string  literal  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+ ",  Character.toUpperCase(prev));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+ ",  Character.toUpperCase(prev));	  addNumber(String.valueOf(x),    Character.toUpperCase(prev));    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
463	[BUG]  [BUGGY]  add(String.valueOf(x)+  Long.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  Long.toString(mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  Long.toString(mantissa));	  add(String.valueOf(x)+    Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	73	None	replace
464	[BUG]  [BUGGY]  add(Integer.toString(value  -  1)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value  -  1)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value  -  1)+  Integer.toString(exp));	  add(Integer.toString(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	19	None	replace
465	[BUG]  [BUGGY]  add(Integer.toString(value)/  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)/  Integer.toString(x));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)/  Integer.toString(x));	  add(Integer.toString(value)+    Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	77	None	replace
466	[BUG]  [BUGGY]  add(String.valueOf(x  +  2),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x  +  2),  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  2),  Integer.toString(exp));	  add(String.valueOf(x    +    1),    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	49	None	replace
467	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  mantissa));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  mantissa));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  mantissa));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
468	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  y));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x,  y));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  y));	  addNumber(String.valueOf(x,    value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
469	[BUG]  [BUGGY]  add(String.valueOf(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(value)+  Integer.toString(exp));	  add(String.valueOf(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	80	None	replace
470	[BUG]  [BUGGY]  add(String.valueOf(mantissa)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(mantissa)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa)+  Integer.toString(value));	  add(String.valueOf(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	80	None	replace
471	[BUG]  [BUGGY]  add(String.valueOf(exp)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(exp)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(exp)+  Integer.toString(value));	  add(String.valueOf(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	80	None	replace
472	[BUG]  [BUGGY]  adăug(Long.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  adăug(Long.toString(value)+  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adăug(Long.toString(value)+  Integer.toString(exp));	  add(Long.toString(mantissa)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	16	None	replace
473	[BUG]  [BUGGY]  add(String.toString(value)+  Integer.toString(exp  +  1));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(value)+  Integer.toString(exp  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  Integer.toString(exp  +  1));	  add(String.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	72	None	replace
474	[BUG]  [BUGGY]  add(String.toString(value)+  Integer.toString(exp)  +  1);  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(value)+  Integer.toString(exp)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  Integer.toString(exp)  +  1);	  add(String.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	72	None	replace
475	[BUG]  [BUGGY]  add(BinOp.valueOf(x)/  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)/  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)/  Integer.toString(value));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	75	None	replace
476	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Long.toString(exp));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Long.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Long.toString(exp));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  ';'  expected	75	None	replace
477	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(Expression.NUMBER_INT));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(Expression.NUMBER_INT));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(Expression.NUMBER_INT));	  add(BinOp.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  ';'  expected	75	None	replace
478	[BUG]  [BUGGY]  int  x  =  Integer.toString(value);  add(Long.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                      AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value);  add(Long.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value);  add(Long.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	32	None	replace
479	[BUG]  [BUGGY]  x  =  Integer.toString(value);  add(Long.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  x  =  Integer.toString(value);  add(Long.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	x  =  Integer.toString(value);  add(Long.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	32	None	replace
480	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)-  1;  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value)-  1;  add(Long.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value)-  1;  add(Long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Long.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	32	None	replace
481	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1L,  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1L,  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1L,  Integer.toString(value));	  addNumber(String.valueOf(x),    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	9	None	replace
482	[BUG]  [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
483	[BUG]  [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(Integer.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
484	[BUG]  [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(exp));  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(exp));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(exp));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
485	[BUG]  [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(value));  }  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(value));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
486	[BUG]  [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(mantissa)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(x));  }	  add(Integer.toString(x));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
487	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1,  Character.toLowerCase(len));  [CE]  cannot  find  symbol  op  [FE]                              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x)+  1,  Character.toLowerCase(len));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1,  Character.toLowerCase(len));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
488	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(binOp));  [CE]  cannot  find  symbol  op  [FE]                                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(binOp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(binOp));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
489	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(y));  [CE]  cannot  find  symbol  op  [FE]                                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(y));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(y));	  addNumber(String.valueOf(x),    Character.toLowerCase(len));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
490	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1),  ValueUtils.doubleValue(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(x  +  1),  ValueUtils.doubleValue(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1),  ValueUtils.doubleValue(value));	  add(Long.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	46	None	replace
491	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)-  1;  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value)-  1;  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value)-  1;  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
492	[BUG]  [BUGGY]  int  x  =  Integer.toString(mantissa);  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(mantissa);  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(mantissa);  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
493	[BUG]  [BUGGY]  int  x  =  Integer.toString(value)+  1;  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  Integer.toString(value)+  1;  add(Integer.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  Integer.toString(value)+  1;  add(Integer.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    Integer.toString(value);    add(Integer.toString(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	26	None	replace
494	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	6	None	replace
495	[BUG]  [BUGGY]  if(value  >  0.0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  >  0.0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  >  0.0)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	6	None	replace
496	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(double));    	non-compiled	[CE]  cannot  find  symbol  op	6	None	replace
497	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(value));  }  else  {  add(Long.toString(value));  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(value));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(value));  }  else  {  add(Long.toString(value));  }	  add(Long.toString(double));    	non-compiled	[CE]  ')'  expected	6	None	replace
498	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Long.toString(value));  }  else  {  add(Long.toString(value));  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Long.toString(value));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Long.toString(value));  }  else  {  add(Long.toString(value));  }	  add(Long.toString(double));    	non-compiled	[CE]  ')'  expected	6	None	replace
499	[BUG]  [BUGGY]  add(Long.valueOf(exp)+  Integer.toString(value));  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.valueOf(exp)+  Integer.toString(value));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(exp)+  Integer.toString(value));	  add(Long.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  ')'  expected	15	None	replace
500	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  value.doubleValue());  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  value.doubleValue());  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  value.doubleValue());	  add(String.valueOf(x)+    0);    	non-compiled	[CE]  ')'  expected	66	None	replace
501	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  value.length());  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(x)+  1,  value.length());  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  value.length());	  add(String.valueOf(x)+    0);    	non-compiled	[CE]  ')'  expected	66	None	replace
502	[BUG]  [BUGGY]  add(String.toString(value)+  1));  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.toString(value)+  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  1));	  add(String.valueOf(x)+    1);    add(String.valueOf(x)+    1));    	non-compiled	[CE]  ')'  expected	57	None	replace
503	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(exp  +  1));  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Integer.toString(exp  +  1));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(exp  +  1));	  add(Integer.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  ')'  expected	33	None	replace
504	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(exp)  +  1);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Integer.toString(value)+  Integer.toString(exp)  +  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(exp)  +  1);	  add(Integer.toString(value)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	33	None	replace
505	[BUG]  [BUGGY]  add(Value.doubleValue(),  String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Value.doubleValue(),  String.valueOf(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Value.doubleValue(),  String.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	27	None	replace
506	[BUG]  [BUGGY]  int  x  =  value.doubleValue();  add(String.toString(x)+  1);  [CE]  cannot  find  symbol  bbinOp  [FE]              AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  int  x  =  value.doubleValue();  add(String.toString(x)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  x  =  value.doubleValue();  add(String.toString(x)+  1);	  add(String.valueOf(x)+    1);    int    x    =    value.doubleValue();    add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  bbinOp	27	None	replace
507	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  double  value  =  value.doubleValue();  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  bbinOp  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  double  value  =  value.doubleValue();  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(x));  }  else  {  double  value  =  value.doubleValue();  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	3	None	replace
508	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  add(Long.toString(value));  }  [CE]  cannot  find  symbol  bbinOp  [FE]                  ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(x));  }  else  {  add(Long.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	3	None	replace
509	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  int  value  =  value.doubleValue();  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  bbinOp  [FE]                    ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  int  value  =  value.doubleValue();  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(x));  }  else  {  int  value  =  value.doubleValue();  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  bbinOp	3	None	replace
510	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]                      ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
511	[BUG]  [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  iop  [FE]                        ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Long.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Long.toString(x));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
512	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]                          ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Long.toString(x));  }  else  {  add(Integer.toString(value));  }	  add(Long.toString(x));    	non-compiled	[CE]  cannot  find  symbol  iop	3	None	replace
513	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ ",N   "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  iop  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(Long.toString(mantissa)+ ",N   "  +  Integer.toString(exp));  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ ",N   "  +  Integer.toString(exp));	          add(Long.toString(value)+   "N       "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  iop	82	None	replace
514	[BUG]  [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]              ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <  100)  {  add(Integer.toString(value));  }  else  {  add(Integer.toString(value));  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
515	[BUG]  [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(value));  }  [CE]  cannot  find  symbol  iop  [FE]                ComparisonFailure      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(value));  }  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	if(value  <=  0.0)  {  add(Integer.toString(value));  }  else  {  add(Long.toString(value));  }	  add(Integer.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  iop	52	None	replace
516	[BUG]  [BUGGY]  add(String.valueOf(y)+  1);  [CE]  cannot  find  symbol  iop  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(y)+  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(y)+  1);	  add(String.valueOf(x)+    1);    add(String.valueOf(y)+    1);    	non-compiled	[CE]  cannot  find  symbol  iop	88	None	replace
517	[BUG]  [BUGGY]  add(String.valueOf(exp)/  1);  [CE]  cannot  find  symbol  iop  [FE]        AssertionFailedError      [CONTEXT]      mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +       "E     "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {      [BUGGY]  add(String.valueOf(exp)/  1);  [BUGGY]      }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(exp)/  1);	  add(String.valueOf(x)/    1);    	non-compiled	[CE]  cannot  find  symbol  iop	65	None	replace
