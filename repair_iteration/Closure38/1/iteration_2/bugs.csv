bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  add(Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(exp));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
2	[BUG]  [BUGGY]  add(Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(x));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
3	[BUG]  [BUGGY]  add(Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(x));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
4	[BUG]  [BUGGY]  add(Number.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Number.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.toString(value));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
5	[BUG]  [BUGGY]  add(Long.toString(exp));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(exp));	  add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	1	None	replace
6	[BUG]  [BUGGY]  add(Long.toString(double));  [CE]  '.class'  expected  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(double));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(double));	  add(Long.toString(value));    	non-compiled	[CE]  '.class'  expected	1	None	replace
7	[BUG]  [BUGGY]  add(Long.toString(y));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(y));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(y));	  add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	1	None	replace
8	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  value);  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  value);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  value);	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
9	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Integer.toString(value));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
10	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Integer.toString(exp));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
11	[BUG]  [BUGGY]  addNumber(String.valueOf(x,  value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x,  value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x,  value));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
12	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Long.toString(value));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
13	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(len));  [CE]  cannot  find  symbol  op  [FE]                          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  Character.toLowerCase(len));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toLowerCase(len));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
14	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(prev));  [CE]  cannot  find  symbol  op  [FE]                            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  Character.toUpperCase(prev));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  Character.toUpperCase(prev));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
15	[BUG]  [BUGGY]  add(Long.valueOf(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.valueOf(x)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
16	[BUG]  [BUGGY]  add(Long.toString(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(mantissa)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
17	[BUG]  [BUGGY]  add(Integer.toString(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(x)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+  Integer.toString(value));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
18	[BUG]  [BUGGY]  add(Long.toString(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(x)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
19	[BUG]  [BUGGY]  add(Integer.toString(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(x)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
20	[BUG]  [BUGGY]  int  mantissa  =  Long.toString(value);  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  int  mantissa  =  Long.toString(value);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	int  mantissa  =  Long.toString(value);	  add(Long.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
21	[BUG]  [BUGGY]  add(Long.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(value)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  1);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
22	[BUG]  [BUGGY]  add(Integer.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(value)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  1);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
23	[BUG]  [BUGGY]  add(String.valueOf(x)+  2);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  2);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  2);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
24	[BUG]  [BUGGY]  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  1);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
25	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    add(String.valueOf(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
26	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  Integer.toString(value);  add(Integer.toString(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
27	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  value.doubleValue();  add(String.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  value.doubleValue();  add(String.valueOf(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
28	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  Integer.toString(value).intValue();  add(Integer.toString(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
29	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]            AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  Integer.toString(value);  add(Integer.toString(exp)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
30	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  [CE]  class  expected  [FE]              AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  Integer.toString(value);  add(long.valueOf(x)+  1);	  	non-compiled	[CE]  class  expected	6	None	add
31	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [CE]  cannot  find  symbol  op  [FE]                AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  Integer.toString(value).intValue();  add(Integer.toString(exp)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
32	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                  AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  Integer.toString(value);  add(Long.valueOf(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
33	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(value)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
34	[BUG]  [BUGGY]  add(Long.valueOf(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.valueOf(x)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+  Integer.toString(value));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
35	[BUG]  [BUGGY]  add(Integer.valueOf(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.valueOf(x)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.valueOf(x)+  Integer.toString(value));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
36	[BUG]  [BUGGY]  add(Long.valueOf(x)+   "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.valueOf(x)+   "E "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+   "E "  +  Integer.toString(value));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
37	[BUG]  [BUGGY]  add(String.valueOf(x)+ ",E   "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+ ",E   "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+ ",E   "  +  Integer.toString(value));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
38	[BUG]  [BUGGY]  add(Long.toString(value)+   "E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(value)+   "E "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+   "E "  +  Integer.toString(exp));	  add(Long.toString(mantissa)+   "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	4	None	replace
39	[BUG]  [BUGGY]  add(Long.toString(value)+ ",E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(value)+ ",E "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ ",E "  +  Integer.toString(exp));	  add(Long.toString(mantissa)+   "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	4	None	replace
40	[BUG]  [BUGGY]  add(Long.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(value)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+  Integer.toString(exp));	      	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
41	[BUG]  [BUGGY]  add(Long.toString(value)+ "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(value)+ "E "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+ "E "  +  Integer.toString(value));	      	non-compiled	[CE]  cannot  find  symbol  op	10	None	replace
42	[BUG]  [BUGGY]      add(Long.toString(value)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      add(Long.toString(value)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        add(Long.toString(value)+  Integer.toString(value));	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
43	[BUG]  [BUGGY]  add(Long.toString(mantissa)+ "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(mantissa)+ "E "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(mantissa)+ "E "  +  Integer.toString(value));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
44	[BUG]  [BUGGY]  add(Long.valueOf(x)+   "E "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.valueOf(x)+   "E "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x)+   "E "  +  Integer.toString(exp));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
45	[BUG]  [BUGGY]  add(Integer.toString(x)+ "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(x)+ "E "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(x)+ "E "  +  Integer.toString(value));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
46	[BUG]  [BUGGY]  add(Long.valueOf(x  +  1));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.valueOf(x  +  1));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.valueOf(x  +  1));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
47	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  value);  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  1),  value);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  value);	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
48	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  1),  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  Integer.toString(value));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
49	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  1),  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  Integer.toString(exp));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
50	[BUG]  [BUGGY]  add(String.valueOf(x  +  2));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  2));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  2));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
51	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)+  1);  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  1)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)+  1);	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
52	[BUG]  [BUGGY]  add(Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(mantissa));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(mantissa));	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
53	[BUG]  [BUGGY]  add(Integer.toString(double));  [CE]  '.class'  expected  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(double));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(double));	  add(Integer.toString(value));    	non-compiled	[CE]  '.class'  expected	2	None	replace
54	[BUG]  [BUGGY]  add(Integer.toString(y));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(y));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(y));	  add(Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	2	None	replace
55	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  prev);  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  prev);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  prev);	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
56	[BUG]  [BUGGY]  addNumber(String.valueOf(x),  NUMBER_VALUE);  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x),  NUMBER_VALUE);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x),  NUMBER_VALUE);	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
57	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  1));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    add(String.valueOf(x)+  1));	  	non-compiled	[CE]  ';'  expected	6	None	add
58	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  Add(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  Add(String.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    Add(String.valueOf(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
59	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(x)+  2);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    add(String.valueOf(x)+  2);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
60	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  remove(String.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    remove(String.valueOf(x)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
61	[BUG]  [BUGGY]  adăug(Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  adăug(Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	adăug(Long.toString(value));	  add(Long.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
62	[BUG]  [BUGGY]  hinzuge(Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                      ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  hinzuge(Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	hinzuge(Long.toString(value));	  add(Long.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
63	[BUG]  [BUGGY]      add(Long.toString(value)+  Long.toString(x));  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      add(Long.toString(value)+  Long.toString(x));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        add(Long.toString(value)+  Long.toString(x));	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
64	[BUG]  [BUGGY]      add(Long.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      add(Long.toString(value)+  Integer.toString(x));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        add(Long.toString(value)+  Integer.toString(x));	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
65	[BUG]  [BUGGY]  add(String.valueOf(x)/  1);  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)/  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)/  1);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
66	[BUG]  [BUGGY]  add(String.valueOf(x)+  0);  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  0);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  0);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
67	[BUG]  [BUGGY]  add(Long.toString(x)+   "E "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(x)+   "E "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(x)+   "E "  +  Integer.toString(value));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
68	[BUG]  [BUGGY]  add(Long.toString(value)+   "E' "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(value)+   "E' "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(value)+   "E' "  +  Integer.toString(exp));	  add(Long.toString(mantissa)+   "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	4	None	replace
69	[BUG]  [BUGGY]  add(String.valueOf(x  +  1)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  1)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1)+  Integer.toString(value));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
70	[BUG]  [BUGGY]  add(String.valueOf(x  +  1),  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x  +  1),  Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x  +  1),  Long.toString(value));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
71	[BUG]  [BUGGY]  add(String.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.toString(value)+  Integer.toString(x));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  Integer.toString(x));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
72	[BUG]  [BUGGY]  add(String.toString(value)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.toString(value)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  Integer.toString(exp));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
73	[BUG]  [BUGGY]  add(String.valueOf(x)+  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  Long.toString(value));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
74	[BUG]  [BUGGY]  add(Number.valueOf(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Number.valueOf(x)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)+  Integer.toString(value));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
75	[BUG]  [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(BinOp.valueOf(x)+  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(BinOp.valueOf(x)+  Integer.toString(value));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
76	[BUG]  [BUGGY]  add(String.valueOf(x)+   "Ee "  +  Integer.toString(value));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+   "Ee "  +  Integer.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+   "Ee "  +  Integer.toString(value));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	3	None	replace
77	[BUG]  [BUGGY]  add(Integer.toString(value)+  Integer.toString(x));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(value)+  Integer.toString(x));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(value)+  Integer.toString(x));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
78	[BUG]  [BUGGY]  Add(Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]                    ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  Add(Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	Add(Long.toString(value));	  add(Long.toString(mantissa));    	non-compiled	[CE]  cannot  find  symbol  op	8	None	replace
79	[BUG]  [BUGGY]  add(Integer.toString(double  value));  [CE]  '.class'  expected  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Integer.toString(double  value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Integer.toString(double  value));	  add(Integer.toString(value));    	non-compiled	[CE]  '.class'  expected	2	None	replace
80	[BUG]  [BUGGY]  add(String.valueOf(mantissa)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(mantissa)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
81	[BUG]  [BUGGY]  add(String.valueOf(x)+  Integer.toString(mantissa));  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  Integer.toString(mantissa));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  Integer.toString(mantissa));	  add(String.valueOf(x)+    Integer.toString(exp));    	non-compiled	[CE]  cannot  find  symbol  op	14	None	replace
82	[BUG]  [BUGGY]      add(Long.toString(value)+ "N   "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      add(Long.toString(value)+ "N   "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        add(Long.toString(value)+ "N   "  +  Integer.toString(exp));	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
83	[BUG]  [BUGGY]      add(Long.toString(value)+ "NaN "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      add(Long.toString(value)+ "NaN "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        add(Long.toString(value)+ "NaN "  +  Integer.toString(exp));	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
84	[BUG]  [BUGGY]      add(Long.toString(value)+ "N   "  +  Long.toString(value));  [CE]  cannot  find  symbol  op  [FE]        AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      add(Long.toString(value)+ "N   "  +  Long.toString(value));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        add(Long.toString(value)+ "N   "  +  Long.toString(value));	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
85	[BUG]  [BUGGY]      double  value  =  value.doubleValue();  [CE]  cannot  find  symbol  op  [FE]          AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]      double  value  =  value.doubleValue();  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	        double  value  =  value.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  op	9	None	add
86	[BUG]  [BUGGY]  addNumber(String.valueOf(x)+  1);  [CE]  cannot  find  symbol  op  [FE]                ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(x)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(x)+  1);	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
87	[BUG]  [BUGGY]  addNumber(String.valueOf(mantissa));  [CE]  cannot  find  symbol  op  [FE]                  ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  addNumber(String.valueOf(mantissa));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	addNumber(String.valueOf(mantissa));	  addNumber(String.valueOf(x));    	non-compiled	[CE]  cannot  find  symbol  op	5	None	replace
88	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(y)+  1);  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  add(String.valueOf(y)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    add(String.valueOf(y)+  1);	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
89	[BUG]  [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  value.doubleValue();  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1);  int  x  =  value.doubleValue();  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+    1);    int  x  =  value.doubleValue();	  	non-compiled	[CE]  cannot  find  symbol  op	6	None	add
90	[BUG]  [BUGGY]  add(String.valueOf(mantissa  +  1));  [CE]  cannot  find  symbol  op  [FE]            ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(mantissa  +  1));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(mantissa  +  1));	  add(String.valueOf(x    +    1));    	non-compiled	[CE]  cannot  find  symbol  op	13	None	replace
91	[BUG]  [BUGGY]  add(Long.toString(menu));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Long.toString(menu));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Long.toString(menu));	  add(Long.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	1	None	replace
92	[BUG]  [BUGGY]  add(String.toString(value)+ "  E   "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.toString(value)+ "  E   "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+ "  E   "  +  Integer.toString(exp));	  add(String.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	15	None	replace
93	[BUG]  [BUGGY]  add(Number.valueOf(x)+  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]        ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(Number.valueOf(x)+  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(Number.valueOf(x)+  Integer.toString(exp));	  add(String.valueOf(x)+    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	11	None	replace
94	[BUG]  [BUGGY]  add(String.valueOf(x)+ ",  E   "  +  Integer.toString(exp));  [CE]  cannot  find  symbol  op  [FE]          ComparisonFailure    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+ ",  E   "  +  Integer.toString(exp));  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+ ",  E   "  +  Integer.toString(exp));	  add(String.valueOf(x)+   "E   "    +    Integer.toString(value));    	non-compiled	[CE]  cannot  find  symbol  op	12	None	replace
95	[BUG]  [BUGGY]  add(String.toString(value)+  1);  [CE]  cannot  find  symbol  op  [FE]    AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.toString(value)+  1);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.toString(value)+  1);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
96	[BUG]  [BUGGY]  add(String.valueOf(x)+  1,  value);  [CE]  cannot  find  symbol  op  [FE]      AssertionFailedError    [CONTEXT]    mantissa  /=  10;  exp++;  }  }  if  (exp  >  2)  {  add(Long.toString(mantissa)  +     "E   "  +  Integer.toString(exp));  }  else  {  add(Long.toString(value));  }  }  else  {    [BUGGY]  add(String.valueOf(x)+  1,  value);  [BUGGY]    }  [CLASS]  CodeConsumer  [METHOD]  addNumber  [RETURN_TYPE]  void  double  x  [VARIABLES]  char  prev  boolean  binOp  needSemiColon  negativeZero  sawFunction  shouldEndLine  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  	projects/Closure38/src/com/google/javascript/jscomp/CodeConsumer.java	0.5	265	265	1	replace	add(String.valueOf(x)+  1,  value);	  add(String.valueOf(x)+    1);    	non-compiled	[CE]  cannot  find  symbol  op	7	None	replace
