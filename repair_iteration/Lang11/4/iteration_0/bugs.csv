bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
7	[BUG] [BUGGY] char[] buffer = new char[count]; [FE] AssertionFailedError [CONTEXT] } else { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } } [BUGGY] char[] buffer = new char[count]; [BUGGY] int gap = end - start; while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	247	247	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } } [BUGGY] [BUGGY] char[] buffer = new char[count]; int gap = end - start; while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	247	247	1	add	
