bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count  -  start];  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char[]  buffer  =  new  char[count  -  start];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char[]  buffer  =  new  char[count  -  start];		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
2	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count  -  1];  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]      AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char[]  buffer  =  new  char[count  -  1];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char[]  buffer  =  new  char[count  -  1];		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
3	[BUG]  [BUGGY]    char[]  buffer  =  new  char[buffer.length  +  1];  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]        AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char[]  buffer  =  new  char[buffer.length  +  1];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char[]  buffer  =  new  char[buffer.length  +  1];		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
4	[BUG]  [BUGGY]    char[]  buffer  =  new  char[buffer.length  -  start];  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]          AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char[]  buffer  =  new  char[buffer.length  -  start];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char[]  buffer  =  new  char[buffer.length  -  start];		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
5	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count  +  1];  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]            AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char[]  buffer  =  new  char[count  +  1];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char[]  buffer  =  new  char[count  +  1];		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  1);  [BUGGY]  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	add	ch  =  (char)(random.nextInt(gap)+  1);	ch  =  (char)  (random.nextInt(gap)  +  start);  	compilable	  [FE]  AssertionFailedError  	1	2	replace
7	[BUG]  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  1);  [BUGGY]  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	ch  =  (char)(random.nextInt(gap)+  1);	ch  =  (char)  (random.nextInt(gap)  +  start);  	compilable	  [FE]  AssertionFailedError  	1	2	replace
8	[BUG]  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  start];  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  start];  [BUGGY]  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	ch  =  (char)(random.nextInt(gap)+  start];	ch  =  (char)  (random.nextInt(gap)  +  start);  	non-compiled	[CE]  ')'  expected	1	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  start  +  1);  [BUGGY]  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	add	ch  =  (char)(random.nextInt(gap)+  start  +  1);	ch  =  (char)  (random.nextInt(gap)  +  start);  	compilable	  [FE]  AssertionFailedError  	1	1	replace
10	[BUG]  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]  ch  =  (char)(random.nextInt(gap)+  start  +  1);  [BUGGY]  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	ch  =  (char)(random.nextInt(gap)+  start  +  1);	ch  =  (char)  (random.nextInt(gap)  +  start);  	compilable	  [FE]  AssertionFailedError  	1	1	replace
11	[BUG]  [BUGGY]    char  ch  =  random.nextInt(gap);  [CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char  ch  =  random.nextInt(gap);  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char  ch  =  random.nextInt(gap);		non-compiled	[CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
12	[BUG]  [BUGGY]    Random  random  =  RandomStringUtils.getValue(buffer,  start,  end);  [CE]  variable  random  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]      AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    Random  random  =  RandomStringUtils.getValue(buffer,  start,  end);  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    Random  random  =  RandomStringUtils.getValue(buffer,  start,  end);		non-compiled	[CE]  variable  random  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
13	[BUG]  [BUGGY]    Random  random  =  RandomStringUtils.getRandom(random);  [CE]  variable  random  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]        AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    Random  random  =  RandomStringUtils.getRandom(random);  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    Random  random  =  RandomStringUtils.getRandom(random);		non-compiled	[CE]  variable  random  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
14	[BUG]  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+  start];  [CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]    AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char  ch  =  chars[random.nextInt(gap)+  start];		non-compiled	[CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
15	[BUG]  [BUGGY]    Char  ch  =  chars[random.nextInt(gap)+  start];  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    Char  ch  =  chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    Char  ch  =  chars[random.nextInt(gap)+  start];		non-compiled	[CE]  cannot  find  symbol	2	None	add
16	[BUG]  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+1];  [CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]        AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+1];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    char  ch  =  chars[random.nextInt(gap)+1];		non-compiled	[CE]  variable  ch  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
17	[BUG]  [BUGGY]    Char  ch  =  chars[random.nextInt(gap)+1];  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  }  }  }  char[]  buffer  =  new  char[count];  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  [BUGGY]    Char  ch  =  chars[random.nextInt(gap)+1];  [BUGGY]  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  ||  !letters  &&  !numbers)  {  if(ch  >=  56320  &&  ch  <=  57343)  {  if(count  ==  0)  {  count++;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5773502691896258	253	253	1	replace	    Char  ch  =  chars[random.nextInt(gap)+1];		non-compiled	[CE]  cannot  find  symbol	2	None	add
