bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||  random.length  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(count  ==  0  ||  random.length  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||  random.numbers)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(count  ==  0  ||  random.numbers)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getValue()  ==  0))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getValue()  ==  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(count  ==  0  ||(numbers  &&  random.getValue()  ==  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	  	if  (count  ==  0)  {  	non-compiled	[CE]  	15	None	replace
5	[BUG]  [BUGGY]    char[]  buffer,  Random  random)  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  Random  random)  {  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    char[]  buffer,  Random  random)  {		non-compiled	[CE]  	16	None	add
6	[BUG]  [BUGGY]    Random  random  =  random.nullValue();  [CE]  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    Random  random  =  random.nullValue();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    Random  random  =  random.nullValue();		non-compiled	[CE]  	16	None	add
7	[BUG]  [BUGGY]    Random  random  =  random.getValue();  [CE]  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    Random  random  =  random.getValue();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    Random  random  =  random.getValue();		non-compiled	[CE]  	16	None	add
8	[BUG]  [BUGGY]    int  count  =  random.length();  [CE]  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    int  count  =  random.length();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    int  count  =  random.length();		non-compiled	[CE]  	16	None	add
9	[BUG]  [BUGGY]    Random  random  =  random.next();  [CE]  [FE]            AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    Random  random  =  random.next();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    Random  random  =  random.next();		non-compiled	[CE]  	16	None	add
10	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if(count  ==  0  ||  letters  &&  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||  letters  &&  random.length  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(count  ==  0  ||  letters  &&  random.length  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(numbers  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(numbers  ||  random.length  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if(numbers  ||  random.length  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]    int  count  =  random.length;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    int  count  =  random.length;  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    int  count  =  random.length;		non-compiled	[CE]  	16	None	add
15	[BUG]  [BUGGY]    Random  random  =  random.nextInt(start,  end);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    Random  random  =  random.nextInt(start,  end);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    Random  random  =  random.nextInt(start,  end);		non-compiled	[CE]  	16	None	add
16	[BUG]  [BUGGY]  if((  letters  &&  chars!=  null)||(numbers  &&  chars.length  ==  0))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  chars!=  null)||(numbers  &&  chars.length  ==  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if((  letters  &&  chars!=  null)||(numbers  &&  chars.length  ==  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  if((  letters  &&  random.length  >  0)||(numbers  &&  random.length  >  0))  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  random.length  >  0)||(numbers  &&  random.length  >  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if((  letters  &&  random.length  >  0)||(numbers  &&  random.length  >  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  if((  letters  &&  chars!=  null)||(numbers  &&  chars.length  >  0))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  chars!=  null)||(numbers  &&  chars.length  >  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if((  letters  &&  chars!=  null)||(numbers  &&  chars.length  >  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  if((  letters  &&  chars.length  >  0)||(numbers  &&  chars[0]  ==  random))  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  letters  &&  chars.length  >  0)||(numbers  &&  chars[0]  ==  random))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	if((  letters  &&  chars.length  >  0)||(numbers  &&  chars[0]  ==  random))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]    char  ch  =  random.getChars(start,  end);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char  ch  =  random.getChars(start,  end);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    char  ch  =  random.getChars(start,  end);		non-compiled	[CE]  illegal  start  of  type	16	None	add
21	[BUG]  [BUGGY]    char  ch  =  random.getChars(ch);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char  ch  =  random.getChars(ch);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    char  ch  =  random.getChars(ch);		non-compiled	[CE]  illegal  start  of  type	16	None	add
22	[BUG]  [BUGGY]    char  ch  =  random.nextToken();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char  ch  =  random.nextToken();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    char  ch  =  random.nextToken();		non-compiled	[CE]  illegal  start  of  type	16	None	add
23	[BUG]  [BUGGY]    char  ch  =  random.nextDouble();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char  ch  =  random.nextDouble();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	225	225	1	replace	    char  ch  =  random.nextDouble();		non-compiled	[CE]  illegal  start  of  type	16	None	add
