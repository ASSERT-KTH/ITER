bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  NULL,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  NULL,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  NULL,  RANDOM);	  random(count,    start,    end,    letters,    numbers,    null,    NULL);    	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  RANDOM,  NULL);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  RANDOM,  NULL);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  RANDOM,  NULL);	  random(count,    start,    end,    letters,    numbers,    null,    NULL);    	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  true);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  true);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  true);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  	21	None	replace
4	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  false,  RANDOM);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  	21	None	replace
5	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  <  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  <  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  <  0);	  RandomStringUtils.checkArgument(count    <    =    0);    	non-compiled	[CE]  	80	None	replace
6	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  RANDOM,  null);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  	19	None	replace
7	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  null,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    true,    null,    RANDOM);    	non-compiled	[CE]  	22	None	replace
8	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RandomStringUtils.RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RandomStringUtils.RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  RandomStringUtils.RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    true,    null,    RANDOM);    	non-compiled	[CE]  	22	None	replace
9	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(numbers,  start,  end,  letters);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(numbers,  start,  end,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(numbers,  start,  end,  letters);	  RandomStringUtils.checkNotNull(numbers,    start,    end);    	non-compiled	[CE]  	32	None	replace
10	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(numbers,  start,  end,  letters,  numbers);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(numbers,  start,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(numbers,  start,  end,  letters,  numbers);	  RandomStringUtils.checkNotNull(numbers,    start,    end);    	non-compiled	[CE]  not  a  statement	32	None	replace
11	[BUG]  [BUGGY]  RandomStringUtils.checkState(count,  start,  end);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count,  start,  end);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count,  start,  end);	  RandomStringUtils.checkNotNull(numbers,    start,    end);    	non-compiled	[CE]  not  a  statement	32	None	replace
12	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  not  a  statement	29	None	replace
13	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters,  numbers);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters,  numbers);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  not  a  statement	29	None	replace
14	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  values);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  values);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  values);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  not  a  statement	29	None	replace
15	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  null,  RANDOM);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  null,  RANDOM);	  RandomStringUtils.remove(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  not  a  statement	41	None	replace
16	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  RANDOM,  null);	  RandomStringUtils.remove(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  not  a  statement	41	None	replace
17	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  letters,  numbers,  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  letters,  numbers,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  start,  end,  letters,  numbers,  null);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  not  a  statement	34	None	replace
18	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  letters,  numbers,  RANDOM);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  letters,  numbers,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  start,  end,  letters,  numbers,  RANDOM);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	34	None	replace
19	[BUG]  [BUGGY]  RandomStringUtils.checkState(count,  start,  end,  letters,  numbers);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count,  start,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count,  start,  end,  letters,  numbers);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	34	None	replace
20	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  numbers);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  null,  numbers);	  RandomStringUtils.checkArgument(count!=    null,    letters);    	non-compiled	[CE]  	60	None	replace
21	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  null,  numbers);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count!=  null,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count!=  null,  numbers);	  RandomStringUtils.checkArgument(count!=    null,    letters);    	non-compiled	[CE]  	60	None	replace
22	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers!=  null,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers!=  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers!=  null,  RANDOM);	  RandomStringUtils.checkArgument(count!=    null,    letters);    	non-compiled	[CE]  	60	None	replace
23	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  true);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  true);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  true);	  RandomStringUtils.remove(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  	43	None	replace
24	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  false,  RANDOM);	  RandomStringUtils.remove(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  	43	None	replace
25	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  false,  null);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  false,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  false,  null);	  RandomStringUtils.remove(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  	43	None	replace
26	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  numbers);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    numbers);    	non-compiled	[CE]  	36	None	replace
27	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  0);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  	2	None	replace
28	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  1);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  	2	None	replace
29	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count,  start,  end);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count,  start,  end);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count,  start,  end);	  RandomStringUtils.checkNotNull(letters,    start,    end);    	non-compiled	[CE]  	35	None	replace
30	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	72	None	replace
31	[BUG]  [BUGGY]  RandomStringUtils.insert(ranDOM,  start,  end,  letters,  numbers,  null,  RANDOM);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(ranDOM,  start,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(ranDOM,  start,  end,  letters,  numbers,  null,  RANDOM);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	72	None	replace
32	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  false,  RANDOM);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	72	None	replace
33	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  null,  null,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  null,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  null,  null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    null,    RANDOM);    	non-compiled	[CE]  	23	None	replace
34	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  null,  false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  null,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  null,  false);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    null,    RANDOM);    	non-compiled	[CE]  	23	None	replace
35	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  RANDOM);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers  ==  null,  RANDOM);	  RandomStringUtils.checkArgument(count    ==    null,    letters);    	non-compiled	[CE]  	12	None	replace
36	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  letters);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers  ==  null,  letters);	  RandomStringUtils.checkArgument(count    ==    null,    letters);    	non-compiled	[CE]  	12	None	replace
37	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  Null,  RANDOM);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  Null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  Null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    Null,    RANDOM);    	non-compiled	[CE]  	78	None	replace
38	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  0,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  0,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  0,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    Null,    RANDOM);    	non-compiled	[CE]  	78	None	replace
39	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  RandomStringUtils.EMPTY);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  RandomStringUtils.EMPTY);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  RandomStringUtils.EMPTY);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    Null,    RANDOM);    	non-compiled	[CE]  	78	None	replace
40	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  true);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  true);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    false);    	non-compiled	[CE]  	45	None	replace
41	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  true);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  true);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    false);    	non-compiled	[CE]  	45	None	replace
42	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  false);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  false);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    false);    	non-compiled	[CE]  	45	None	replace
43	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  null);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  null);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null);    	non-compiled	[CE]  	54	None	replace
44	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	70	None	replace
45	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM,  false);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM,  false);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM,  false);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	70	None	replace
46	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  number,  null,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  number,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  number,  null,  RANDOM);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    RANDOM,    letters);    	non-compiled	[CE]  	76	None	replace
47	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers.length);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers.length);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers.length);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters.length);    	non-compiled	[CE]  	1	None	replace
48	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters.length);    	non-compiled	[CE]  	1	None	replace
49	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers.length  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers.length  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers.length  +  1);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters.length);    	non-compiled	[CE]  	1	None	replace
50	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  false,  RANDOM,  numbers);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  false,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  false,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    RANDOM,    letters);    	non-compiled	[CE]  	67	None	replace
51	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  true,  RANDOM,  numbers);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  true,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  true,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    RANDOM,    letters);    	non-compiled	[CE]  	67	None	replace
52	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  null,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  null,  RANDOM);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    RANDOM,    null);    	non-compiled	[CE]  	65	None	replace
53	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  false,  null);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  false,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  false,  null);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    RANDOM,    null);    	non-compiled	[CE]  	65	None	replace
54	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  0);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    0,    RANDOM);    	non-compiled	[CE]  	61	None	replace
55	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  -1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  -1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  -1);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    0,    RANDOM);    	non-compiled	[CE]  	61	None	replace
56	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    0,    RANDOM);    	non-compiled	[CE]  	61	None	replace
57	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  0,  end,  letters,  numbers,  null,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  0,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  0,  end,  letters,  numbers,  null,  RANDOM);	  RandomStringUtils.insert(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  	16	None	replace
58	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  number,  null,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  number,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  number,  null,  RANDOM);	  RandomStringUtils.insert(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  	16	None	replace
59	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  null,  numbers);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  null,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  null,  numbers);	  RandomStringUtils.insert(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  	16	None	replace
60	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  2);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  2);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  2);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  	31	None	replace
61	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  RANDOM  +  1);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  RANDOM  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  RANDOM  +  1);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  	31	None	replace
62	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  true,  RANDOM,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  true,  RANDOM,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  true,  RANDOM,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  	46	None	replace
63	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  	46	None	replace
64	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers  ==  0);	  RandomStringUtils.checkArgument(start    ==    0);    	non-compiled	[CE]  	55	None	replace
65	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  0,  0L);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  0,  0L);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  0,  0L);	  return    random(count,    start,    end,    letters,    numbers,    null,    0,    0);    	non-compiled	[CE]  	68	None	replace
66	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  0,  0);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    0,    0);    	non-compiled	[CE]  	68	None	replace
67	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  0);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    0,    0);    	non-compiled	[CE]  	68	None	replace
68	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  numbers);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  numbers);	  return    random(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	49	None	replace
69	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ",, ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ",, ");  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ",, ");	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM    +   ",   ");    	non-compiled	[CE]  	58	None	replace
70	[BUG]  [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  letters);	  RandomStringUtils.random(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	56	None	replace
71	[BUG]  [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);	  RandomStringUtils.random(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	56	None	replace
72	[BUG]  [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  false,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.random(count,  start,  end,  letters,  numbers,  false,  RANDOM);	  RandomStringUtils.random(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	56	None	replace
73	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  false);	  return    random(count,    start,    end,    letters,    numbers,    true,    null,    false);    	non-compiled	[CE]  	24	None	replace
74	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  true);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  true);	  return    random(count,    start,    end,    letters,    numbers,    true,    null,    false);    	non-compiled	[CE]  	24	None	replace
75	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  true);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  true);	  return    random(count,    start,    end,    letters,    numbers,    true,    null,    false);    	non-compiled	[CE]  	24	None	replace
76	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >  0);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  >  0);	  RandomStringUtils.checkArgument(count    >=    0);    	non-compiled	[CE]  	9	None	replace
77	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true,  RANDOM);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true,  RANDOM);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    false,    RANDOM);    	non-compiled	[CE]  	30	None	replace
78	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  false,  RANDOM,  null);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  false,  RANDOM,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  false,  RANDOM,  null);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    false,    RANDOM);    	non-compiled	[CE]  	30	None	replace
79	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  values);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  values);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  values);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  	79	None	replace
80	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  number);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  number);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  number);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  	79	None	replace
81	[BUG]  [BUGGY]  RandomStringUtils.checkState(count!=  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count!=  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count!=  0);	  RandomStringUtils.checkState(count    ==    0);    	non-compiled	[CE]  	71	None	replace
82	[BUG]  [BUGGY]  RandomStringUtils.checkState(count  >=  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count  >=  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count  >=  0);	  RandomStringUtils.checkState(count    ==    0);    	non-compiled	[CE]  	71	None	replace
83	[BUG]  [BUGGY]  RandomStringUtils.checkState(count  ==  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count  ==  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count  ==  1);	  RandomStringUtils.checkState(count    ==    0);    	non-compiled	[CE]  	71	None	replace
84	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  false);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  false);	  return    random(count,    start,    end,    letters,    numbers,    false,    true);    	non-compiled	[CE]  	64	None	replace
85	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  true);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  true);	  return    random(count,    start,    end,    letters,    numbers,    false,    true);    	non-compiled	[CE]  	64	None	replace
86	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  letters);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  	75	None	replace
87	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null);	  return    random(count,    start,    end,    letters,    numbers,    RANDOM,    false);    	non-compiled	[CE]  	63	None	replace
88	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  false);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  false);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    numbers);    	non-compiled	[CE]  	66	None	replace
89	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  numbers);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    numbers);    	non-compiled	[CE]  	66	None	replace
90	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  null,  RANDOM,  numbers);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  null,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  null,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    numbers);    	non-compiled	[CE]  	66	None	replace
91	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  letters,  numbers,  RANDOM);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  letters,  numbers,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  null,  letters,  numbers,  RANDOM);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  	13	None	replace
92	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  start,  end,  letters,  numbers);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  start,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  null,  start,  end,  letters,  numbers);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  	13	None	replace
93	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  letters,  numbers);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers  ==  null,  letters,  numbers);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  	13	None	replace
94	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  starts,  end,  letters,  numbers);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  starts,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  null,  starts,  end,  letters,  numbers);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  	13	None	replace
95	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM);    	non-compiled	[CE]  	74	None	replace
96	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  false,  null,  RANDOM);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  false,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  false,  null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM);    	non-compiled	[CE]  	74	None	replace
97	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  true,  RANDOM,  numbers);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  true,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  true,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    true,    RANDOM,    numbers);    	non-compiled	[CE]  	39	None	replace
98	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  0,  numbers);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  0,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  0,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    true,    RANDOM,    numbers);    	non-compiled	[CE]  	39	None	replace
99	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  0,  RANDOM,  numbers);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  0,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  0,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    true,    RANDOM,    numbers);    	non-compiled	[CE]  	39	None	replace
100	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(numbers,  RANDOM);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(numbers,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(numbers,  RANDOM);	  RandomStringUtils.checkNotNull(numbers);    	non-compiled	[CE]  	50	None	replace
101	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  numbers);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  numbers);	  RandomStringUtils.checkNotNull(numbers);    	non-compiled	[CE]  	50	None	replace
102	[BUG]  [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  numbers);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  numbers);	  return    RandomString.valueOf(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	59	None	replace
103	[BUG]  [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  RANDOM);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  RANDOM);	  return    RandomString.valueOf(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	59	None	replace
104	[BUG]  [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  null);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  null);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  null);	  return    RandomString.valueOf(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	59	None	replace
105	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  	7	None	replace
106	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  number,  null,  RANDOM);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  number,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  number,  null,  RANDOM);	  RandomStringUtils.remove(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  	42	None	replace
107	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  null,  RANDOM,  numbers);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  null,  RANDOM,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  null,  RANDOM,  numbers);	  RandomStringUtils.remove(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  	42	None	replace
108	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  null,  numbers);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  null,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  null,  numbers);	  RandomStringUtils.remove(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  	42	None	replace
109	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers,  null);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers,  null);	  RandomStringUtils.checkArgument(numbers    ==    null);    	non-compiled	[CE]  	11	None	replace
110	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers,  RANDOM);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers,  RANDOM);	  RandomStringUtils.checkArgument(numbers    ==    null);    	non-compiled	[CE]  	11	None	replace
111	[BUG]  [BUGGY]  RandomStringUtils.insert(ranDOM,  start,  end,  letters,  numbers,  null);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(ranDOM,  start,  end,  letters,  numbers,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(ranDOM,  start,  end,  letters,  numbers,  null);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null);    	non-compiled	[CE]  	14	None	replace
112	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RANDOM,  numbers);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    RANDOM,    letters);    	non-compiled	[CE]  	73	None	replace
113	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  RANDOM,  numbers);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    RANDOM,    letters);    	non-compiled	[CE]  	73	None	replace
114	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  RANDOM,  numbers,  true);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  RANDOM,  numbers,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  RANDOM,  numbers,  true);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    RANDOM,    letters);    	non-compiled	[CE]  	73	None	replace
115	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  true,  RANDOM,  numbers);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  true,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  true,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    RANDOM,    letters);    	non-compiled	[CE]  	73	None	replace
116	[BUG]  [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  true);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  true);	  return    random(count,    start,    end,    letters,    numbers,    true);    	non-compiled	[CE]  	27	None	replace
117	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  number,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  number,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  number,  null,  RANDOM);	  RandomStringUtils.invoke(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
118	[BUG]  [BUGGY]  RandomStringUtils.invoke(ranDOM,  start,  end,  letters,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(ranDOM,  start,  end,  letters,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(ranDOM,  start,  end,  letters,  null,  RANDOM);	  RandomStringUtils.invoke(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
119	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  0,  end,  letters,  numbers,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  0,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  0,  end,  letters,  numbers,  null,  RANDOM);	  RandomStringUtils.invoke(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
120	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  RANDOM,  null);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
121	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  2);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  2);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
122	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  RANDOM  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  RANDOM  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  RANDOM  +  1);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
123	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  >>  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  >>  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  >>  0);	  RandomStringUtils.checkArgument(count!=    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
124	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  null,  RANDOM);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
125	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  RANDOM);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
126	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  false);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
127	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  numbers);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  start,  end,  numbers);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
128	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  letters,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  end,  letters,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  start,  end,  letters,  null);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
129	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  null,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  null,  RANDOM,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  null,  RANDOM,  numbers);	  RandomStringUtils.setValue(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
130	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  null,  numbers);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  null,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  null,  numbers);	  RandomStringUtils.setValue(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
131	[BUG]  [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  false);	  return    random(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
132	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers!=  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers!=  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers!=  null);	  RandomStringUtils.checkArgument(count!=    null);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
133	[BUG]  [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  numbers);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  numbers);	  return    RandomStringUtils.random(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
134	[BUG]  [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  RANDOM);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  RANDOM);	  return    RandomStringUtils.random(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
135	[BUG]  [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  numbers);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.random(count,  start,  end,  letters,  numbers,  numbers);	  return    RandomStringUtils.random(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
136	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  start);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  start);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  start);	  RandomStringUtils.checkNotNull(start);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
137	[BUG]  [BUGGY]  RandomStringUtils.checkState(count  ==  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count  ==  RANDOM,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count  ==  RANDOM,  letters);	  RandomStringUtils.checkState(count    ==    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
138	[BUG]  [BUGGY]  RandomStringUtils.checkState(start  ==  RANDOM);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(start  ==  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(start  ==  RANDOM);	  RandomStringUtils.checkState(count    ==    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
139	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  true);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  true);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
140	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  false,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  false,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  false,  null);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
141	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  RANDOM,  true);	  return    random(count,    start,    end,    letters,    numbers,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
142	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(numbers,  count);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(numbers,  count);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(numbers,  count);	  RandomStringUtils.checkNotNull(count,    letters);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
143	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  letters,  numbers);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  letters,  numbers);	  RandomStringUtils.checkNotNull(count,    letters);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
144	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  1,  letters,  numbers);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  1,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  1,  letters,  numbers);	  RandomStringUtils.checkArgument(count    ==    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
145	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM,    numbers);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
146	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  0,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  0,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  0,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM,    numbers);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
147	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
148	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
149	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  false,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  false,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  false,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
150	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  null,  letters,  numbers);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count!=  null,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count!=  null,  letters,  numbers);	  RandomStringUtils.checkArgument(count    ==    null,    letters);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
151	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  0,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
152	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
153	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  false,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
154	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    0,    RANDOM);    	non-compiled	[CE]  	61	None	replace
155	[BUG]  [BUGGY]  RandomStringUtils.checkState(start  ==  0);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(start  ==  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(start  ==  0);	  RandomStringUtils.checkState(count    ==    RANDOM);    	non-compiled	[CE]  	52	None	replace
156	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  NULL);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  NULL);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  NULL);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null);    	non-compiled	[CE]  	4	None	replace
157	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  0,  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM,    numbers);    	non-compiled	[CE]  	37	None	replace
158	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  true,  null,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM,    numbers);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
159	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
160	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM,  0);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
161	[BUG]  [BUGGY]  RandomStringUtils.invoke(random,  start,  end,  letters,  null,  RANDOM);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(random,  start,  end,  letters,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(random,  start,  end,  letters,  null,  RANDOM);	  RandomStringUtils.invoke(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RandomStringUtils.EMPTY);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RandomStringUtils.EMPTY);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  RandomStringUtils.EMPTY);	  return    random(count,    start,    end,    letters,    numbers,    true,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
163	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(numbers,  start,  end,  numbers);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(numbers,  start,  end,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(numbers,  start,  end,  numbers);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
164	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  null,  start,  end,  letters,  numbers);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count!=  null,  start,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count!=  null,  start,  end,  letters,  numbers);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
165	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  start,  end);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  null,  start,  end);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  null,  start,  end);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
166	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  start,  end);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers  ==  null,  start,  end);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers  ==  null,  start,  end);	  RandomStringUtils.checkArgument(count    ==    null,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
167	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  null);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  null);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  0,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
169	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(letters,  start,  end,  letters);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(letters,  start,  end,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(letters,  start,  end,  letters);	  RandomStringUtils.checkNotNull(letters,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
170	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(letters,  start,  numbers);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(letters,  start,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(letters,  start,  numbers);	  RandomStringUtils.checkNotNull(letters,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
171	[BUG]  [BUGGY]  RandomStringUtils.add(random,  start,  end,  letters,  null,  RANDOM);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.add(random,  start,  end,  letters,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.add(random,  start,  end,  letters,  null,  RANDOM);	  RandomStringUtils.remove(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
172	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  NULL);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  NULL);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  null,  NULL);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
173	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(start  <  =  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(start  <  =  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(start  <  =  0);	  RandomStringUtils.checkArgument(start    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
174	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(start  >=  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(start  >=  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(start  >=  0);	  RandomStringUtils.checkArgument(start    ==    0);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
175	[BUG]  [BUGGY]  RandomStringUtils.checkState(count, "null ",  start,  end,  letters,  numbers);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count, "null ",  start,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count, "null ",  start,  end,  letters,  numbers);	  RandomStringUtils.checkNotNull(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
176	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  null,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  null,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
177	[BUG]  [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  RANDOM);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.random(count,  start,  end,  letters,  numbers,  RANDOM);	  RandomStringUtils.random(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
178	[BUG]  [BUGGY]  RandomStringUtils.analyze(count,  start,  end,  letters,  numbers,  null,  RANDOM);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.analyze(count,  start,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.analyze(count,  start,  end,  letters,  numbers,  null,  RANDOM);	  RandomStringUtils.random(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
179	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  3);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  3);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
180	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  RANDOM);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  RANDOM);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
181	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  0,  RANDOM);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  0,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  0,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM);    	non-compiled	[CE]  	74	None	replace
182	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  NULL);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  NULL);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  NULL);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    null);    	non-compiled	[CE]  	18	None	replace
183	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	70	None	replace
184	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ", ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ", ");  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ", ");	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  	70	None	replace
185	[BUG]  [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  letters);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomString.valueOf(count,  start,  end,  letters,  numbers,  letters);	  return    RandomString.valueOf(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	59	None	replace
186	[BUG]  [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  true);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  true);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  null,  true);	  return    random(count,    start,    end,    letters,    numbers,    null,    true);    	non-compiled	[CE]  	25	None	replace
187	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  0,  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  RANDOM,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    null,    0,    0);    	non-compiled	[CE]  	68	None	replace
188	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true,  null);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  true,  null);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    false,    RANDOM);    	non-compiled	[CE]  	30	None	replace
189	[BUG]  [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  letters);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  RandomStringUtils.random(count,  start,  end,  letters,  numbers,  letters);	  return    RandomStringUtils.random(count,    start,    end,    letters,    numbers);    	non-compiled	[CE]  	48	None	replace
190	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers, "numbers ");  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers, "numbers ");  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers, "numbers ");	  RandomStringUtils.checkArgument(numbers    ==    null);    	non-compiled	[CE]  	11	None	replace
191	[BUG]  [BUGGY]  return  randomly(count,  start,  end,  letters,  numbers,  false);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  randomly(count,  start,  end,  letters,  numbers,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  randomly(count,  start,  end,  letters,  numbers,  false);	  return    random(count,    start,    end,    letters,    numbers,    true);    	non-compiled	[CE]  	27	None	replace
192	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  false);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  false);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    false);    	non-compiled	[CE]  	45	None	replace
193	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  0);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  0,  0);	  RandomStringUtils.checkArgument(count    ==    1);    	non-compiled	[CE]  	10	None	replace
194	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  numbers);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(count,  start,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(count,  start,  numbers);	  RandomStringUtils.checkNotNull(count,    letters);    	non-compiled	[CE]  	51	None	replace
195	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ",. ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ",. ");  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ",. ");	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM    +   ",   ");    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
196	[BUG]  [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.remove(count,  start,  end,  letters,  numbers,  0);	  RandomStringUtils.remove(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
197	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  0);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
198	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(start!=  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(start!=  0);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(start!=  0);	  RandomStringUtils.checkArgument(count!=    0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
199	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  0,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  0,  0);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  0,  0);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
200	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  -1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  -1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  -1);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
201	[BUG]  [BUGGY]  RandomStringUtils.randomMultiply(count,  start,  end,  letters,  numbers,  null,  RANDOM);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.randomMultiply(count,  start,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.randomMultiply(count,  start,  end,  letters,  numbers,  null,  RANDOM);	  random(count,    start,    end,    letters,    numbers,    null,    NULL);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
202	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  RANDOM,  null);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  RANDOM,  null);	  random(count,    start,    end,    letters,    numbers,    null,    NULL);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
203	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  letters);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  RANDOM,  numbers,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    numbers);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
204	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ".   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ".   ");  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM  + ".   ");	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
205	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  null,  RANDOM,  letters);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  false,  null,  null,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  false,  null,  null,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    false,    null,    null,    RANDOM);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
206	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  letters);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  true,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  true,  letters);	  return    random(count,    start,    end,    letters,    numbers,    true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
207	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  1,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  1,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  1,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    true,    RANDOM,    numbers);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
208	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  RANDOM  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  RANDOM  +  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  RANDOM  +  1);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
209	[BUG]  [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  RANDOM,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.invoke(count,  start,  end,  letters,  numbers,  RANDOM,  letters);	  RandomStringUtils.invoke(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
210	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers,  letters);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  numbers,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    numbers);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
211	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  false);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  false);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    0,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
212	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  RANDOM);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    0,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
213	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  letters);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count  ==  0,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count  ==  0,  letters);	  RandomStringUtils.checkArgument(count    ==    null,    letters);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
214	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  Null,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    Null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
215	[BUG]  [BUGGY]  RandomStringUtils.add(random,  start,  end,  letters,  numbers,  null,  RANDOM);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.add(random,  start,  end,  letters,  numbers,  null,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.add(random,  start,  end,  letters,  numbers,  null,  RANDOM);	  RandomStringUtils.remove(count,    start,    end,    letters,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
216	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RandomStringUtils.EMPTY_STRING,  RANDOM);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  RandomStringUtils.EMPTY_STRING,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  RandomStringUtils.EMPTY_STRING,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
217	[BUG]  [BUGGY]  RandomStringUtils.checkNotNull(letters,  start,  end,  letters,  numbers);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkNotNull(letters,  start,  end,  letters,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkNotNull(letters,  start,  end,  letters,  numbers);	  RandomStringUtils.checkNotNull(letters,    start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
218	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(numbers,  numbers);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(numbers,  numbers);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(numbers,  numbers);	  RandomStringUtils.checkArgument(numbers    ==    null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
219	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  null,  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  RANDOM,  null,  false);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  RANDOM,  null,  false);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
220	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
221	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1,  RANDOM);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1,  RANDOM);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM  +  1,  RANDOM);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM    +    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
222	[BUG]  [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  names);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  names);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	random(count,  start,  end,  letters,  numbers,  null,  RANDOM,  names);	  random(count,    start,    end,    letters,    numbers,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
223	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  RANDOM,  numbers,  letters);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  RANDOM,  numbers,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  false,  null,  RANDOM,  numbers,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    false,    null,    RANDOM,    numbers);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
224	[BUG]  [BUGGY]  RandomStringUtils.checkState(count,  start,  end,  letters, "No  numbers  found ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkState(count,  start,  end,  letters, "No  numbers  found ");  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkState(count,  start,  end,  letters, "No  numbers  found ");	  RandomStringUtils.checkNotNull(count,    start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
225	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  RANDOM,  letters);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
226	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  NULL,  RANDOM);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  NULL,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  NULL,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
227	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  Null,  RANDOM);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  Null,  RANDOM);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  null,  Null,  RANDOM);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
228	[BUG]  [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  null,  FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  null,  FIELD_NAME);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.setValue(count,  start,  end,  letters,  numbers,  RANDOM,  null,  FIELD_NAME);	  RandomStringUtils.setValue(count,    start,    end,    letters,    numbers,    RANDOM,    null);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
229	[BUG]  [BUGGY]  RandomStringUtils.checkArgument(count!=  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.checkArgument(count!=  1);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.checkArgument(count!=  1);	  RandomStringUtils.checkArgument(count!=    0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
230	[BUG]  [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  RANDOM,  letters);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  RANDOM,  letters);  [BUGGY]      return  random(count,  start,  end,  letters,  numbers,  null,  RANDOM);  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	RandomStringUtils.insert(count,  start,  end,  letters,  numbers,  RANDOM,  letters);	  RandomStringUtils.insert(count,    start,    end,    letters,    numbers,    null,    RANDOM);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
231	[BUG]  [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  numbers);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  String  random(int  count,  int  start,  int  end,  boolean  letters,  boolean  numbers)  {      [BUGGY]  return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  [VARIABLES]  Random  RANDOM  int  count  end  start  boolean  letters  numbers  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	163	163	1	replace	return  random(count,  start,  end,  letters,  numbers,  null,  null,  0,  RANDOM,  numbers);	  return    random(count,    start,    end,    letters,    numbers,    null,    null,    RANDOM,    letters);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
