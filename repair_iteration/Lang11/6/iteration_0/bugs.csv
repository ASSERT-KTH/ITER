bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] while (count-- != 0) { [FE] AssertionFailedError [CONTEXT] } else { end = 'z' + 1; start = ' '; } } } char[] buffer = new char[count]; int gap = end - start; [BUGGY] while (count-- != 0) { [BUGGY] char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) { if(ch >= 56320 && ch <= 57343) { [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	250	250	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else { end = 'z' + 1; start = ' '; } } } char[] buffer = new char[count]; int gap = end - start; [BUGGY] [BUGGY] while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) { if(ch >= 56320 && ch <= 57343) { [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	250	250	1	add	
