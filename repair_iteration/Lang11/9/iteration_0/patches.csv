bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(count  ==  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	}  else  if(count  ==  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  }  else  if(count  <  =  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  <  =  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	}  else  if(count  <  =  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  }  else  if(count!=  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count!=  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	}  else  if(count!=  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  }  else  if(count  >=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]  }  else  if(count  >=  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	}  else  if(count  >=  0)  {	}  else  if  (count  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	  	}  else  if  (count  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  Character.toLowerCase(ch);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  Character.toLowerCase(ch);  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  Character.toLowerCase(ch);  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
7	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  chars[i];  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  chars[i];  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  chars[i];  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
8	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  random.charAt(i);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  random.charAt(i);  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  random.charAt(i);  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
9	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  ch;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  ch;  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  ch;  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
10	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  random.getChars(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  random.getChars(i);  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  buffer[i]  =  random.getChars(i);  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
11	[BUG]  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
12	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]!=  0)  {  return  buffer[i];  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]!=  0)  {  return  buffer[i];  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]!=  0)  {  return  buffer[i];  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
13	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]!=  0)  {  return  null;  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]!=  0)  {  return  null;  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
14	[BUG]  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]  ==  0)  {  return  buffer[i];  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]  ==  0)  {  return  buffer[i];  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(numbers)  {  for(int  i  =  start;  i  <  chars.length;  i++)  {  char[]  buffer[i]  =  random.charAt(i);  if(buffer[i]  ==  0)  {  return  buffer[i];  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
15	[BUG]  [BUGGY]    if(!letters)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(!letters)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(!letters)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
16	[BUG]  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  1 ");  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return   " ";  [BUGGY]    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  1 ");  }  [BUGGY]  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (chars  !=  null  &&  chars.length  ==  0)  {  throw  new  IllegalArgumentException( "The  chars  array  must  not  be  empty ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (chars  !=  null)  {  end  =  chars.length;  }  else  {  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4472135954999579	227	227	1	replace	    if(count  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  1 ");  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
