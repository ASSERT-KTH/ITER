projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoClassDefFoundErrore){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoSuchElementExceptionnsse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry!=false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name),!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)||!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null||other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==((ZipArchiveEntry)obj).{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null&&other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(obj.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!value.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other.exceptionHandler;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleMissingName(other.missingName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<null||other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(other.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469[Delete]
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.title)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other.objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>>false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<?>){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||externalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null||externalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||externalAttributes.length<2){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.type)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)||!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=((ZipArchiveEntry)obj).getKey();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=(Integer)obj.getValue();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getValue();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=((ZipArchiveEntry)obj).getValue();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=(Integer)obj.getKey();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.key)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){try{}catch(NoClassDefFoundErrore){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(Throwablee){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoClassDefFoundErrore){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj==null)?false:other.obj.equals(obj.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj!=null)?false:other.obj.equals(obj.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?true:other.obj.equals(obj.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(this.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj!=null)?false:other.obj.equals(obj.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other.internalAttributes!=null){if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try>>if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other.internalAttributes!=null){if(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!this.entryName.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!this.entryName.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!this.entryName.equals(other.title)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)&&!this.entryName.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!this.sourceName.equals(other.sourceName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)other.obj.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.getValue();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.cloneTree();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)other.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.cloneTarget();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)other.type.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+name.equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+entryName.equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)||!alias.equals(other.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)&&!alias.equals(other.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equalsIgnoreCase(other.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)||!alias.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!alias.equals(other.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)||!alias.equals(this.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+name.equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.getClass());
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.getClass());
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("ZipArchiveEntry.equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!value.equals(other.value)||!value.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!extraFields.equals(other.extraFields)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!value.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!other.value.equals(value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!value.equals(other.value)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&super.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.internalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.id);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&super.equals(other.super);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.type);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=null){aughtExceptionHandler.handleEquals(other.handle);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,other.handle);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=null){aughtExceptionHandler.handleEquals(other.handle);}else{thrownewIllegalArgumentException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,this);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)&&!extraFields.equals(other.extraFields)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!pass.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj==null)?false:other.obj.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj==null)?false:other.obj.equals(this.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.obj==null)?false:other.obj.equals(this.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)){try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){try{}catch(Throwablee){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>>false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<Object>){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.key)||!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry)||!(other.nameinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.url!=null||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!url.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.url!=null||!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)obj).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other.parent).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){safeName.equals(other.name)&&!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){try{}catch(NoSuchElementExceptionnsse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoSuchElementExceptionnse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){try{}catch(NoSuchElementExceptionnse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(Throwablense){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+name.equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.getName());
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newArrayList<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>(extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newTreeMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)||!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)&&!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)||!name.equalsIgnoreCase(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,Object>(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newArrayList<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newTreeMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,Object>(extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)other).returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).this.name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).getName().equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)other).returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469||(objinstanceofZipArchiveEntry==false)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry!=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes!=null||externalAttributes.equals(other.externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.extendAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes!=null||externalAttributes.contains(other.externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.extraAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null||externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.super!=null){returnsuper.equals(other.super);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equalsIgnoreCase(other.super);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)||super.equals(other.super);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super,name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry||!(other.nameinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.getClass()instanceofZipArchiveEntry)&&!(other.getClass()instanceofZipArchiveEntry||!(other.getClass()instanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry!=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry>=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry!=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(other.internalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(1);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newTreeMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other.parent).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getValue();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try>>if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.extraFields!=null){returnsuper.equals(other.extraFields);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.extraFields!=null){returnsuper.equals(other.extraFields);}else{returnsuper.equals(other.extraFields);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&super.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!name.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equalsIgnoreCase(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("".equals(other.url));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.path)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.sourceName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.path)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newTreeMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>(extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>(other.externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newArrayList<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=(String)obj.getValue();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=(String)obj;if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==((ZipArchiveEntry)obj).{returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try>>((ZipArchiveEntry)obj).{returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{((ZipArchiveEntry)obj).{returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{((ZipArchiveEntry)obj).{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(entryName.equalsIgnoreCase(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(entryName.equals(entryName)||entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString().trim();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=(String)obj.toString();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(entryName.startsWith(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){if(other.name!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){if(other.name!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){if(other.name==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){if(other.name==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){if(other.name!=null){returnfalse;}}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.safeName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.key);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.safename);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469SafeName.equals(other.safeName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null||other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null&&other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.internalAttributes==null||other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry||!(other.nameinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.getClass()instanceofZipArchiveEntry)&&!(other.getClass()instanceofZipArchiveEntry||!(other.getClass()instanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)||!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)&&!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.url)||!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.key)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)||!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.safeName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.key)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.safename)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.safeName)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>>false){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<Object>){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(!(objinstanceofZipArchiveEntry&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+name.equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try>=if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry!=false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry>=false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry>>false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry[Delete]false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.path)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469finalaughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>(other);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+name.equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalpath:"+other.path);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Zippath:"+name.equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalsother.path:"+other.path);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){safeName.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisip.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandlerinstanceofZipArchiveEntry){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}else{thrownewIllegalArgumentException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==(ZipArchiveEntry)other.parent;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469(ZipArchiveEntry)other.obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry==false)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry!=false)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry!=false)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.name!=null||!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.id);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.originalName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.triggers);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.path);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry==false)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry||objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){oricarors.equals(other.name);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.item);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){oricarors.equals(other.name);}else{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newExceptionHandler<ZipArchiveEntry>(other.exceptionHandler);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newExceptionHandler<ZipArchiveEntry>(other.exceptionHandler);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)||!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.path)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnother.name.equals(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name)&&!name.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name)||name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name)&&name.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name)&&name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(!(objinstanceofZipArchiveEntry)){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>>false){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<K,V>){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<?>){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).returnnull;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).this.returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(name),!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(obj),!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name),!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name),!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)&&!internalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?true:other.obj.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj!=null)?false:other.obj.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj!=null)?false:other.obj.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equalsIgnoreCase(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString().trim();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=(String)obj.toString();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Aleger<?>copy=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=(Integer)obj.getValue();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=((ZipArchiveEntry)obj).getValue();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469IntegerentryName=(Integer)obj.getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(objinstanceofZipArchiveEntry==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry!=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(objinstanceofZipArchiveEntry!=false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry==false){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=false){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry>=false){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(!(objinstanceofZipArchiveEntry)&&!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469||(objinstanceofZipArchiveEntry!=false)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469||objinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other.externalAttributes!=null){if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.value!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||other.value.equals(value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.value==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value==null||other.value.equals(value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||other.value.equals(this.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofClass<?>)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry||!(objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofClass<?>)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry||!(other.nameinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry||!(objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry||!(objinstanceofClass<?>)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+name.equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)obj).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other.parent).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)){if(other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entry)){if(other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)){if(other.entryName==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null||other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.missingName!=null){aughtExceptionHandler.handleMissingName(other.missingName);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleMissingName(other.error);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleMissingName(other.missingName,name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleMissingName(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!url.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.name)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(obj==null||!name.equals(other.name)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!url.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,obj,name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,newZipArchiveEntry(obj));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes==null||externalAttributes.equals(other.externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes!=null||externalAttributes.length<2){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.extraFields!=null)?null:other.extraFields.equals(this.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.extraFields!=null)?null:this.extraFields.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.extraFields!=null)?this.extraFields:other.extraFields;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.extraFields!=null)?null:other.extraFields.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.extraFields!=null)?null:other.extraFields.equals(externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(other.externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newTreeMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newHashMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.extraFields!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try>>if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)&&!extraFields.equals(other.extraFields)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(!name.equals(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisipa.equals(other.nisipa)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisipa.equals(other.nisipa)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469comboFields.equals(other.comboFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getValue();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(entryName.equalsIgnoreCase(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(entryName.startsWith(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(entryName.equals(entryName)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extendAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.externalAttributes)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.externalAttributes)&&name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null&&other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null&&other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null||other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469SafeName.equals(other.name)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.extraFields!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.extendAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.extraAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("".equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalStateException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("ZipArchiveEntryisnotavalidZipArchiveEntry.");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("".equals(other.id));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("".equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("ZipArchiveEntryisnotavalidZipArchiveEntry!");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null||other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null||externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<null||externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null||other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<null||other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.type)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequaltype:"+name.equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.name!=null||!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.name==null||!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)||name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry||!(otherinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.sourceinstanceofZipArchiveEntry)&&!(other.sourceinstanceofZipArchiveEntry||!(other.sourceinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.valueinstanceofZipArchiveEntry)&&!(other.valueinstanceofZipArchiveEntry||!(other.valueinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newArrayList<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)&&!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null){if(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.entryName!=name){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExtraFields<ZipArchiveEntry>)obj.getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Annotationcopy=((ZipArchiveEntry)obj).getData();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getValue();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Annotationcopy=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getData();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other.getParent()).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other.obj).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)other).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other.exceptionHandler;}else{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.extraFields!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.extends!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.extendAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.entry!=name){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.entry==name){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!name.equals(other.value);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!name.equals(other.type);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!name.equals(other.url);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)||!name.equals(other.name)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj==null){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other!=null){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other==null){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.toString();if(copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExtraFields<ZipArchiveEntry>)obj.toString();if(copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469combin[]copy=((ZipArchiveEntry)obj).toString();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.toString();if(copy.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.toString();if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469combin[]copy=((ZipArchiveEntry)obj).toString();if(entryName.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469combin[]copy=((ZipArchiveEntry)obj).toString();if(name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.extends==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.url!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)||other.url!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)&&other.sourceName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!name.equals(other.title)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!this.entryName.equals(other.type)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!this.extraFields.equals(other.extraFields)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other!=null){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=this){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other==null){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.equals(other.obj)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.getClass().isArray()||!obj.getClass().equals(other.class)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.getClass().equals(other.getClass())){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.missingName!=null){aughtExceptionHandler.handleMissingName(other.missingName);}else{thrownewIllegalArgumentException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.missingName!=null){aughtExceptionHandler.handleMissingName(other.missingName);}else{thrownewIllegalStateException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry||!(otherinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.sourceinstanceofZipArchiveEntry)&&!(other.sourceinstanceofZipArchiveEntry||!(other.sourceinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.valueinstanceofZipArchiveEntry)&&!(other.valueinstanceofZipArchiveEntry||!(other.valueinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(other.objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry)||!(otherinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.sourceinstanceofZipArchiveEntry)&&!(other.sourceinstanceofZipArchiveEntry)||!(other.sourceinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry)||!(other.valueinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.title!=null||!name.equals(other.title)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnthis.name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}else{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=null||other.exceptionHandler!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}else{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,source);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<Object>){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj==null){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other==null){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.value==null||!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.value!=null||!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)||!externalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)&&!this.internalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler==null){exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other!=null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler!=null){exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{((ZipArchiveEntry)other).{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==((ZipArchiveEntry)other).{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.key)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value==null||!name.equals(other.value)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("").equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&!name.equals(other.type);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&!name.equals(other.value);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){try{}catch(NoSuchElementExceptionnse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){try{}catch(NoSuchElementExceptionnsse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).getName().returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)other.obj).returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle==null){aughtExceptionHandler.handleEquals(other.handle);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=null){aughtExceptionHandler.handleEquals(other.handle);}else{thrownewIllegalStateException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException(""+name.equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.entryName!=null||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!type.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entry!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)){if(other.entryName!=null){returnfalse;}}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.type)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.type)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)other).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null&&other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null||other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>(other.internalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>(2);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newArrayHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.type)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!obj.equals(other.name)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("".equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("".equalsIgnoreCase(other.id));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("".equalsIgnoreCase(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||!name.equals(other.value)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)&&other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.entryName!=null||!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(otherinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.getClass()!=getClass()){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.nameinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||other.value.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469sigurantaelseif(!safeName.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry||!(otherinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry||!(objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.getClass()instanceofZipArchiveEntry)&&!(other.getClass()instanceofZipArchiveEntry||!(other.getClass()instanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.sourceinstanceofZipArchiveEntry)&&!(other.sourceinstanceofZipArchiveEntry||!(other.sourceinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==(ZipArchiveEntry)other;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(otherinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||other.internalAttributes.contains(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||other.internalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||other.internalAttributes.equals(externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&other.getClass()!=getClass()){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(otherinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.extraFields=(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry<Object>)obj).returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getKey();if(copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getKey();if(copy.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getData();if(copy!=null||copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getKey();if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getObject();if(copy!=null||copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj;if(copy!=null||copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){if(other.value!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){if(other.name==null){returnfalse;}}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){if(other.value!=null){returnfalse;}}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safetyName.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469SafeName.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalname:"+name.equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalpath:"+name.equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalpathtoother.path:"+other.path);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<Object>){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other==null){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newArrayList<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(name==null||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(name!=null||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;if(name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryother=(ZipArchiveEntry)obj;returnname.equals(other.name);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){if(!name.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.name!=null||!name.equals(other.name)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(name.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!obj.equals(other.obj)){try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)){try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){try{}catch(NoClassDefFoundErrore){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)){try{}catch(NoClassDefFoundErrore){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!value.equals(other.value)&&other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.nameinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.sourceinstanceofZipArchiveEntry)&&!(other.sourceinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.valueinstanceofZipArchiveEntry)&&!(other.valueinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(other.objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(otherinstanceofZipArchiveEntry!=false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).getName().returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.internal);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&other.externalAttributes==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&other.externalAttributes==false){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)&&other.type!=other.type){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisipTo(other.name){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name)==if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisipHashMap.equals(other.nisipHashMap)){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name),objinstanceofZipArchiveEntry){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name),objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisipHashMap.equals(other.nisipHashMap);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!entryName.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!name.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.getKey();if(!copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(otherinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.objinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.name==null||!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.key)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.safeName)&&!name.equals(other.key)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException(""+name.equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalentryname:"+name.equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj.toString();if(!copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExtraFields<ZipArchiveEntry>)obj.toString();if(!copy.equals(other.copy)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!name.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.extendAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!name.equals(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)&&!extraFields.equals(other.extraFields)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)&&other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>(8);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>(other.extends);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null||other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.entryName!=null||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,Object>(outerAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!oricarors.equals(other.name)){oricarors.equals(other.name);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.add(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.entryName),!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name,!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)other.getParent()).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)other).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||externalAttributes.contains(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj==null){if(!obj.equals(other.obj)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.getClass().equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.getClass().isArray()){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.getClass().equals(other.class)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.getObject();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.toArray(newExternalAttributes());
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException(".");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.entry==name){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(other.entry!=name){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entry.equals(other.entry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entries.equals(other.entries)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes==null||externalAttributes.contains(other.externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes==null||other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null||internalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.parent==null||other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)&&other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Can'tequalpath:"+name.equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalpath:"+name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("Cannotequalpath:"+entryName.equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<0||other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<node||other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<null||externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)&&!externalAttributes.equals(other.externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)&&!id.equals(other.id)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry!=null){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj==null)?false:other.obj.equals(this);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!safeName.equals(other.safeName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null&&other.parent!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(4);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(owner);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj==null){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj==this){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)other.obj).returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null){other.internalAttributes=newLinkedHashMap<String,Object>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>(externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(otherinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=this){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.isArchiveEntry()){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.equals(other.object)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=null){if(!obj.isArchive()){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.externalAttributes!=null){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entryName)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){try{}catch(NoSuchElementExceptionnsme){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!name.equals(other.externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields,obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields)&&!property.equals(other.property);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)&&!base.equals(other.base)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.extraFields=(ZipArchiveEntry)this.extraFields.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.extraFields=(ZipArchiveEntry)this.extraFields.equal(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<?>){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=this){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(other.obj==null)?false:other.obj.equals(other.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(entryName),!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler==null){exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.path)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getValue();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributes<ZipArchiveEntry>copy=(ExternalAttributes<ZipArchiveEntry>)obj;if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.value);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)&&!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)&&!name.equals(other.path)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.parent==(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)&&!this.externalAttributes.equals(other.externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(e.getCause()!=null){try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!separator.equals(other.separator)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!type.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&!property.equals(other.property);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&!name.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super)&&!name.equals(other.url);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.key)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469nisip.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnnewIllegalStateException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("ZipArchiveEntryisnull.");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("ZipArchiveEntryisnotanobjectoftype");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.objinstanceofZipArchiveEntry)&&!(other.objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.nameinstanceofZipArchiveEntry)&&!(other.valueinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null||internalAttributes.equals(other.internalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null||other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry<?>){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=this){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).{returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)||!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!oricarors.equals(other.name)){oricarors.equals(other.name);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!oricarors.equals(other.name)){oricarors.equals(other.originalName);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler==null){exceptionHandler=(ZipArchiveEntry)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler!=null){exceptionHandler=(ZipArchiveEntry)obj;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!value.equals(other.value)&&other.internalAttributes==PLATFORM_UNIX){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!base.equals(other.base)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.url);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)other.parent).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)obj).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==((ZipArchiveEntry)other.parent).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.parent!=((ZipArchiveEntry)obj).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.type);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+Name.equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getValue();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey().trim();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){if(!name.equals(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){if(!name.equals(other.name)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){if(!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){if(!name.equals(other.name)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleMissingName(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.missingName!=null){aughtExceptionHandler.handleMissingName(other.missingName);}else{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||other.value.equals(externalAttributes)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null||other.value.equals(extraFields)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString()+1;if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString()+","+entryName;if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!safeName.equals(other.name)){safeName.equals(other.name);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)||!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(obj!=this){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(!(otherinstanceofZipArchiveEntry)&&!(otherinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnentryName.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name)&&!name.equals(other.type);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException(",");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)this.extraFields.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)other.attributes.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)&&other.entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(other.externalAttributes!=null){if(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)||!name.equalsIgnoreCase(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equalsIgnoreCase(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entry.equals(other.entry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entry)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException(""+Name.equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.key)&&!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)&&!obj.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString()+1;if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){stringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(4);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(8);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(2);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(other.objinstanceofZipArchiveEntry)&&!(other.objinstanceofZipArchiveEntry||!(other.objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.key)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!this.entryName.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null)returnfalse;aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.externalAttributes==other.externalAttributes)?super.equals(other.externalAttributes):null;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.externalAttributes==other.externalAttributes)?null:this.externalAttributes;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.externalAttributes==other.externalAttributes)?super.equals(other.extraFields):null;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.externalAttributes==other.externalAttributes)?null:this.extraFields.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(this.extraFields==null)?false:other.extraFields.equals(extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("").equals(other.getName());
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException(""+name.equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.getKey()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entryName)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entryName)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entryName)&&!i.equals(other.id)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry==false||objinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469orig(objinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(!entry.equals(entry.getKey())){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getName().equals(entry.getName())){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(objinstanceofZipArchiveEntry){ZipArchiveEntryentry=(ZipArchiveEntry)obj;if(entry.getName().equals(entry.getName())){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry<K,V>){StringentryName=((ZipArchiveEntry<K,V>)obj).getKey();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey().toLowerCase();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey().trim();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>(other.exceptionName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getParent(){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler==null)returnfalse;aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.exceptionHandler!=exceptionHandler){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(exceptionHandler==null){aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=obj){aughtExceptionHandler.handleEquals(other.handle,obj);}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=obj){aughtExceptionHandler.handleEquals(other.handle,obj);}else{thrownewIllegalStateException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=obj){aughtExceptionHandler.handleEquals(other.handle,obj);}else{thrownewIllegalArgumentException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.handle!=obj){aughtExceptionHandler.handleEquals(other.handle,obj);}else{thrownewRuntimeException("");}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(obj==null||!name.equals(other.type)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null||entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null||other.entryName==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null||entryName.length()==0){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.entryName)&&!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.entryName)&&name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returntrue;}
