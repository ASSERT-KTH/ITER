projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469while(objinstanceofZipArchiveEntry){if(!(objinstanceofZipArchiveEntry)||!(objinstanceofString)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry)||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofZipArchiveEntry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!(objinstanceofZipArchiveEntry)&&!(objinstanceofZipArchiveEntry||!(objinstanceofClass<?>))){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(!entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).getKey();if(!extraFields.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnname.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){StringentryName=((ZipArchiveEntry)obj).toString();if(entryName.equals(entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry){if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.value)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.name));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469Throwables.thrownewIllegalArgumentException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.path));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.type));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.getClass()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.getName()));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{if(other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469another.externalAttributes=newLinkedHashMap<String,Object>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoClassDefFoundErrore){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoSuchElementExceptionnsse){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try{}catch(NoSuchElementExceptione){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.type)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.title)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469ExternalAttributesother=(ExternalAttributes)obj.clone();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry==false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(objinstanceofZipArchiveEntry){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).returntrue;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(objinstanceofZipArchiveEntry!=false){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469((ZipArchiveEntry)obj).returnfalse;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.name),!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equalsIgnoreCase(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)&&!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469safeName.equals(other.name)||!name.equals(other.name);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalStateException("");
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.name)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent==null||other.internalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)||!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(other.value!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469rim(other.externalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.name)&&!obj.equals(other.url)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.name!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getParent();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==((ZipArchiveEntry)obj).{returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getName();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=((ZipArchiveEntry)obj).getParent(){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent!=null&&other.internalAttributes!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.super);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(obj.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.extraFields);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469other.internalAttributes=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469returnsuper.equals(other.externalAttributes);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.entry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!value.equals(other.value)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)other.exceptionHandler;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ExceptionHandler<ZipArchiveEntry>)obj;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=(ZipArchiveEntry)other.exceptionHandler;
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler<ZipArchiveEntry>exceptionHandler=newAssertionFailedErrorHandler<ZipArchiveEntry>();
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(objinstanceofZipArchiveEntry){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleMissingName(other.missingName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle,obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469aughtExceptionHandler.handleEquals(other.handle);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!alias.equals(other.alias)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469parent<null||other.externalAttributes==null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469thrownewIllegalArgumentException("".equals(other.entryName));
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469return(obj==null)?false:other.obj.equals(other.obj);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469if(other.entryName!=null){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)||!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.type)&&!this.entryName.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469[Delete]
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(!name.equals(other.entryName)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469oricarors.equals(other.entryName);
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469}elseif(!name.equals(other.entry)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.pass)){returnfalse;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469elseif(!name.equals(other.url)){returntrue;}
projects/Compress6/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java469try==if(other.externalAttributes!=null){returnfalse;}
